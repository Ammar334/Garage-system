

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Wed Oct 04 17:31:56 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    68                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    69                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    70                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    71   000000                     
    72                           ; Generated 23/03/2023 GMT
    73                           ; 
    74                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    75                           ; All rights reserved.
    76                           ; 
    77                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    78                           ; 
    79                           ; Redistribution and use in source and binary forms, with or without modification, are
    80                           ; permitted provided that the following conditions are met:
    81                           ; 
    82                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    83                           ;        conditions and the following disclaimer.
    84                           ; 
    85                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    86                           ;        of conditions and the following disclaimer in the documentation and/or other
    87                           ;        materials provided with the distribution. Publication is not required when
    88                           ;        this file is used in an embedded application.
    89                           ; 
    90                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    91                           ;        software without specific prior written permission.
    92                           ; 
    93                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    94                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    95                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    96                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    97                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    98                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    99                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   100                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   101                           ; 
   102                           ; 
   103                           ; Code-generator required, PIC18F4620 Definitions
   104                           ; 
   105                           ; SFR Addresses
   106   000000                     
   107                           	psect	idataCOMRAM
   108   0029C8                     __pidataCOMRAM:
   109                           	callstack 0
   110                           
   111                           ;initializer for _numper_places
   112   0029C8  05                 	db	5
   113                           
   114                           ;initializer for _motor_2
   115   0029C9  22                 	db	34
   116   0029CA  2A                 	db	42
   117                           
   118                           ;initializer for _motor_1
   119   0029CB  12                 	db	18
   120   0029CC  1A                 	db	26
   121                           
   122                           ;initializer for _pir2
   123   0029CD  7A                 	db	122
   124                           
   125                           ;initializer for _pir1
   126   0029CE  72                 	db	114
   127                           
   128                           	psect	idataBANK0
   129   002902                     __pidataBANK0:
   130                           	callstack 0
   131                           
   132                           ;initializer for _lat_registers
   133   002902  89                 	db	137
   134   002903  0F                 	db	15
   135   002904  8A                 	db	138
   136   002905  0F                 	db	15
   137   002906  8B                 	db	139
   138   002907  0F                 	db	15
   139   002908  8C                 	db	140
   140   002909  0F                 	db	15
   141   00290A  8D                 	db	141
   142   00290B  0F                 	db	15
   143                           
   144                           ;initializer for _port_registers
   145   00290C  80                 	db	128
   146   00290D  0F                 	db	15
   147   00290E  81                 	db	129
   148   00290F  0F                 	db	15
   149   002910  82                 	db	130
   150   002911  0F                 	db	15
   151   002912  83                 	db	131
   152   002913  0F                 	db	15
   153   002914  84                 	db	132
   154   002915  0F                 	db	15
   155                           
   156                           ;initializer for _tris_registers
   157   002916  92                 	db	146
   158   002917  0F                 	db	15
   159   002918  93                 	db	147
   160   002919  0F                 	db	15
   161   00291A  94                 	db	148
   162   00291B  0F                 	db	15
   163   00291C  95                 	db	149
   164   00291D  0F                 	db	15
   165   00291E  96                 	db	150
   166   00291F  0F                 	db	15
   167                           
   168                           ;initializer for _lcd_1
   169   002920  03                 	db	3
   170   002921  0B                 	db	11
   171   002922  13                 	db	19
   172   002923  1B                 	db	27
   173   002924  23                 	db	35
   174   002925  2B                 	db	43
   175   002926  33                 	db	51
   176   002927  3B                 	db	59
   177   002928  0A                 	db	10
   178   002929  02                 	db	2
   179                           
   180                           	psect	smallconst
   181   001000                     __psmallconst:
   182                           	callstack 0
   183   001000  00                 	db	0
   184   001001                     _btn_values:
   185                           	callstack 0
   186   001001  31                 	db	49
   187   001002  32                 	db	50
   188   001003  33                 	db	51
   189   001004  34                 	db	52
   190   001005  35                 	db	53
   191   001006  36                 	db	54
   192   001007  37                 	db	55
   193   001008  38                 	db	56
   194   001009  39                 	db	57
   195   00100A  2A                 	db	42
   196   00100B  30                 	db	48
   197   00100C  23                 	db	35
   198   00100D                     __end_of_btn_values:
   199                           	callstack 0
   200   000000                     _TMR3L	set	4018
   201   000000                     _TMR3H	set	4019
   202   000000                     _TMR1L	set	4046
   203   000000                     _TMR1H	set	4047
   204   000000                     _INTCON2bits	set	4081
   205   000000                     _EECON2	set	4007
   206   000000                     _CCPR2L	set	4027
   207   000000                     _CCPR2H	set	4028
   208   000000                     _CCPR1L	set	4030
   209   000000                     _CCPR1H	set	4031
   210   000000                     _ADRESL	set	4035
   211   000000                     _ADRESH	set	4036
   212   000000                     _ADCON1bits	set	4033
   213   000000                     _INTCONbits	set	4082
   214   000000                     _TRISD	set	3989
   215   000000                     _TRISC	set	3988
   216   000000                     _TRISB	set	3987
   217   000000                     _TRISE	set	3990
   218   00100D                     STR_4:
   219   00100D  41                 	db	65	;'A'
   220   00100E  76                 	db	118	;'v'
   221   00100F  61                 	db	97	;'a'
   222   001010  69                 	db	105	;'i'
   223   001011  6C                 	db	108	;'l'
   224   001012  61                 	db	97	;'a'
   225   001013  62                 	db	98	;'b'
   226   001014  6C                 	db	108	;'l'
   227   001015  65                 	db	101	;'e'
   228   001016  20                 	db	32
   229   001017  50                 	db	80	;'P'
   230   001018  6C                 	db	108	;'l'
   231   001019  61                 	db	97	;'a'
   232   00101A  63                 	db	99	;'c'
   233   00101B  65                 	db	101	;'e'
   234   00101C  73                 	db	115	;'s'
   235   00101D  20                 	db	32
   236   00101E  3A                 	db	58	;':'
   237   00101F  20                 	db	32
   238   001020  00                 	db	0
   239   001021                     STR_1:
   240   001021  25                 	db	37
   241   001022  69                 	db	105	;'i'
   242   001023  00                 	db	0
   243   001024  00                 	db	0	; dummy byte at the end
   244   000000                     
   245                           	psect	nvBANK0
   246   0000EA                     __pnvBANK0:
   247                           	callstack 0
   248   0000EA                     _ret:
   249                           	callstack 0
   250   0000EA                     	ds	1
   251   000000                     _PORTBbits	set	3969
   252   000000                     _PIE1bits	set	3997
   253   000000                     _ADCON2bits	set	4032
   254   000000                     _ADCON0bits	set	4034
   255   000000                     _LATA	set	3977
   256   000000                     _PORTE	set	3972
   257   000000                     _PORTD	set	3971
   258   000000                     _PORTC	set	3970
   259   000000                     _PORTB	set	3969
   260   000000                     _PORTA	set	3968
   261   000000                     _TRISA	set	3986
   262   000000                     _PIE2bits	set	4000
   263   000000                     _CCP2CONbits	set	4026
   264   000000                     _CCP1CONbits	set	4029
   265   000000                     _PIR1bits	set	3998
   266   000000                     _T2CONbits	set	4042
   267   000000                     _T1CONbits	set	4045
   268   000000                     _T0CONbits	set	4053
   269   000000                     _INTCON3bits	set	4080
   270   000000                     _EECON1bits	set	4006
   271   000000                     _EEDATA	set	4008
   272   000000                     _EEADR	set	4009
   273   000000                     _EEADRH	set	4010
   274   000000                     _T3CONbits	set	4017
   275   000000                     _PIR2bits	set	4001
   276   000000                     _LATE	set	3981
   277   000000                     _LATD	set	3980
   278   000000                     _LATC	set	3979
   279   000000                     _LATB	set	3978
   280   000000                     _TMR0H	set	4055
   281   000000                     _TMR0L	set	4054
   282   000000                     _TMR2	set	4044
   283                           
   284                           ; #config settings
   285                           
   286                           	psect	cinit
   287   00248C                     __pcinit:
   288                           	callstack 0
   289   00248C                     start_initialization:
   290                           	callstack 0
   291   00248C                     __initialization:
   292                           	callstack 0
   293                           
   294                           ; Initialize objects allocated to BANK0 (40 bytes)
   295                           ; load TBLPTR registers with __pidataBANK0
   296   00248C  0E02               	movlw	low __pidataBANK0
   297   00248E  6EF6               	movwf	tblptrl,c
   298   002490  0E29               	movlw	high __pidataBANK0
   299   002492  6EF7               	movwf	tblptrh,c
   300   002494  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   301   002496  6EF8               	movwf	tblptru,c
   302   002498  EE00  F0C0         	lfsr	0,__pdataBANK0
   303   00249C  EE10 F028          	lfsr	1,40
   304   0024A0                     copy_data0:
   305   0024A0  0009               	tblrd		*+
   306   0024A2  CFF5 FFEE          	movff	tablat,postinc0
   307   0024A6  50E5               	movf	postdec1,w,c
   308   0024A8  50E1               	movf	fsr1l,w,c
   309   0024AA  E1FA               	bnz	copy_data0
   310                           
   311                           ; Initialize objects allocated to COMRAM (7 bytes)
   312                           ; load TBLPTR registers with __pidataCOMRAM
   313   0024AC  0EC8               	movlw	low __pidataCOMRAM
   314   0024AE  6EF6               	movwf	tblptrl,c
   315   0024B0  0E29               	movlw	high __pidataCOMRAM
   316   0024B2  6EF7               	movwf	tblptrh,c
   317   0024B4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   318   0024B6  6EF8               	movwf	tblptru,c
   319   0024B8  EE00  F076         	lfsr	0,__pdataCOMRAM
   320   0024BC  EE10 F007          	lfsr	1,7
   321   0024C0                     copy_data1:
   322   0024C0  0009               	tblrd		*+
   323   0024C2  CFF5 FFEE          	movff	tablat,postinc0
   324   0024C6  50E5               	movf	postdec1,w,c
   325   0024C8  50E1               	movf	fsr1l,w,c
   326   0024CA  E1FA               	bnz	copy_data1
   327                           
   328                           ; Clear objects allocated to BANK1 (32 bytes)
   329   0024CC  EE01  F000         	lfsr	0,__pbssBANK1
   330   0024D0  0E20               	movlw	32
   331   0024D2                     clear_0:
   332   0024D2  6AEE               	clrf	postinc0,c
   333   0024D4  06E8               	decf	wreg,f,c
   334   0024D6  E1FD               	bnz	clear_0
   335                           
   336                           ; Clear objects allocated to BANK0 (64 bytes)
   337   0024D8  EE00  F080         	lfsr	0,__pbssBANK0
   338   0024DC  0E40               	movlw	64
   339   0024DE                     clear_1:
   340   0024DE  6AEE               	clrf	postinc0,c
   341   0024E0  06E8               	decf	wreg,f,c
   342   0024E2  E1FD               	bnz	clear_1
   343                           
   344                           ; Clear objects allocated to COMRAM (28 bytes)
   345   0024E4  EE00  F05A         	lfsr	0,__pbssCOMRAM
   346   0024E8  0E1C               	movlw	28
   347   0024EA                     clear_2:
   348   0024EA  6AEE               	clrf	postinc0,c
   349   0024EC  06E8               	decf	wreg,f,c
   350   0024EE  E1FD               	bnz	clear_2
   351   0024F0                     end_of_initialization:
   352                           	callstack 0
   353   0024F0                     __end_of__initialization:
   354                           	callstack 0
   355   0024F0  907D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   356   0024F2  927D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   357   0024F4  0100               	movlb	0
   358   0024F6  EFC6  F009         	goto	_main	;jump to C main() function
   359                           
   360                           	psect	bssCOMRAM
   361   00005A                     __pbssCOMRAM:
   362                           	callstack 0
   363   00005A                     _RBx_flag:
   364                           	callstack 0
   365   00005A                     	ds	4
   366   00005E                     _prec:
   367                           	callstack 0
   368   00005E                     	ds	2
   369   000060                     _timer3_preload:
   370                           	callstack 0
   371   000060                     	ds	2
   372   000062                     _timer1_preload:
   373                           	callstack 0
   374   000062                     	ds	2
   375   000064                     _timer0_preload:
   376                           	callstack 0
   377   000064                     	ds	2
   378   000066                     _ADC_InterruptCallBack:
   379                           	callstack 0
   380   000066                     	ds	2
   381   000068                     _flags:
   382                           	callstack 0
   383   000068                     	ds	1
   384   000069                     _pir2_flag:
   385                           	callstack 0
   386   000069                     	ds	1
   387   00006A                     _pir1_flag:
   388                           	callstack 0
   389   00006A                     	ds	1
   390   00006B                     _timer2_preload:
   391                           	callstack 0
   392   00006B                     	ds	1
   393   00006C                     led_toggle@F3216:
   394                           	callstack 0
   395   00006C                     	ds	1
   396   00006D                     led_turn_off@F3211:
   397                           	callstack 0
   398   00006D                     	ds	1
   399   00006E                     led_turn_on@F3206:
   400                           	callstack 0
   401   00006E                     	ds	1
   402   00006F                     led_initialize@F3201:
   403                           	callstack 0
   404   00006F                     	ds	1
   405   000070                     relay_toggle@F3212:
   406                           	callstack 0
   407   000070                     	ds	1
   408   000071                     relay_turn_off@F3207:
   409                           	callstack 0
   410   000071                     	ds	1
   411   000072                     relay_turn_on@F3202:
   412                           	callstack 0
   413   000072                     	ds	1
   414   000073                     relay_initialize@F3197:
   415                           	callstack 0
   416   000073                     	ds	1
   417   000074                     _pir2_state:
   418                           	callstack 0
   419   000074                     	ds	1
   420   000075                     _pir1_state:
   421                           	callstack 0
   422   000075                     	ds	1
   423                           
   424                           	psect	dataCOMRAM
   425   000076                     __pdataCOMRAM:
   426                           	callstack 0
   427   000076                     _numper_places:
   428                           	callstack 0
   429   000076                     	ds	1
   430   000077                     _motor_2:
   431                           	callstack 0
   432   000077                     	ds	2
   433   000079                     _motor_1:
   434                           	callstack 0
   435   000079                     	ds	2
   436   00007B                     _pir2:
   437                           	callstack 0
   438   00007B                     	ds	1
   439   00007C                     _pir1:
   440                           	callstack 0
   441   00007C                     	ds	1
   442                           
   443                           	psect	bssBANK0
   444   000080                     __pbssBANK0:
   445                           	callstack 0
   446   000080                     _RBx_Call_Back:
   447                           	callstack 0
   448   000080                     	ds	16
   449   000090                     	ds	11
   450   00009B                     _INTx_Call_Back:
   451                           	callstack 0
   452   00009B                     	ds	6
   453   0000A1                     	ds	6
   454   0000A7                     _width:
   455                           	callstack 0
   456   0000A7                     	ds	2
   457   0000A9                     _Timer3InterruptHandeler:
   458                           	callstack 0
   459   0000A9                     	ds	2
   460   0000AB                     _Timer2InterruptHandeler:
   461                           	callstack 0
   462   0000AB                     	ds	2
   463   0000AD                     _Timer1InterruptHandeler:
   464                           	callstack 0
   465   0000AD                     	ds	2
   466   0000AF                     _Timer0InterruptHandeler:
   467                           	callstack 0
   468   0000AF                     	ds	2
   469   0000B1                     CCP1_Compare_write_value@F3305:
   470                           	callstack 0
   471   0000B1                     	ds	2
   472   0000B3                     CCP1_Capture_read_value@F3295:
   473                           	callstack 0
   474   0000B3                     	ds	2
   475   0000B5                     _CCP2_InterruptHandeler:
   476                           	callstack 0
   477   0000B5                     	ds	2
   478   0000B7                     _CCP1_InterruptHandeler:
   479                           	callstack 0
   480   0000B7                     	ds	2
   481   0000B9                     _numper_places_str:
   482                           	callstack 0
   483   0000B9                     	ds	7
   484                           
   485                           	psect	dataBANK0
   486   0000C0                     __pdataBANK0:
   487                           	callstack 0
   488   0000C0                     _lat_registers:
   489                           	callstack 0
   490   0000C0                     	ds	10
   491   0000CA                     _port_registers:
   492                           	callstack 0
   493   0000CA                     	ds	10
   494   0000D4                     _tris_registers:
   495                           	callstack 0
   496   0000D4                     	ds	10
   497   0000DE                     _lcd_1:
   498                           	callstack 0
   499   0000DE                     	ds	10
   500                           
   501                           	psect	bssBANK1
   502   000100                     __pbssBANK1:
   503                           	callstack 0
   504   000100                     _dbuf:
   505                           	callstack 0
   506   000100                     	ds	32
   507                           
   508                           	psect	cstackBANK0
   509   0000E8                     __pcstackBANK0:
   510                           	callstack 0
   511   0000E8                     ??_main:
   512                           
   513                           ; 1 bytes @ 0x0
   514   0000E8                     	ds	2
   515                           
   516                           	psect	cstackCOMRAM
   517   000001                     __pcstackCOMRAM:
   518                           	callstack 0
   519   000001                     RB4_ISR@RB4_source:
   520                           	callstack 0
   521   000001                     RB5_ISR@RB5_source:
   522                           	callstack 0
   523   000001                     RB6_ISR@RB6_source:
   524                           	callstack 0
   525   000001                     RB7_ISR@RB7_source:
   526                           	callstack 0
   527   000001                     
   528                           ; 1 bytes @ 0x0
   529   000001                     	ds	1
   530   000002                     ?___awdiv:
   531                           	callstack 0
   532   000002                     ?___awmod:
   533                           	callstack 0
   534   000002                     gpio_pin_direction_initialize@pin:
   535                           	callstack 0
   536   000002                     gpio_pin_read_logic@pin:
   537                           	callstack 0
   538   000002                     gpio_pin_write_logic@pin:
   539                           	callstack 0
   540   000002                     ___awdiv@dividend:
   541                           	callstack 0
   542   000002                     ___awmod@dividend:
   543                           	callstack 0
   544   000002                     memset@dest:
   545                           	callstack 0
   546   000002                     fputc@c:
   547                           	callstack 0
   548                           
   549                           ; 2 bytes @ 0x1
   550   000002                     	ds	2
   551   000004                     ??_gpio_pin_direction_initialize:
   552   000004                     gpio_pin_write_logic@log:
   553                           	callstack 0
   554   000004                     gpio_pin_read_logic@log:
   555                           	callstack 0
   556   000004                     ___awdiv@divisor:
   557                           	callstack 0
   558   000004                     ___awmod@divisor:
   559                           	callstack 0
   560   000004                     memset@c:
   561                           	callstack 0
   562   000004                     fputc@fp:
   563                           	callstack 0
   564                           
   565                           ; 2 bytes @ 0x3
   566   000004                     	ds	1
   567   000005                     ??_gpio_pin_write_logic:
   568                           
   569                           ; 1 bytes @ 0x4
   570   000005                     	ds	1
   571   000006                     ??_gpio_pin_read_logic:
   572   000006                     ??_fputc:
   573   000006                     ___awdiv@counter:
   574                           	callstack 0
   575   000006                     ___awmod@counter:
   576                           	callstack 0
   577   000006                     memset@n:
   578                           	callstack 0
   579                           
   580                           ; 2 bytes @ 0x5
   581   000006                     	ds	1
   582   000007                     ___awdiv@sign:
   583                           	callstack 0
   584   000007                     ___awmod@sign:
   585                           	callstack 0
   586                           
   587                           ; 1 bytes @ 0x6
   588   000007                     	ds	1
   589   000008                     ??_memset:
   590   000008                     ?_abs:
   591                           	callstack 0
   592   000008                     ___awdiv@quotient:
   593                           	callstack 0
   594   000008                     abs@a:
   595                           	callstack 0
   596                           
   597                           ; 2 bytes @ 0x7
   598   000008                     	ds	2
   599   00000A                     ??_abs:
   600   00000A                     gpio_pin_direction_initialize@ret:
   601                           	callstack 0
   602   00000A                     memset@k:
   603                           	callstack 0
   604                           
   605                           ; 2 bytes @ 0x9
   606   00000A                     	ds	1
   607   00000B                     gpio_pin_read_logic@ret:
   608                           	callstack 0
   609   00000B                     gpio_pin_write_logic@ret:
   610                           	callstack 0
   611   00000B                     fputs@s:
   612                           	callstack 0
   613                           
   614                           ; 2 bytes @ 0xA
   615   00000B                     	ds	1
   616   00000C                     lcd_8bit_send_enable@lcd_obj:
   617                           	callstack 0
   618   00000C                     dc_motor_move_right@dc_motor:
   619                           	callstack 0
   620   00000C                     dc_motor_move_left@dc_motor:
   621                           	callstack 0
   622   00000C                     dc_motor_stop@dc_motor:
   623                           	callstack 0
   624   00000C                     gpio_pin_initialize@pin:
   625                           	callstack 0
   626   00000C                     PIR_sensor_read@Pir_obj:
   627                           	callstack 0
   628   00000C                     memset@s:
   629                           	callstack 0
   630                           
   631                           ; 2 bytes @ 0xB
   632   00000C                     	ds	1
   633   00000D                     fputs@fp:
   634                           	callstack 0
   635                           
   636                           ; 2 bytes @ 0xC
   637   00000D                     	ds	1
   638   00000E                     ??_gpio_pin_initialize:
   639   00000E                     lcd_8bit_send_enable@ret:
   640                           	callstack 0
   641   00000E                     dc_motor_move_right@ret:
   642                           	callstack 0
   643   00000E                     dc_motor_move_left@ret:
   644                           	callstack 0
   645   00000E                     dc_motor_stop@ret:
   646                           	callstack 0
   647   00000E                     PIR_sensor_read@pir_state:
   648                           	callstack 0
   649                           
   650                           ; 2 bytes @ 0xD
   651   00000E                     	ds	1
   652   00000F                     gpio_pin_initialize@ret:
   653                           	callstack 0
   654   00000F                     fputs@c:
   655                           	callstack 0
   656   00000F                     lcd_8bit_send_command@lcd_obj:
   657                           	callstack 0
   658   00000F                     lcd_8bit_send_char@lcd_obj:
   659                           	callstack 0
   660                           
   661                           ; 2 bytes @ 0xE
   662   00000F                     	ds	1
   663   000010                     PIR_sensor_read@ret:
   664                           	callstack 0
   665   000010                     dc_motor_initialize@dc_motor:
   666                           	callstack 0
   667   000010                     PIR_sensor_initialize@Pir_obj:
   668                           	callstack 0
   669   000010                     fputs@i:
   670                           	callstack 0
   671                           
   672                           ; 2 bytes @ 0xF
   673   000010                     	ds	1
   674   000011                     lcd_8bit_send_command@command:
   675                           	callstack 0
   676   000011                     lcd_8bit_send_char@chr:
   677                           	callstack 0
   678   000011                     PIR_sensor_read@log:
   679                           	callstack 0
   680                           
   681                           ; 1 bytes @ 0x10
   682   000011                     	ds	1
   683   000012                     ??_lcd_8bit_send_command:
   684   000012                     ??_lcd_8bit_send_char:
   685   000012                     dc_motor_initialize@ret:
   686                           	callstack 0
   687   000012                     PIR_sensor_initialize@ret:
   688                           	callstack 0
   689   000012                     pad@fp:
   690                           	callstack 0
   691                           
   692                           ; 2 bytes @ 0x11
   693   000012                     	ds	2
   694   000014                     lcd_8bit_send_command@ret:
   695                           	callstack 0
   696   000014                     lcd_8bit_send_char@ret:
   697                           	callstack 0
   698   000014                     pad@buf:
   699                           	callstack 0
   700                           
   701                           ; 2 bytes @ 0x13
   702   000014                     	ds	1
   703   000015                     lcd_8bit_send_command@i:
   704                           	callstack 0
   705   000015                     lcd_8bit_send_char@i:
   706                           	callstack 0
   707                           
   708                           ; 2 bytes @ 0x14
   709   000015                     	ds	1
   710   000016                     pad@p:
   711                           	callstack 0
   712                           
   713                           ; 2 bytes @ 0x15
   714   000016                     	ds	1
   715   000017                     lcd_8bit_initialize@lcd_obj:
   716                           	callstack 0
   717   000017                     lcd_8bit_send_string@lcd_obj:
   718                           	callstack 0
   719   000017                     lcd_8bit_set_cursor@lcd_obj:
   720                           	callstack 0
   721                           
   722                           ; 2 bytes @ 0x16
   723   000017                     	ds	1
   724   000018                     ??_pad:
   725                           
   726                           ; 1 bytes @ 0x17
   727   000018                     	ds	1
   728   000019                     ??_lcd_8bit_initialize:
   729   000019                     lcd_8bit_set_cursor@row:
   730                           	callstack 0
   731   000019                     lcd_8bit_send_string@string:
   732                           	callstack 0
   733   000019                     pad@i:
   734                           	callstack 0
   735                           
   736                           ; 2 bytes @ 0x18
   737   000019                     	ds	1
   738   00001A                     lcd_8bit_set_cursor@column:
   739                           	callstack 0
   740   00001A                     lcd_8bit_initialize@i:
   741                           	callstack 0
   742                           
   743                           ; 2 bytes @ 0x19
   744   00001A                     	ds	1
   745   00001B                     ??_lcd_8bit_set_cursor:
   746   00001B                     lcd_8bit_send_string@ret:
   747                           	callstack 0
   748   00001B                     pad@w:
   749                           	callstack 0
   750                           
   751                           ; 2 bytes @ 0x1A
   752   00001B                     	ds	1
   753   00001C                     lcd_8bit_initialize@ret:
   754                           	callstack 0
   755                           
   756                           ; 1 bytes @ 0x1B
   757   00001C                     	ds	1
   758   00001D                     lcd_8bit_set_cursor@ret:
   759                           	callstack 0
   760   00001D                     dtoa@fp:
   761                           	callstack 0
   762                           
   763                           ; 2 bytes @ 0x1C
   764   00001D                     	ds	1
   765   00001E                     lcd_8bit_send_string_pos@lcd_obj:
   766                           	callstack 0
   767                           
   768                           ; 2 bytes @ 0x1D
   769   00001E                     	ds	1
   770   00001F                     dtoa@d:
   771                           	callstack 0
   772                           
   773                           ; 2 bytes @ 0x1E
   774   00001F                     	ds	1
   775   000020                     lcd_8bit_send_string_pos@row:
   776                           	callstack 0
   777                           
   778                           ; 1 bytes @ 0x1F
   779   000020                     	ds	1
   780   000021                     lcd_8bit_send_string_pos@column:
   781                           	callstack 0
   782   000021                     _dtoa$3622:
   783                           	callstack 0
   784                           
   785                           ; 2 bytes @ 0x20
   786   000021                     	ds	1
   787   000022                     lcd_8bit_send_string_pos@string:
   788                           	callstack 0
   789                           
   790                           ; 2 bytes @ 0x21
   791   000022                     	ds	1
   792   000023                     dtoa@p:
   793                           	callstack 0
   794                           
   795                           ; 2 bytes @ 0x22
   796   000023                     	ds	1
   797   000024                     lcd_8bit_send_string_pos@ret:
   798                           	callstack 0
   799                           
   800                           ; 1 bytes @ 0x23
   801   000024                     	ds	1
   802   000025                     dtoa@w:
   803                           	callstack 0
   804                           
   805                           ; 2 bytes @ 0x24
   806   000025                     	ds	2
   807   000027                     dtoa@i:
   808                           	callstack 0
   809                           
   810                           ; 2 bytes @ 0x26
   811   000027                     	ds	2
   812   000029                     dtoa@s:
   813                           	callstack 0
   814                           
   815                           ; 1 bytes @ 0x28
   816   000029                     	ds	1
   817   00002A                     vfpfcnvrt@fp:
   818                           	callstack 0
   819                           
   820                           ; 2 bytes @ 0x29
   821   00002A                     	ds	2
   822   00002C                     vfpfcnvrt@fmt:
   823                           	callstack 0
   824                           
   825                           ; 2 bytes @ 0x2B
   826   00002C                     	ds	2
   827   00002E                     vfpfcnvrt@ap:
   828                           	callstack 0
   829                           
   830                           ; 2 bytes @ 0x2D
   831   00002E                     	ds	2
   832   000030                     ??_vfpfcnvrt:
   833                           
   834                           ; 1 bytes @ 0x2F
   835   000030                     	ds	2
   836   000032                     vfpfcnvrt@convarg:
   837                           	callstack 0
   838                           
   839                           ; 4 bytes @ 0x31
   840   000032                     	ds	4
   841   000036                     vfpfcnvrt@cp:
   842                           	callstack 0
   843                           
   844                           ; 2 bytes @ 0x35
   845   000036                     	ds	2
   846   000038                     ?_vfprintf:
   847                           	callstack 0
   848   000038                     vfprintf@fp:
   849                           	callstack 0
   850                           
   851                           ; 2 bytes @ 0x37
   852   000038                     	ds	2
   853   00003A                     vfprintf@fmt:
   854                           	callstack 0
   855                           
   856                           ; 2 bytes @ 0x39
   857   00003A                     	ds	2
   858   00003C                     vfprintf@ap:
   859                           	callstack 0
   860                           
   861                           ; 2 bytes @ 0x3B
   862   00003C                     	ds	2
   863   00003E                     vfprintf@cfmt:
   864                           	callstack 0
   865                           
   866                           ; 2 bytes @ 0x3D
   867   00003E                     	ds	2
   868   000040                     ?_sprintf:
   869                           	callstack 0
   870   000040                     sprintf@s:
   871                           	callstack 0
   872                           
   873                           ; 2 bytes @ 0x3F
   874   000040                     	ds	2
   875   000042                     sprintf@fmt:
   876                           	callstack 0
   877                           
   878                           ; 2 bytes @ 0x41
   879   000042                     	ds	6
   880   000048                     sprintf@ap:
   881                           	callstack 0
   882                           
   883                           ; 2 bytes @ 0x47
   884   000048                     	ds	2
   885   00004A                     sprintf@f:
   886                           	callstack 0
   887                           
   888                           ; 12 bytes @ 0x49
   889   00004A                     	ds	12
   890   000056                     convert_byte_to_string@str:
   891                           	callstack 0
   892                           
   893                           ; 2 bytes @ 0x55
   894   000056                     	ds	2
   895   000058                     convert_byte_to_string@value:
   896                           	callstack 0
   897                           
   898                           ; 1 bytes @ 0x57
   899   000058                     	ds	1
   900   000059                     convert_byte_to_string@ret:
   901                           	callstack 0
   902                           
   903                           ; 1 bytes @ 0x58
   904   000059                     	ds	1
   905                           
   906 ;;
   907 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   908 ;;
   909 ;; *************** function _main *****************
   910 ;; Defined at:
   911 ;;		line 24 in file "application.c"
   912 ;; Parameters:    Size  Location     Type
   913 ;;		None
   914 ;; Auto vars:     Size  Location     Type
   915 ;;		None
   916 ;; Return value:  Size  Location     Type
   917 ;;                  2  1324[None  ] int 
   918 ;; Registers used:
   919 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   920 ;; Tracked objects:
   921 ;;		On entry : 0/0
   922 ;;		On exit  : 0/0
   923 ;;		Unchanged: 0/0
   924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   927 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   928 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   929 ;;Total ram usage:        2 bytes
   930 ;; Hardware stack levels required when called: 11
   931 ;; This function calls:
   932 ;;		_PIR_sensor_read
   933 ;;		_application_initialize
   934 ;;		_convert_byte_to_string
   935 ;;		_dc_motor_move_left
   936 ;;		_dc_motor_move_right
   937 ;;		_dc_motor_stop
   938 ;;		_lcd_8bit_send_string_pos
   939 ;; This function is called by:
   940 ;;		Startup code after reset
   941 ;; This function uses a non-reentrant model
   942 ;;
   943                           
   944                           	psect	text0
   945   00138C                     __ptext0:
   946                           	callstack 0
   947   00138C                     _main:
   948                           	callstack 20
   949   00138C                     
   950                           ;application.c: 26:     application_initialize();
   951   00138C  ECDB  F014         	call	_application_initialize	;wreg free
   952   001390                     
   953                           ;application.c: 28:     ret = lcd_8bit_send_string_pos(&lcd_1,1,1,"Available Places : ")
      +                          ;
   954   001390  0EDE               	movlw	low _lcd_1
   955   001392  6E1E               	movwf	lcd_8bit_send_string_pos@lcd_obj^0,c
   956   001394  0E00               	movlw	high _lcd_1
   957   001396  6E1F               	movwf	(lcd_8bit_send_string_pos@lcd_obj+1)^0,c
   958   001398  0E01               	movlw	1
   959   00139A  6E20               	movwf	lcd_8bit_send_string_pos@row^0,c
   960   00139C  0E01               	movlw	1
   961   00139E  6E21               	movwf	lcd_8bit_send_string_pos@column^0,c
   962   0013A0  0E0D               	movlw	low STR_4
   963   0013A2  6E22               	movwf	lcd_8bit_send_string_pos@string^0,c
   964   0013A4  0E10               	movlw	high STR_4
   965   0013A6  6E23               	movwf	(lcd_8bit_send_string_pos@string+1)^0,c
   966   0013A8  ECB3  F012         	call	_lcd_8bit_send_string_pos	;wreg free
   967   0013AC  0100               	movlb	0	; () banked
   968   0013AE  6FEA               	movwf	_ret& (0+255),b
   969   0013B0                     l6761:
   970                           
   971                           ; BSR set to: 0
   972                           ;application.c: 30:     {;application.c: 31:         ret = convert_byte_to_string(numper
      +                          _places,numper_places_str);
   973   0013B0  0EB9               	movlw	low _numper_places_str
   974   0013B2  6E56               	movwf	convert_byte_to_string@str^0,c
   975   0013B4  0E00               	movlw	high _numper_places_str
   976   0013B6  6E57               	movwf	(convert_byte_to_string@str+1)^0,c
   977   0013B8  5076               	movf	_numper_places^0,w,c
   978   0013BA  ECE0  F012         	call	_convert_byte_to_string
   979   0013BE  0100               	movlb	0	; () banked
   980   0013C0  6FEA               	movwf	_ret& (0+255),b
   981   0013C2                     
   982                           ; BSR set to: 0
   983                           ;application.c: 32:         ret = lcd_8bit_send_string_pos(&lcd_1,2,1,numper_places_str)
      +                          ;
   984   0013C2  0EDE               	movlw	low _lcd_1
   985   0013C4  6E1E               	movwf	lcd_8bit_send_string_pos@lcd_obj^0,c
   986   0013C6  0E00               	movlw	high _lcd_1
   987   0013C8  6E1F               	movwf	(lcd_8bit_send_string_pos@lcd_obj+1)^0,c
   988   0013CA  0E02               	movlw	2
   989   0013CC  6E20               	movwf	lcd_8bit_send_string_pos@row^0,c
   990   0013CE  0E01               	movlw	1
   991   0013D0  6E21               	movwf	lcd_8bit_send_string_pos@column^0,c
   992   0013D2  0EB9               	movlw	low _numper_places_str
   993   0013D4  6E22               	movwf	lcd_8bit_send_string_pos@string^0,c
   994   0013D6  0E00               	movlw	high _numper_places_str
   995   0013D8  6E23               	movwf	(lcd_8bit_send_string_pos@string+1)^0,c
   996   0013DA  ECB3  F012         	call	_lcd_8bit_send_string_pos	;wreg free
   997   0013DE  0100               	movlb	0	; () banked
   998   0013E0  6FEA               	movwf	_ret& (0+255),b
   999   0013E2                     
  1000                           ; BSR set to: 0
  1001                           ;application.c: 33:         ret = PIR_sensor_read(&pir1,&pir1_state);
  1002   0013E2  0E7C               	movlw	low _pir1
  1003   0013E4  6E0C               	movwf	PIR_sensor_read@Pir_obj^0,c
  1004   0013E6  0E00               	movlw	high _pir1
  1005   0013E8  6E0D               	movwf	(PIR_sensor_read@Pir_obj+1)^0,c
  1006   0013EA  0E75               	movlw	low _pir1_state
  1007   0013EC  6E0E               	movwf	PIR_sensor_read@pir_state^0,c
  1008   0013EE  0E00               	movlw	high _pir1_state
  1009   0013F0  6E0F               	movwf	(PIR_sensor_read@pir_state+1)^0,c
  1010   0013F2  ECC7  F011         	call	_PIR_sensor_read	;wreg free
  1011   0013F6  0100               	movlb	0	; () banked
  1012   0013F8  6FEA               	movwf	_ret& (0+255),b
  1013   0013FA                     
  1014                           ; BSR set to: 0
  1015                           ;application.c: 34:         if((pir1_state == 1)&&(numper_places>0)&&(pir1_flag == 0))
  1016   0013FA  0475               	decf	_pir1_state^0,w,c
  1017   0013FC  A4D8               	btfss	status,2,c
  1018   0013FE  EF03  F00A         	goto	u6131
  1019   001402  EF05  F00A         	goto	u6130
  1020   001406                     u6131:
  1021   001406  EF7A  F00A         	goto	l6795
  1022   00140A                     u6130:
  1023   00140A                     
  1024                           ; BSR set to: 0
  1025   00140A  5076               	movf	_numper_places^0,w,c
  1026   00140C  B4D8               	btfsc	status,2,c
  1027   00140E  EF0B  F00A         	goto	u6141
  1028   001412  EF0D  F00A         	goto	u6140
  1029   001416                     u6141:
  1030   001416  EF7A  F00A         	goto	l6795
  1031   00141A                     u6140:
  1032   00141A                     
  1033                           ; BSR set to: 0
  1034   00141A  506A               	movf	_pir1_flag^0,w,c
  1035   00141C  A4D8               	btfss	status,2,c
  1036   00141E  EF13  F00A         	goto	u6151
  1037   001422  EF15  F00A         	goto	u6150
  1038   001426                     u6151:
  1039   001426  EF7A  F00A         	goto	l6795
  1040   00142A                     u6150:
  1041   00142A                     
  1042                           ; BSR set to: 0
  1043                           ;application.c: 35:         {;application.c: 36:             numper_places--;
  1044   00142A  0676               	decf	_numper_places^0,f,c
  1045   00142C                     
  1046                           ; BSR set to: 0
  1047                           ;application.c: 37:             pir1_flag = 1;
  1048   00142C  0E01               	movlw	1
  1049   00142E  6E6A               	movwf	_pir1_flag^0,c
  1050   001430                     
  1051                           ; BSR set to: 0
  1052                           ;application.c: 38:             ret = convert_byte_to_string(numper_places,numper_places
      +                          _str);
  1053   001430  0EB9               	movlw	low _numper_places_str
  1054   001432  6E56               	movwf	convert_byte_to_string@str^0,c
  1055   001434  0E00               	movlw	high _numper_places_str
  1056   001436  6E57               	movwf	(convert_byte_to_string@str+1)^0,c
  1057   001438  5076               	movf	_numper_places^0,w,c
  1058   00143A  ECE0  F012         	call	_convert_byte_to_string
  1059   00143E  0100               	movlb	0	; () banked
  1060   001440  6FEA               	movwf	_ret& (0+255),b
  1061   001442                     
  1062                           ; BSR set to: 0
  1063                           ;application.c: 39:             ret = lcd_8bit_send_string_pos(&lcd_1,2,1,numper_places_
      +                          str);
  1064   001442  0EDE               	movlw	low _lcd_1
  1065   001444  6E1E               	movwf	lcd_8bit_send_string_pos@lcd_obj^0,c
  1066   001446  0E00               	movlw	high _lcd_1
  1067   001448  6E1F               	movwf	(lcd_8bit_send_string_pos@lcd_obj+1)^0,c
  1068   00144A  0E02               	movlw	2
  1069   00144C  6E20               	movwf	lcd_8bit_send_string_pos@row^0,c
  1070   00144E  0E01               	movlw	1
  1071   001450  6E21               	movwf	lcd_8bit_send_string_pos@column^0,c
  1072   001452  0EB9               	movlw	low _numper_places_str
  1073   001454  6E22               	movwf	lcd_8bit_send_string_pos@string^0,c
  1074   001456  0E00               	movlw	high _numper_places_str
  1075   001458  6E23               	movwf	(lcd_8bit_send_string_pos@string+1)^0,c
  1076   00145A  ECB3  F012         	call	_lcd_8bit_send_string_pos	;wreg free
  1077   00145E  0100               	movlb	0	; () banked
  1078   001460  6FEA               	movwf	_ret& (0+255),b
  1079   001462                     
  1080                           ; BSR set to: 0
  1081                           ;application.c: 40:             ret = dc_motor_move_right(&motor_1);
  1082   001462  0E79               	movlw	low _motor_1
  1083   001464  6E0C               	movwf	dc_motor_move_right@dc_motor^0,c
  1084   001466  0E00               	movlw	high _motor_1
  1085   001468  6E0D               	movwf	(dc_motor_move_right@dc_motor+1)^0,c
  1086   00146A  ECA5  F013         	call	_dc_motor_move_right	;wreg free
  1087   00146E  0100               	movlb	0	; () banked
  1088   001470  6FEA               	movwf	_ret& (0+255),b
  1089   001472                     
  1090                           ; BSR set to: 0
  1091                           ;application.c: 41:             _delay((unsigned long)((750)*(4000000UL/4000.0)));
  1092   001472  0E04               	movlw	4
  1093   001474  0100               	movlb	0	; () banked
  1094   001476  6FE9               	movwf	(??_main+1)& (0+255),b
  1095   001478  0ECF               	movlw	207
  1096   00147A  6FE8               	movwf	??_main& (0+255),b
  1097   00147C  0E01               	movlw	1
  1098   00147E                     u6217:
  1099   00147E  2EE8               	decfsz	wreg,f,c
  1100   001480  D7FE               	bra	u6217
  1101   001482  2FE8               	decfsz	??_main& (0+255),f,b
  1102   001484  D7FC               	bra	u6217
  1103   001486  2FE9               	decfsz	(??_main+1)& (0+255),f,b
  1104   001488  D7FA               	bra	u6217
  1105   00148A  D000               	nop2	
  1106   00148C                     
  1107                           ;application.c: 42:             ret = dc_motor_stop(&motor_1);
  1108   00148C  0E79               	movlw	low _motor_1
  1109   00148E  6E0C               	movwf	dc_motor_stop@dc_motor^0,c
  1110   001490  0E00               	movlw	high _motor_1
  1111   001492  6E0D               	movwf	(dc_motor_stop@dc_motor+1)^0,c
  1112   001494  EC82  F013         	call	_dc_motor_stop	;wreg free
  1113   001498  0100               	movlb	0	; () banked
  1114   00149A  6FEA               	movwf	_ret& (0+255),b
  1115   00149C                     
  1116                           ; BSR set to: 0
  1117                           ;application.c: 43:             _delay((unsigned long)((500)*(4000000UL/4000.0)));
  1118   00149C  0E03               	movlw	3
  1119   00149E  0100               	movlb	0	; () banked
  1120   0014A0  6FE9               	movwf	(??_main+1)& (0+255),b
  1121   0014A2  0E8A               	movlw	138
  1122   0014A4  6FE8               	movwf	??_main& (0+255),b
  1123   0014A6  0E55               	movlw	85
  1124   0014A8                     u6227:
  1125   0014A8  2EE8               	decfsz	wreg,f,c
  1126   0014AA  D7FE               	bra	u6227
  1127   0014AC  2FE8               	decfsz	??_main& (0+255),f,b
  1128   0014AE  D7FC               	bra	u6227
  1129   0014B0  2FE9               	decfsz	(??_main+1)& (0+255),f,b
  1130   0014B2  D7FA               	bra	u6227
  1131   0014B4  D000               	nop2	
  1132   0014B6                     
  1133                           ;application.c: 44:             ret = dc_motor_move_left(&motor_1);
  1134   0014B6  0E79               	movlw	low _motor_1
  1135   0014B8  6E0C               	movwf	dc_motor_move_left@dc_motor^0,c
  1136   0014BA  0E00               	movlw	high _motor_1
  1137   0014BC  6E0D               	movwf	(dc_motor_move_left@dc_motor+1)^0,c
  1138   0014BE  ECC8  F013         	call	_dc_motor_move_left	;wreg free
  1139   0014C2  0100               	movlb	0	; () banked
  1140   0014C4  6FEA               	movwf	_ret& (0+255),b
  1141   0014C6                     
  1142                           ; BSR set to: 0
  1143                           ;application.c: 45:             _delay((unsigned long)((750)*(4000000UL/4000.0)));
  1144   0014C6  0E04               	movlw	4
  1145   0014C8  0100               	movlb	0	; () banked
  1146   0014CA  6FE9               	movwf	(??_main+1)& (0+255),b
  1147   0014CC  0ECF               	movlw	207
  1148   0014CE  6FE8               	movwf	??_main& (0+255),b
  1149   0014D0  0E01               	movlw	1
  1150   0014D2                     u6237:
  1151   0014D2  2EE8               	decfsz	wreg,f,c
  1152   0014D4  D7FE               	bra	u6237
  1153   0014D6  2FE8               	decfsz	??_main& (0+255),f,b
  1154   0014D8  D7FC               	bra	u6237
  1155   0014DA  2FE9               	decfsz	(??_main+1)& (0+255),f,b
  1156   0014DC  D7FA               	bra	u6237
  1157   0014DE  D000               	nop2	
  1158   0014E0                     
  1159                           ;application.c: 46:             ret = dc_motor_stop(&motor_1);
  1160   0014E0  0E79               	movlw	low _motor_1
  1161   0014E2  6E0C               	movwf	dc_motor_stop@dc_motor^0,c
  1162   0014E4  0E00               	movlw	high _motor_1
  1163   0014E6  6E0D               	movwf	(dc_motor_stop@dc_motor+1)^0,c
  1164   0014E8  EC82  F013         	call	_dc_motor_stop	;wreg free
  1165   0014EC  0100               	movlb	0	; () banked
  1166   0014EE  6FEA               	movwf	_ret& (0+255),b
  1167                           
  1168                           ;application.c: 47:         }
  1169   0014F0  EF84  F00A         	goto	l6799
  1170   0014F4                     l6795:
  1171                           
  1172                           ; BSR set to: 0
  1173   0014F4  5075               	movf	_pir1_state^0,w,c
  1174   0014F6  A4D8               	btfss	status,2,c
  1175   0014F8  EF80  F00A         	goto	u6161
  1176   0014FC  EF82  F00A         	goto	u6160
  1177   001500                     u6161:
  1178   001500  EF84  F00A         	goto	l6799
  1179   001504                     u6160:
  1180   001504                     
  1181                           ; BSR set to: 0
  1182                           ;application.c: 49:         {;application.c: 50:             pir1_flag = 0;
  1183   001504  0E00               	movlw	0
  1184   001506  6E6A               	movwf	_pir1_flag^0,c
  1185   001508                     l6799:
  1186                           
  1187                           ; BSR set to: 0
  1188                           ;application.c: 52:         ret = PIR_sensor_read(&pir2,&pir2_state);
  1189   001508  0E7B               	movlw	low _pir2
  1190   00150A  6E0C               	movwf	PIR_sensor_read@Pir_obj^0,c
  1191   00150C  0E00               	movlw	high _pir2
  1192   00150E  6E0D               	movwf	(PIR_sensor_read@Pir_obj+1)^0,c
  1193   001510  0E74               	movlw	low _pir2_state
  1194   001512  6E0E               	movwf	PIR_sensor_read@pir_state^0,c
  1195   001514  0E00               	movlw	high _pir2_state
  1196   001516  6E0F               	movwf	(PIR_sensor_read@pir_state+1)^0,c
  1197   001518  ECC7  F011         	call	_PIR_sensor_read	;wreg free
  1198   00151C  0100               	movlb	0	; () banked
  1199   00151E  6FEA               	movwf	_ret& (0+255),b
  1200   001520                     
  1201                           ; BSR set to: 0
  1202                           ;application.c: 53:         if((pir2_state == 1)&&(numper_places<5)&&(pir2_flag == 0))
  1203   001520  0474               	decf	_pir2_state^0,w,c
  1204   001522  A4D8               	btfss	status,2,c
  1205   001524  EF96  F00A         	goto	u6171
  1206   001528  EF98  F00A         	goto	u6170
  1207   00152C                     u6171:
  1208   00152C  EF0D  F00B         	goto	l6829
  1209   001530                     u6170:
  1210   001530                     
  1211                           ; BSR set to: 0
  1212   001530  0E05               	movlw	5
  1213   001532  6076               	cpfslt	_numper_places^0,c
  1214   001534  EF9E  F00A         	goto	u6181
  1215   001538  EFA0  F00A         	goto	u6180
  1216   00153C                     u6181:
  1217   00153C  EF0D  F00B         	goto	l6829
  1218   001540                     u6180:
  1219   001540                     
  1220                           ; BSR set to: 0
  1221   001540  5069               	movf	_pir2_flag^0,w,c
  1222   001542  A4D8               	btfss	status,2,c
  1223   001544  EFA6  F00A         	goto	u6191
  1224   001548  EFA8  F00A         	goto	u6190
  1225   00154C                     u6191:
  1226   00154C  EF0D  F00B         	goto	l6829
  1227   001550                     u6190:
  1228   001550                     
  1229                           ; BSR set to: 0
  1230                           ;application.c: 54:         {;application.c: 55:             numper_places++;
  1231   001550  2A76               	incf	_numper_places^0,f,c
  1232   001552                     
  1233                           ; BSR set to: 0
  1234                           ;application.c: 56:             pir2_flag = 1;
  1235   001552  0E01               	movlw	1
  1236   001554  6E69               	movwf	_pir2_flag^0,c
  1237   001556                     
  1238                           ; BSR set to: 0
  1239                           ;application.c: 57:             ret = convert_byte_to_string(numper_places,numper_places
      +                          _str);
  1240   001556  0EB9               	movlw	low _numper_places_str
  1241   001558  6E56               	movwf	convert_byte_to_string@str^0,c
  1242   00155A  0E00               	movlw	high _numper_places_str
  1243   00155C  6E57               	movwf	(convert_byte_to_string@str+1)^0,c
  1244   00155E  5076               	movf	_numper_places^0,w,c
  1245   001560  ECE0  F012         	call	_convert_byte_to_string
  1246   001564  0100               	movlb	0	; () banked
  1247   001566  6FEA               	movwf	_ret& (0+255),b
  1248   001568                     
  1249                           ; BSR set to: 0
  1250                           ;application.c: 58:             ret = lcd_8bit_send_string_pos(&lcd_1,2,1,numper_places_
      +                          str);
  1251   001568  0EDE               	movlw	low _lcd_1
  1252   00156A  6E1E               	movwf	lcd_8bit_send_string_pos@lcd_obj^0,c
  1253   00156C  0E00               	movlw	high _lcd_1
  1254   00156E  6E1F               	movwf	(lcd_8bit_send_string_pos@lcd_obj+1)^0,c
  1255   001570  0E02               	movlw	2
  1256   001572  6E20               	movwf	lcd_8bit_send_string_pos@row^0,c
  1257   001574  0E01               	movlw	1
  1258   001576  6E21               	movwf	lcd_8bit_send_string_pos@column^0,c
  1259   001578  0EB9               	movlw	low _numper_places_str
  1260   00157A  6E22               	movwf	lcd_8bit_send_string_pos@string^0,c
  1261   00157C  0E00               	movlw	high _numper_places_str
  1262   00157E  6E23               	movwf	(lcd_8bit_send_string_pos@string+1)^0,c
  1263   001580  ECB3  F012         	call	_lcd_8bit_send_string_pos	;wreg free
  1264   001584  0100               	movlb	0	; () banked
  1265   001586  6FEA               	movwf	_ret& (0+255),b
  1266   001588                     
  1267                           ; BSR set to: 0
  1268                           ;application.c: 59:             ret = dc_motor_move_right(&motor_2);
  1269   001588  0E77               	movlw	low _motor_2
  1270   00158A  6E0C               	movwf	dc_motor_move_right@dc_motor^0,c
  1271   00158C  0E00               	movlw	high _motor_2
  1272   00158E  6E0D               	movwf	(dc_motor_move_right@dc_motor+1)^0,c
  1273   001590  ECA5  F013         	call	_dc_motor_move_right	;wreg free
  1274   001594  0100               	movlb	0	; () banked
  1275   001596  6FEA               	movwf	_ret& (0+255),b
  1276   001598                     
  1277                           ; BSR set to: 0
  1278                           ;application.c: 60:              _delay((unsigned long)((750)*(4000000UL/4000.0)));
  1279   001598  0E04               	movlw	4
  1280   00159A  0100               	movlb	0	; () banked
  1281   00159C  6FE9               	movwf	(??_main+1)& (0+255),b
  1282   00159E  0ECF               	movlw	207
  1283   0015A0  6FE8               	movwf	??_main& (0+255),b
  1284   0015A2  0E01               	movlw	1
  1285   0015A4                     u6247:
  1286   0015A4  2EE8               	decfsz	wreg,f,c
  1287   0015A6  D7FE               	bra	u6247
  1288   0015A8  2FE8               	decfsz	??_main& (0+255),f,b
  1289   0015AA  D7FC               	bra	u6247
  1290   0015AC  2FE9               	decfsz	(??_main+1)& (0+255),f,b
  1291   0015AE  D7FA               	bra	u6247
  1292   0015B0  D000               	nop2	
  1293   0015B2                     
  1294                           ;application.c: 61:             ret = dc_motor_stop(&motor_2);
  1295   0015B2  0E77               	movlw	low _motor_2
  1296   0015B4  6E0C               	movwf	dc_motor_stop@dc_motor^0,c
  1297   0015B6  0E00               	movlw	high _motor_2
  1298   0015B8  6E0D               	movwf	(dc_motor_stop@dc_motor+1)^0,c
  1299   0015BA  EC82  F013         	call	_dc_motor_stop	;wreg free
  1300   0015BE  0100               	movlb	0	; () banked
  1301   0015C0  6FEA               	movwf	_ret& (0+255),b
  1302   0015C2                     
  1303                           ; BSR set to: 0
  1304                           ;application.c: 62:             _delay((unsigned long)((500)*(4000000UL/4000.0)));
  1305   0015C2  0E03               	movlw	3
  1306   0015C4  0100               	movlb	0	; () banked
  1307   0015C6  6FE9               	movwf	(??_main+1)& (0+255),b
  1308   0015C8  0E8A               	movlw	138
  1309   0015CA  6FE8               	movwf	??_main& (0+255),b
  1310   0015CC  0E55               	movlw	85
  1311   0015CE                     u6257:
  1312   0015CE  2EE8               	decfsz	wreg,f,c
  1313   0015D0  D7FE               	bra	u6257
  1314   0015D2  2FE8               	decfsz	??_main& (0+255),f,b
  1315   0015D4  D7FC               	bra	u6257
  1316   0015D6  2FE9               	decfsz	(??_main+1)& (0+255),f,b
  1317   0015D8  D7FA               	bra	u6257
  1318   0015DA  D000               	nop2	
  1319   0015DC                     
  1320                           ;application.c: 63:             ret = dc_motor_move_left(&motor_2);
  1321   0015DC  0E77               	movlw	low _motor_2
  1322   0015DE  6E0C               	movwf	dc_motor_move_left@dc_motor^0,c
  1323   0015E0  0E00               	movlw	high _motor_2
  1324   0015E2  6E0D               	movwf	(dc_motor_move_left@dc_motor+1)^0,c
  1325   0015E4  ECC8  F013         	call	_dc_motor_move_left	;wreg free
  1326   0015E8  0100               	movlb	0	; () banked
  1327   0015EA  6FEA               	movwf	_ret& (0+255),b
  1328   0015EC                     
  1329                           ; BSR set to: 0
  1330                           ;application.c: 64:             _delay((unsigned long)((750)*(4000000UL/4000.0)));
  1331   0015EC  0E04               	movlw	4
  1332   0015EE  0100               	movlb	0	; () banked
  1333   0015F0  6FE9               	movwf	(??_main+1)& (0+255),b
  1334   0015F2  0ECF               	movlw	207
  1335   0015F4  6FE8               	movwf	??_main& (0+255),b
  1336   0015F6  0E01               	movlw	1
  1337   0015F8                     u6267:
  1338   0015F8  2EE8               	decfsz	wreg,f,c
  1339   0015FA  D7FE               	bra	u6267
  1340   0015FC  2FE8               	decfsz	??_main& (0+255),f,b
  1341   0015FE  D7FC               	bra	u6267
  1342   001600  2FE9               	decfsz	(??_main+1)& (0+255),f,b
  1343   001602  D7FA               	bra	u6267
  1344   001604  D000               	nop2	
  1345   001606                     
  1346                           ;application.c: 65:             ret = dc_motor_stop(&motor_2);
  1347   001606  0E77               	movlw	low _motor_2
  1348   001608  6E0C               	movwf	dc_motor_stop@dc_motor^0,c
  1349   00160A  0E00               	movlw	high _motor_2
  1350   00160C  6E0D               	movwf	(dc_motor_stop@dc_motor+1)^0,c
  1351   00160E  EC82  F013         	call	_dc_motor_stop	;wreg free
  1352   001612  0100               	movlb	0	; () banked
  1353   001614  6FEA               	movwf	_ret& (0+255),b
  1354                           
  1355                           ;application.c: 66:         }
  1356   001616  EFD8  F009         	goto	l6761
  1357   00161A                     l6829:
  1358                           
  1359                           ; BSR set to: 0
  1360   00161A  5074               	movf	_pir2_state^0,w,c
  1361   00161C  A4D8               	btfss	status,2,c
  1362   00161E  EF13  F00B         	goto	u6201
  1363   001622  EF15  F00B         	goto	u6200
  1364   001626                     u6201:
  1365   001626  EFD8  F009         	goto	l6761
  1366   00162A                     u6200:
  1367   00162A                     
  1368                           ; BSR set to: 0
  1369                           ;application.c: 68:         {;application.c: 69:             pir2_flag = 0;
  1370   00162A  0E00               	movlw	0
  1371   00162C  6E69               	movwf	_pir2_flag^0,c
  1372   00162E  EFD8  F009         	goto	l6761
  1373   001632  EF07  F000         	goto	start
  1374   001636                     __end_of_main:
  1375                           	callstack 0
  1376                           
  1377 ;; *************** function _lcd_8bit_send_string_pos *****************
  1378 ;; Defined at:
  1379 ;;		line 374 in file "ECU_layer/Char_lCD/ecu_chr_lcd.c"
  1380 ;; Parameters:    Size  Location     Type
  1381 ;;  lcd_obj         2   29[COMRAM] PTR const struct .
  1382 ;;		 -> lcd_1(10), 
  1383 ;;  row             1   31[COMRAM] unsigned char 
  1384 ;;  column          1   32[COMRAM] unsigned char 
  1385 ;;  string          2   33[COMRAM] PTR unsigned char 
  1386 ;;		 -> numper_places_str(7), STR_4(20), 
  1387 ;; Auto vars:     Size  Location     Type
  1388 ;;  ret             1   35[COMRAM] unsigned char 
  1389 ;; Return value:  Size  Location     Type
  1390 ;;                  1    wreg      unsigned char 
  1391 ;; Registers used:
  1392 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1393 ;; Tracked objects:
  1394 ;;		On entry : 0/0
  1395 ;;		On exit  : 0/0
  1396 ;;		Unchanged: 0/0
  1397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1398 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1399 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1401 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1402 ;;Total ram usage:        7 bytes
  1403 ;; Hardware stack levels used: 1
  1404 ;; Hardware stack levels required when called: 6
  1405 ;; This function calls:
  1406 ;;		_lcd_8bit_send_string
  1407 ;;		_lcd_8bit_set_cursor
  1408 ;; This function is called by:
  1409 ;;		_main
  1410 ;; This function uses a non-reentrant model
  1411 ;;
  1412                           
  1413                           	psect	text1
  1414   002566                     __ptext1:
  1415                           	callstack 0
  1416   002566                     _lcd_8bit_send_string_pos:
  1417                           	callstack 24
  1418   002566                     
  1419                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 377:     if((lcd_obj == ((void*)0))||(string==((void*
      +                          )0)))
  1420   002566  501E               	movf	lcd_8bit_send_string_pos@lcd_obj^0,w,c
  1421   002568  101F               	iorwf	(lcd_8bit_send_string_pos@lcd_obj+1)^0,w,c
  1422   00256A  B4D8               	btfsc	status,2,c
  1423   00256C  EFBA  F012         	goto	u4211
  1424   002570  EFBC  F012         	goto	u4210
  1425   002574                     u4211:
  1426   002574  EFC5  F012         	goto	l5321
  1427   002578                     u4210:
  1428   002578  5022               	movf	lcd_8bit_send_string_pos@string^0,w,c
  1429   00257A  1023               	iorwf	(lcd_8bit_send_string_pos@string+1)^0,w,c
  1430   00257C  A4D8               	btfss	status,2,c
  1431   00257E  EFC3  F012         	goto	u4221
  1432   002582  EFC5  F012         	goto	u4220
  1433   002586                     u4221:
  1434   002586  EFC9  F012         	goto	l5323
  1435   00258A                     u4220:
  1436   00258A                     l5321:
  1437                           
  1438                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 378:     {;ECU_layer/Char_lCD/ecu_chr_lcd.c: 379:    
      +                               ret = (Std_ReturnType)0x00;
  1439   00258A  0E00               	movlw	0
  1440   00258C  6E24               	movwf	lcd_8bit_send_string_pos@ret^0,c
  1441                           
  1442                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 380:     }
  1443   00258E  EFDE  F012         	goto	l5327
  1444   002592                     l5323:
  1445   002592  C01E  F017         	movff	lcd_8bit_send_string_pos@lcd_obj,lcd_8bit_set_cursor@lcd_obj
  1446   002596  C01F  F018         	movff	lcd_8bit_send_string_pos@lcd_obj+1,lcd_8bit_set_cursor@lcd_obj+1
  1447   00259A  C020  F019         	movff	lcd_8bit_send_string_pos@row,lcd_8bit_set_cursor@row
  1448   00259E  C021  F01A         	movff	lcd_8bit_send_string_pos@column,lcd_8bit_set_cursor@column
  1449   0025A2  ECCE  F00F         	call	_lcd_8bit_set_cursor	;wreg free
  1450   0025A6                     
  1451                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 384:         ret = lcd_8bit_send_string(lcd_obj,strin
      +                          g);
  1452   0025A6  C01E  F017         	movff	lcd_8bit_send_string_pos@lcd_obj,lcd_8bit_send_string@lcd_obj
  1453   0025AA  C01F  F018         	movff	lcd_8bit_send_string_pos@lcd_obj+1,lcd_8bit_send_string@lcd_obj+1
  1454   0025AE  C022  F019         	movff	lcd_8bit_send_string_pos@string,lcd_8bit_send_string@string
  1455   0025B2  C023  F01A         	movff	lcd_8bit_send_string_pos@string+1,lcd_8bit_send_string@string+1
  1456   0025B6  ECE3  F010         	call	_lcd_8bit_send_string	;wreg free
  1457   0025BA  6E24               	movwf	lcd_8bit_send_string_pos@ret^0,c
  1458   0025BC                     l5327:
  1459                           
  1460                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 387:     return ret;
  1461   0025BC  5024               	movf	lcd_8bit_send_string_pos@ret^0,w,c
  1462   0025BE  0012               	return		;funcret
  1463   0025C0                     __end_of_lcd_8bit_send_string_pos:
  1464                           	callstack 0
  1465                           
  1466 ;; *************** function _lcd_8bit_set_cursor *****************
  1467 ;; Defined at:
  1468 ;;		line 551 in file "ECU_layer/Char_lCD/ecu_chr_lcd.c"
  1469 ;; Parameters:    Size  Location     Type
  1470 ;;  lcd_obj         2   22[COMRAM] PTR const struct .
  1471 ;;		 -> lcd_1(10), 
  1472 ;;  row             1   24[COMRAM] unsigned char 
  1473 ;;  column          1   25[COMRAM] unsigned char 
  1474 ;; Auto vars:     Size  Location     Type
  1475 ;;  ret             1   28[COMRAM] unsigned char 
  1476 ;; Return value:  Size  Location     Type
  1477 ;;                  1    wreg      unsigned char 
  1478 ;; Registers used:
  1479 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1480 ;; Tracked objects:
  1481 ;;		On entry : 0/0
  1482 ;;		On exit  : 0/0
  1483 ;;		Unchanged: 0/0
  1484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1485 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1486 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1487 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1488 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1489 ;;Total ram usage:        7 bytes
  1490 ;; Hardware stack levels used: 1
  1491 ;; Hardware stack levels required when called: 5
  1492 ;; This function calls:
  1493 ;;		_lcd_8bit_send_command
  1494 ;; This function is called by:
  1495 ;;		_lcd_8bit_send_string_pos
  1496 ;;		_lcd_8bit_send_char_pos
  1497 ;; This function uses a non-reentrant model
  1498 ;;
  1499                           
  1500                           	psect	text2
  1501   001F9C                     __ptext2:
  1502                           	callstack 0
  1503   001F9C                     _lcd_8bit_set_cursor:
  1504                           	callstack 24
  1505   001F9C                     
  1506                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 551: static Std_ReturnType lcd_8bit_set_cursor(const 
      +                          lcd_8bit_t *lcd_obj,uint8 row,uint8 column);ECU_layer/Char_lCD/ecu_chr_lcd.c: 552: {;ECU
      +                          _layer/Char_lCD/ecu_chr_lcd.c: 553:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1507   001F9C  0E01               	movlw	1
  1508   001F9E  6E1D               	movwf	lcd_8bit_set_cursor@ret^0,c
  1509   001FA0                     
  1510                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 554:     if(lcd_obj == ((void*)0))
  1511   001FA0  5017               	movf	lcd_8bit_set_cursor@lcd_obj^0,w,c
  1512   001FA2  1018               	iorwf	(lcd_8bit_set_cursor@lcd_obj+1)^0,w,c
  1513   001FA4  A4D8               	btfss	status,2,c
  1514   001FA6  EFD7  F00F         	goto	u4001
  1515   001FAA  EFD9  F00F         	goto	u4000
  1516   001FAE                     u4001:
  1517   001FAE  EFDD  F00F         	goto	l5149
  1518   001FB2                     u4000:
  1519   001FB2                     
  1520                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 555:     {;ECU_layer/Char_lCD/ecu_chr_lcd.c: 556:    
      +                               ret = (Std_ReturnType)0x00;
  1521   001FB2  0E00               	movlw	0
  1522   001FB4  6E1D               	movwf	lcd_8bit_set_cursor@ret^0,c
  1523                           
  1524                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 557:     }
  1525   001FB6  EF2D  F010         	goto	l5161
  1526   001FBA                     l5149:
  1527                           
  1528                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 559:     {;ECU_layer/Char_lCD/ecu_chr_lcd.c: 560:    
      +                               column--;
  1529   001FBA  061A               	decf	lcd_8bit_set_cursor@column^0,f,c
  1530                           
  1531                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 561:         switch (row)
  1532   001FBC  EF10  F010         	goto	l5159
  1533   001FC0                     l5151:
  1534                           
  1535                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 564:                 ret = lcd_8bit_send_command(lcd_
      +                          obj,(0x80 + column));
  1536   001FC0  C017  F00F         	movff	lcd_8bit_set_cursor@lcd_obj,lcd_8bit_send_command@lcd_obj
  1537   001FC4  C018  F010         	movff	lcd_8bit_set_cursor@lcd_obj+1,lcd_8bit_send_command@lcd_obj+1
  1538   001FC8  501A               	movf	lcd_8bit_set_cursor@column^0,w,c
  1539   001FCA  0F80               	addlw	128
  1540   001FCC  6E11               	movwf	lcd_8bit_send_command@command^0,c
  1541   001FCE  EC7C  F011         	call	_lcd_8bit_send_command	;wreg free
  1542   001FD2  6E1D               	movwf	lcd_8bit_set_cursor@ret^0,c
  1543                           
  1544                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 565:             break;
  1545   001FD4  EF2D  F010         	goto	l5161
  1546   001FD8                     l5153:
  1547                           
  1548                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 567:                 ret = lcd_8bit_send_command(lcd_
      +                          obj,(0xC0 + column));
  1549   001FD8  C017  F00F         	movff	lcd_8bit_set_cursor@lcd_obj,lcd_8bit_send_command@lcd_obj
  1550   001FDC  C018  F010         	movff	lcd_8bit_set_cursor@lcd_obj+1,lcd_8bit_send_command@lcd_obj+1
  1551   001FE0  501A               	movf	lcd_8bit_set_cursor@column^0,w,c
  1552   001FE2  0FC0               	addlw	192
  1553   001FE4  6E11               	movwf	lcd_8bit_send_command@command^0,c
  1554   001FE6  EC7C  F011         	call	_lcd_8bit_send_command	;wreg free
  1555   001FEA  6E1D               	movwf	lcd_8bit_set_cursor@ret^0,c
  1556                           
  1557                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 568:             break;
  1558   001FEC  EF2D  F010         	goto	l5161
  1559   001FF0                     l5155:
  1560                           
  1561                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 570:                 ret = lcd_8bit_send_command(lcd_
      +                          obj,(0x94 + column));
  1562   001FF0  C017  F00F         	movff	lcd_8bit_set_cursor@lcd_obj,lcd_8bit_send_command@lcd_obj
  1563   001FF4  C018  F010         	movff	lcd_8bit_set_cursor@lcd_obj+1,lcd_8bit_send_command@lcd_obj+1
  1564   001FF8  501A               	movf	lcd_8bit_set_cursor@column^0,w,c
  1565   001FFA  0F94               	addlw	148
  1566   001FFC  6E11               	movwf	lcd_8bit_send_command@command^0,c
  1567   001FFE  EC7C  F011         	call	_lcd_8bit_send_command	;wreg free
  1568   002002  6E1D               	movwf	lcd_8bit_set_cursor@ret^0,c
  1569                           
  1570                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 571:             break;
  1571   002004  EF2D  F010         	goto	l5161
  1572   002008                     l5157:
  1573                           
  1574                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 573:                 ret = lcd_8bit_send_command(lcd_
      +                          obj,(0xD4 + column));
  1575   002008  C017  F00F         	movff	lcd_8bit_set_cursor@lcd_obj,lcd_8bit_send_command@lcd_obj
  1576   00200C  C018  F010         	movff	lcd_8bit_set_cursor@lcd_obj+1,lcd_8bit_send_command@lcd_obj+1
  1577   002010  501A               	movf	lcd_8bit_set_cursor@column^0,w,c
  1578   002012  0FD4               	addlw	212
  1579   002014  6E11               	movwf	lcd_8bit_send_command@command^0,c
  1580   002016  EC7C  F011         	call	_lcd_8bit_send_command	;wreg free
  1581   00201A  6E1D               	movwf	lcd_8bit_set_cursor@ret^0,c
  1582                           
  1583                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 574:             break;
  1584   00201C  EF2D  F010         	goto	l5161
  1585   002020                     l5159:
  1586   002020  5019               	movf	lcd_8bit_set_cursor@row^0,w,c
  1587   002022  6E1B               	movwf	??_lcd_8bit_set_cursor^0,c
  1588   002024  6A1C               	clrf	(??_lcd_8bit_set_cursor+1)^0,c
  1589                           
  1590                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1591                           ; Switch size 1, requested type "simple"
  1592                           ; Number of cases is 1, Range of values is 0 to 0
  1593                           ; switch strategies available:
  1594                           ; Name         Instructions Cycles
  1595                           ; simple_byte            4     3 (average)
  1596                           ;	Chosen strategy is simple_byte
  1597   002026  501C               	movf	(??_lcd_8bit_set_cursor+1)^0,w,c
  1598   002028  0A00               	xorlw	0	; case 0
  1599   00202A  B4D8               	btfsc	status,2,c
  1600   00202C  EF1A  F010         	goto	l6893
  1601   002030  EF2D  F010         	goto	l5161
  1602   002034                     l6893:
  1603                           
  1604                           ; Switch size 1, requested type "simple"
  1605                           ; Number of cases is 4, Range of values is 1 to 4
  1606                           ; switch strategies available:
  1607                           ; Name         Instructions Cycles
  1608                           ; simple_byte           13     7 (average)
  1609                           ;	Chosen strategy is simple_byte
  1610   002034  501B               	movf	??_lcd_8bit_set_cursor^0,w,c
  1611   002036  0A01               	xorlw	1	; case 1
  1612   002038  B4D8               	btfsc	status,2,c
  1613   00203A  EFE0  F00F         	goto	l5151
  1614   00203E  0A03               	xorlw	3	; case 2
  1615   002040  B4D8               	btfsc	status,2,c
  1616   002042  EFEC  F00F         	goto	l5153
  1617   002046  0A01               	xorlw	1	; case 3
  1618   002048  B4D8               	btfsc	status,2,c
  1619   00204A  EFF8  F00F         	goto	l5155
  1620   00204E  0A07               	xorlw	7	; case 4
  1621   002050  B4D8               	btfsc	status,2,c
  1622   002052  EF04  F010         	goto	l5157
  1623   002056  EF2D  F010         	goto	l5161
  1624   00205A                     l5161:
  1625                           
  1626                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 580:     return ret;
  1627   00205A  501D               	movf	lcd_8bit_set_cursor@ret^0,w,c
  1628   00205C  0012               	return		;funcret
  1629   00205E                     __end_of_lcd_8bit_set_cursor:
  1630                           	callstack 0
  1631                           
  1632 ;; *************** function _lcd_8bit_send_string *****************
  1633 ;; Defined at:
  1634 ;;		line 346 in file "ECU_layer/Char_lCD/ecu_chr_lcd.c"
  1635 ;; Parameters:    Size  Location     Type
  1636 ;;  lcd_obj         2   22[COMRAM] PTR const struct .
  1637 ;;		 -> lcd_1(10), 
  1638 ;;  string          2   24[COMRAM] PTR unsigned char 
  1639 ;;		 -> numper_places_str(7), STR_4(20), 
  1640 ;; Auto vars:     Size  Location     Type
  1641 ;;  ret             1   26[COMRAM] unsigned char 
  1642 ;; Return value:  Size  Location     Type
  1643 ;;                  1    wreg      unsigned char 
  1644 ;; Registers used:
  1645 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1646 ;; Tracked objects:
  1647 ;;		On entry : 0/0
  1648 ;;		On exit  : 0/0
  1649 ;;		Unchanged: 0/0
  1650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1651 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1652 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1654 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1655 ;;Total ram usage:        5 bytes
  1656 ;; Hardware stack levels used: 1
  1657 ;; Hardware stack levels required when called: 5
  1658 ;; This function calls:
  1659 ;;		_lcd_8bit_send_char
  1660 ;; This function is called by:
  1661 ;;		_lcd_8bit_send_string_pos
  1662 ;; This function uses a non-reentrant model
  1663 ;;
  1664                           
  1665                           	psect	text3
  1666   0021C6                     __ptext3:
  1667                           	callstack 0
  1668   0021C6                     _lcd_8bit_send_string:
  1669                           	callstack 24
  1670   0021C6                     
  1671                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 346: Std_ReturnType lcd_8bit_send_string(const lcd_8b
      +                          it_t *lcd_obj,uint8 *string);ECU_layer/Char_lCD/ecu_chr_lcd.c: 347: {;ECU_layer/Char_lCD
      +                          /ecu_chr_lcd.c: 348:     Std_ReturnType ret = (Std_ReturnType)0x01;
  1672   0021C6  0E01               	movlw	1
  1673   0021C8  6E1B               	movwf	lcd_8bit_send_string@ret^0,c
  1674   0021CA                     
  1675                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 349:     if((lcd_obj == ((void*)0))||(string==((void*
      +                          )0)))
  1676   0021CA  5017               	movf	lcd_8bit_send_string@lcd_obj^0,w,c
  1677   0021CC  1018               	iorwf	(lcd_8bit_send_string@lcd_obj+1)^0,w,c
  1678   0021CE  B4D8               	btfsc	status,2,c
  1679   0021D0  EFEC  F010         	goto	u4011
  1680   0021D4  EFEE  F010         	goto	u4010
  1681   0021D8                     u4011:
  1682   0021D8  EFF7  F010         	goto	l5175
  1683   0021DC                     u4010:
  1684   0021DC  5019               	movf	lcd_8bit_send_string@string^0,w,c
  1685   0021DE  101A               	iorwf	(lcd_8bit_send_string@string+1)^0,w,c
  1686   0021E0  A4D8               	btfss	status,2,c
  1687   0021E2  EFF5  F010         	goto	u4021
  1688   0021E6  EFF7  F010         	goto	u4020
  1689   0021EA                     u4021:
  1690   0021EA  EF16  F011         	goto	l5181
  1691   0021EE                     u4020:
  1692   0021EE                     l5175:
  1693                           
  1694                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 350:     {;ECU_layer/Char_lCD/ecu_chr_lcd.c: 351:    
      +                               ret = (Std_ReturnType)0x00;
  1695   0021EE  0E00               	movlw	0
  1696   0021F0  6E1B               	movwf	lcd_8bit_send_string@ret^0,c
  1697                           
  1698                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 352:     }
  1699   0021F2  EF2F  F011         	goto	l5183
  1700   0021F6                     l5177:
  1701                           
  1702                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 356:         {;ECU_layer/Char_lCD/ecu_chr_lcd.c: 357:
      +                                       ret = lcd_8bit_send_char(lcd_obj,*string++);
  1703   0021F6  C017  F00F         	movff	lcd_8bit_send_string@lcd_obj,lcd_8bit_send_char@lcd_obj
  1704   0021FA  C018  F010         	movff	lcd_8bit_send_string@lcd_obj+1,lcd_8bit_send_char@lcd_obj+1
  1705   0021FE  C019  FFF6         	movff	lcd_8bit_send_string@string,tblptrl
  1706   002202  C01A  FFF7         	movff	lcd_8bit_send_string@string+1,tblptrh
  1707   002206  0E00               	movlw	low (__smallconst shr (0+16))
  1708   002208  6EF8               	movwf	tblptru,c
  1709   00220A  0E0F               	movlw	(high __ramtop+-1)
  1710   00220C  64F7               	cpfsgt	tblptrh,c
  1711   00220E  D003               	bra	u4037
  1712   002210  0008               	tblrd		*
  1713   002212  50F5               	movf	tablat,w,c
  1714   002214  D005               	bra	u4030
  1715   002216                     u4037:
  1716   002216  CFF6 FFE9          	movff	tblptrl,fsr0l
  1717   00221A  CFF7 FFEA          	movff	tblptrh,fsr0h
  1718   00221E  50EF               	movf	indf0,w,c
  1719   002220                     u4030:
  1720   002220  6E11               	movwf	lcd_8bit_send_char@chr^0,c
  1721   002222  EC31  F011         	call	_lcd_8bit_send_char	;wreg free
  1722   002226  6E1B               	movwf	lcd_8bit_send_string@ret^0,c
  1723   002228  4A19               	infsnz	lcd_8bit_send_string@string^0,f,c
  1724   00222A  2A1A               	incf	(lcd_8bit_send_string@string+1)^0,f,c
  1725   00222C                     l5181:
  1726                           
  1727                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 355:         while(*string)
  1728   00222C  C019  FFF6         	movff	lcd_8bit_send_string@string,tblptrl
  1729   002230  C01A  FFF7         	movff	lcd_8bit_send_string@string+1,tblptrh
  1730   002234  0E00               	movlw	low (__smallconst shr (0+16))
  1731   002236  6EF8               	movwf	tblptru,c
  1732   002238  0E0F               	movlw	(high __ramtop+-1)
  1733   00223A  64F7               	cpfsgt	tblptrh,c
  1734   00223C  D003               	bra	u4047
  1735   00223E  0008               	tblrd		*
  1736   002240  50F5               	movf	tablat,w,c
  1737   002242  D005               	bra	u4040
  1738   002244                     u4047:
  1739   002244  CFF6 FFE9          	movff	tblptrl,fsr0l
  1740   002248  CFF7 FFEA          	movff	tblptrh,fsr0h
  1741   00224C  50EF               	movf	indf0,w,c
  1742   00224E                     u4040:
  1743   00224E  0900               	iorlw	0
  1744   002250  A4D8               	btfss	status,2,c
  1745   002252  EF2D  F011         	goto	u4051
  1746   002256  EF2F  F011         	goto	u4050
  1747   00225A                     u4051:
  1748   00225A  EFFB  F010         	goto	l5177
  1749   00225E                     u4050:
  1750   00225E                     l5183:
  1751                           
  1752                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 361:     return ret;
  1753   00225E  501B               	movf	lcd_8bit_send_string@ret^0,w,c
  1754   002260  0012               	return		;funcret
  1755   002262                     __end_of_lcd_8bit_send_string:
  1756                           	callstack 0
  1757                           
  1758 ;; *************** function _lcd_8bit_send_char *****************
  1759 ;; Defined at:
  1760 ;;		line 294 in file "ECU_layer/Char_lCD/ecu_chr_lcd.c"
  1761 ;; Parameters:    Size  Location     Type
  1762 ;;  lcd_obj         2   14[COMRAM] PTR const struct .
  1763 ;;		 -> lcd_1(10), 
  1764 ;;  chr             1   16[COMRAM] unsigned char 
  1765 ;; Auto vars:     Size  Location     Type
  1766 ;;  i               2   20[COMRAM] int 
  1767 ;;  ret             1   19[COMRAM] unsigned char 
  1768 ;; Return value:  Size  Location     Type
  1769 ;;                  1    wreg      unsigned char 
  1770 ;; Registers used:
  1771 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1772 ;; Tracked objects:
  1773 ;;		On entry : 0/0
  1774 ;;		On exit  : 0/0
  1775 ;;		Unchanged: 0/0
  1776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1777 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1778 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1779 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1780 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1781 ;;Total ram usage:        8 bytes
  1782 ;; Hardware stack levels used: 1
  1783 ;; Hardware stack levels required when called: 4
  1784 ;; This function calls:
  1785 ;;		_gpio_pin_write_logic
  1786 ;;		_lcd_8bit_send_enable
  1787 ;; This function is called by:
  1788 ;;		_lcd_8bit_send_string
  1789 ;;		_lcd_8bit_send_char_pos
  1790 ;;		_lcd_8bit_send_custome_chr
  1791 ;; This function uses a non-reentrant model
  1792 ;;
  1793                           
  1794                           	psect	text4
  1795   002262                     __ptext4:
  1796                           	callstack 0
  1797   002262                     _lcd_8bit_send_char:
  1798                           	callstack 24
  1799   002262                     
  1800                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 297:     if(lcd_obj == ((void*)0))
  1801   002262  500F               	movf	lcd_8bit_send_char@lcd_obj^0,w,c
  1802   002264  1010               	iorwf	(lcd_8bit_send_char@lcd_obj+1)^0,w,c
  1803   002266  A4D8               	btfss	status,2,c
  1804   002268  EF38  F011         	goto	u3891
  1805   00226C  EF3A  F011         	goto	u3890
  1806   002270                     u3891:
  1807   002270  EF3E  F011         	goto	l5041
  1808   002274                     u3890:
  1809   002274                     
  1810                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 298:     {;ECU_layer/Char_lCD/ecu_chr_lcd.c: 299:    
      +                               ret = (Std_ReturnType)0x00;
  1811   002274  0E00               	movlw	0
  1812   002276  6E14               	movwf	lcd_8bit_send_char@ret^0,c
  1813                           
  1814                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 300:     }
  1815   002278  EF7A  F011         	goto	l5057
  1816   00227C                     l5041:
  1817   00227C  0E09               	movlw	9
  1818   00227E  240F               	addwf	lcd_8bit_send_char@lcd_obj^0,w,c
  1819   002280  6E02               	movwf	gpio_pin_write_logic@pin^0,c
  1820   002282  0E00               	movlw	0
  1821   002284  2010               	addwfc	(lcd_8bit_send_char@lcd_obj+1)^0,w,c
  1822   002286  6E03               	movwf	(gpio_pin_write_logic@pin+1)^0,c
  1823   002288  0E01               	movlw	1
  1824   00228A  6E04               	movwf	gpio_pin_write_logic@log^0,c
  1825   00228C  EC71  F00E         	call	_gpio_pin_write_logic	;wreg free
  1826   002290                     
  1827                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 304:         for(int i=0;i<8;i++)
  1828   002290  0E00               	movlw	0
  1829   002292  6E16               	movwf	(lcd_8bit_send_char@i+1)^0,c
  1830   002294  0E00               	movlw	0
  1831   002296  6E15               	movwf	lcd_8bit_send_char@i^0,c
  1832   002298                     l5049:
  1833   002298  5015               	movf	lcd_8bit_send_char@i^0,w,c
  1834   00229A  240F               	addwf	lcd_8bit_send_char@lcd_obj^0,w,c
  1835   00229C  6E02               	movwf	gpio_pin_write_logic@pin^0,c
  1836   00229E  5016               	movf	(lcd_8bit_send_char@i+1)^0,w,c
  1837   0022A0  2010               	addwfc	(lcd_8bit_send_char@lcd_obj+1)^0,w,c
  1838   0022A2  6E03               	movwf	(gpio_pin_write_logic@pin+1)^0,c
  1839   0022A4  C015  F012         	movff	lcd_8bit_send_char@i,??_lcd_8bit_send_char
  1840   0022A8  C011  F013         	movff	lcd_8bit_send_char@chr,??_lcd_8bit_send_char+1
  1841   0022AC  2A12               	incf	??_lcd_8bit_send_char^0,f,c
  1842   0022AE  EF5B  F011         	goto	u3904
  1843   0022B2                     u3905:
  1844   0022B2  90D8               	bcf	status,0,c
  1845   0022B4  3213               	rrcf	(??_lcd_8bit_send_char+1)^0,f,c
  1846   0022B6                     u3904:
  1847   0022B6  2E12               	decfsz	??_lcd_8bit_send_char^0,f,c
  1848   0022B8  EF59  F011         	goto	u3905
  1849   0022BC  5013               	movf	(??_lcd_8bit_send_char+1)^0,w,c
  1850   0022BE  0B01               	andlw	1
  1851   0022C0  6E04               	movwf	gpio_pin_write_logic@log^0,c
  1852   0022C2  EC71  F00E         	call	_gpio_pin_write_logic	;wreg free
  1853   0022C6                     
  1854                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 307:         }
  1855   0022C6  4A15               	infsnz	lcd_8bit_send_char@i^0,f,c
  1856   0022C8  2A16               	incf	(lcd_8bit_send_char@i+1)^0,f,c
  1857   0022CA  BE16               	btfsc	(lcd_8bit_send_char@i+1)^0,7,c
  1858   0022CC  EF71  F011         	goto	u3911
  1859   0022D0  5016               	movf	(lcd_8bit_send_char@i+1)^0,w,c
  1860   0022D2  E109               	bnz	u3910
  1861   0022D4  0E08               	movlw	8
  1862   0022D6  5C15               	subwf	lcd_8bit_send_char@i^0,w,c
  1863   0022D8  A0D8               	btfss	status,0,c
  1864   0022DA  EF71  F011         	goto	u3911
  1865   0022DE  EF73  F011         	goto	u3910
  1866   0022E2                     u3911:
  1867   0022E2  EF4C  F011         	goto	l5049
  1868   0022E6                     u3910:
  1869   0022E6                     
  1870                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 308:         ret = lcd_8bit_send_enable(lcd_obj);
  1871   0022E6  C00F  F00C         	movff	lcd_8bit_send_char@lcd_obj,lcd_8bit_send_enable@lcd_obj
  1872   0022EA  C010  F00D         	movff	lcd_8bit_send_char@lcd_obj+1,lcd_8bit_send_enable@lcd_obj+1
  1873   0022EE  EC35  F013         	call	_lcd_8bit_send_enable	;wreg free
  1874   0022F2  6E14               	movwf	lcd_8bit_send_char@ret^0,c
  1875   0022F4                     l5057:
  1876                           
  1877                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 310:     return ret;
  1878   0022F4  5014               	movf	lcd_8bit_send_char@ret^0,w,c
  1879   0022F6  0012               	return		;funcret
  1880   0022F8                     __end_of_lcd_8bit_send_char:
  1881                           	callstack 0
  1882                           
  1883 ;; *************** function _dc_motor_stop *****************
  1884 ;; Defined at:
  1885 ;;		line 92 in file "ECU_layer/DC_Motor/ecu_Dc_motor.c"
  1886 ;; Parameters:    Size  Location     Type
  1887 ;;  dc_motor        2   11[COMRAM] PTR const struct .
  1888 ;;		 -> motor_2(2), motor_1(2), 
  1889 ;; Auto vars:     Size  Location     Type
  1890 ;;  ret             1   13[COMRAM] unsigned char 
  1891 ;; Return value:  Size  Location     Type
  1892 ;;                  1    wreg      unsigned char 
  1893 ;; Registers used:
  1894 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1895 ;; Tracked objects:
  1896 ;;		On entry : 0/0
  1897 ;;		On exit  : 0/0
  1898 ;;		Unchanged: 0/0
  1899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1900 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1901 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1903 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1904 ;;Total ram usage:        3 bytes
  1905 ;; Hardware stack levels used: 1
  1906 ;; Hardware stack levels required when called: 3
  1907 ;; This function calls:
  1908 ;;		_gpio_pin_write_logic
  1909 ;; This function is called by:
  1910 ;;		_main
  1911 ;; This function uses a non-reentrant model
  1912 ;;
  1913                           
  1914                           	psect	text5
  1915   002704                     __ptext5:
  1916                           	callstack 0
  1917   002704                     _dc_motor_stop:
  1918                           	callstack 27
  1919   002704                     
  1920                           ;ECU_layer/DC_Motor/ecu_Dc_motor.c: 95:     if(dc_motor == ((void*)0))
  1921   002704  500C               	movf	dc_motor_stop@dc_motor^0,w,c
  1922   002706  100D               	iorwf	(dc_motor_stop@dc_motor+1)^0,w,c
  1923   002708  A4D8               	btfss	status,2,c
  1924   00270A  EF89  F013         	goto	u4261
  1925   00270E  EF8B  F013         	goto	u4260
  1926   002712                     u4261:
  1927   002712  EF8F  F013         	goto	l5375
  1928   002716                     u4260:
  1929   002716                     
  1930                           ;ECU_layer/DC_Motor/ecu_Dc_motor.c: 96:     {;ECU_layer/DC_Motor/ecu_Dc_motor.c: 97:    
      +                               ret = (Std_ReturnType)0x00;
  1931   002716  0E00               	movlw	0
  1932   002718  6E0E               	movwf	dc_motor_stop@ret^0,c
  1933                           
  1934                           ;ECU_layer/DC_Motor/ecu_Dc_motor.c: 98:     }
  1935   00271A  EFA3  F013         	goto	l5377
  1936   00271E                     l5375:
  1937                           
  1938                           ;ECU_layer/DC_Motor/ecu_Dc_motor.c: 100:     {;ECU_layer/DC_Motor/ecu_Dc_motor.c: 103:  
      +                                 ret = gpio_pin_write_logic(&(dc_motor->dc_motor_pin[0]),GPIO_LOW);
  1939   00271E  C00C  F002         	movff	dc_motor_stop@dc_motor,gpio_pin_write_logic@pin
  1940   002722  C00D  F003         	movff	dc_motor_stop@dc_motor+1,gpio_pin_write_logic@pin+1
  1941   002726  0E00               	movlw	0
  1942   002728  6E04               	movwf	gpio_pin_write_logic@log^0,c
  1943   00272A  EC71  F00E         	call	_gpio_pin_write_logic	;wreg free
  1944   00272E  6E0E               	movwf	dc_motor_stop@ret^0,c
  1945                           
  1946                           ;ECU_layer/DC_Motor/ecu_Dc_motor.c: 104:         ret = gpio_pin_write_logic(&(dc_motor->
      +                          dc_motor_pin[1]),GPIO_LOW);
  1947   002730  0E01               	movlw	1
  1948   002732  240C               	addwf	dc_motor_stop@dc_motor^0,w,c
  1949   002734  6E02               	movwf	gpio_pin_write_logic@pin^0,c
  1950   002736  0E00               	movlw	0
  1951   002738  200D               	addwfc	(dc_motor_stop@dc_motor+1)^0,w,c
  1952   00273A  6E03               	movwf	(gpio_pin_write_logic@pin+1)^0,c
  1953   00273C  0E00               	movlw	0
  1954   00273E  6E04               	movwf	gpio_pin_write_logic@log^0,c
  1955   002740  EC71  F00E         	call	_gpio_pin_write_logic	;wreg free
  1956   002744  6E0E               	movwf	dc_motor_stop@ret^0,c
  1957   002746                     l5377:
  1958                           
  1959                           ;ECU_layer/DC_Motor/ecu_Dc_motor.c: 106:     return ret;
  1960   002746  500E               	movf	dc_motor_stop@ret^0,w,c
  1961   002748  0012               	return		;funcret
  1962   00274A                     __end_of_dc_motor_stop:
  1963                           	callstack 0
  1964                           
  1965 ;; *************** function _dc_motor_move_right *****************
  1966 ;; Defined at:
  1967 ;;		line 44 in file "ECU_layer/DC_Motor/ecu_Dc_motor.c"
  1968 ;; Parameters:    Size  Location     Type
  1969 ;;  dc_motor        2   11[COMRAM] PTR const struct .
  1970 ;;		 -> motor_2(2), motor_1(2), 
  1971 ;; Auto vars:     Size  Location     Type
  1972 ;;  ret             1   13[COMRAM] unsigned char 
  1973 ;; Return value:  Size  Location     Type
  1974 ;;                  1    wreg      unsigned char 
  1975 ;; Registers used:
  1976 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1977 ;; Tracked objects:
  1978 ;;		On entry : 0/0
  1979 ;;		On exit  : 0/0
  1980 ;;		Unchanged: 0/0
  1981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1982 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1983 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1985 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1986 ;;Total ram usage:        3 bytes
  1987 ;; Hardware stack levels used: 1
  1988 ;; Hardware stack levels required when called: 3
  1989 ;; This function calls:
  1990 ;;		_gpio_pin_write_logic
  1991 ;; This function is called by:
  1992 ;;		_main
  1993 ;; This function uses a non-reentrant model
  1994 ;;
  1995                           
  1996                           	psect	text6
  1997   00274A                     __ptext6:
  1998                           	callstack 0
  1999   00274A                     _dc_motor_move_right:
  2000                           	callstack 27
  2001   00274A                     
  2002                           ;ECU_layer/DC_Motor/ecu_Dc_motor.c: 47:     if(dc_motor == ((void*)0))
  2003   00274A  500C               	movf	dc_motor_move_right@dc_motor^0,w,c
  2004   00274C  100D               	iorwf	(dc_motor_move_right@dc_motor+1)^0,w,c
  2005   00274E  A4D8               	btfss	status,2,c
  2006   002750  EFAC  F013         	goto	u4241
  2007   002754  EFAE  F013         	goto	u4240
  2008   002758                     u4241:
  2009   002758  EFB2  F013         	goto	l5351
  2010   00275C                     u4240:
  2011   00275C                     
  2012                           ;ECU_layer/DC_Motor/ecu_Dc_motor.c: 48:     {;ECU_layer/DC_Motor/ecu_Dc_motor.c: 49:    
      +                               ret = (Std_ReturnType)0x00;
  2013   00275C  0E00               	movlw	0
  2014   00275E  6E0E               	movwf	dc_motor_move_right@ret^0,c
  2015                           
  2016                           ;ECU_layer/DC_Motor/ecu_Dc_motor.c: 50:     }
  2017   002760  EFC6  F013         	goto	l5353
  2018   002764                     l5351:
  2019                           
  2020                           ;ECU_layer/DC_Motor/ecu_Dc_motor.c: 52:     {;ECU_layer/DC_Motor/ecu_Dc_motor.c: 54:    
      +                               ret = gpio_pin_write_logic(&(dc_motor->dc_motor_pin[0]),GPIO_HIGH);
  2021   002764  C00C  F002         	movff	dc_motor_move_right@dc_motor,gpio_pin_write_logic@pin
  2022   002768  C00D  F003         	movff	dc_motor_move_right@dc_motor+1,gpio_pin_write_logic@pin+1
  2023   00276C  0E01               	movlw	1
  2024   00276E  6E04               	movwf	gpio_pin_write_logic@log^0,c
  2025   002770  EC71  F00E         	call	_gpio_pin_write_logic	;wreg free
  2026   002774  6E0E               	movwf	dc_motor_move_right@ret^0,c
  2027                           
  2028                           ;ECU_layer/DC_Motor/ecu_Dc_motor.c: 55:         ret = gpio_pin_write_logic(&(dc_motor->d
      +                          c_motor_pin[1]),GPIO_LOW);
  2029   002776  0E01               	movlw	1
  2030   002778  240C               	addwf	dc_motor_move_right@dc_motor^0,w,c
  2031   00277A  6E02               	movwf	gpio_pin_write_logic@pin^0,c
  2032   00277C  0E00               	movlw	0
  2033   00277E  200D               	addwfc	(dc_motor_move_right@dc_motor+1)^0,w,c
  2034   002780  6E03               	movwf	(gpio_pin_write_logic@pin+1)^0,c
  2035   002782  0E00               	movlw	0
  2036   002784  6E04               	movwf	gpio_pin_write_logic@log^0,c
  2037   002786  EC71  F00E         	call	_gpio_pin_write_logic	;wreg free
  2038   00278A  6E0E               	movwf	dc_motor_move_right@ret^0,c
  2039   00278C                     l5353:
  2040                           
  2041                           ;ECU_layer/DC_Motor/ecu_Dc_motor.c: 57:     return ret;
  2042   00278C  500E               	movf	dc_motor_move_right@ret^0,w,c
  2043   00278E  0012               	return		;funcret
  2044   002790                     __end_of_dc_motor_move_right:
  2045                           	callstack 0
  2046                           
  2047 ;; *************** function _dc_motor_move_left *****************
  2048 ;; Defined at:
  2049 ;;		line 67 in file "ECU_layer/DC_Motor/ecu_Dc_motor.c"
  2050 ;; Parameters:    Size  Location     Type
  2051 ;;  dc_motor        2   11[COMRAM] PTR const struct .
  2052 ;;		 -> motor_2(2), motor_1(2), 
  2053 ;; Auto vars:     Size  Location     Type
  2054 ;;  ret             1   13[COMRAM] unsigned char 
  2055 ;; Return value:  Size  Location     Type
  2056 ;;                  1    wreg      unsigned char 
  2057 ;; Registers used:
  2058 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2059 ;; Tracked objects:
  2060 ;;		On entry : 0/0
  2061 ;;		On exit  : 0/0
  2062 ;;		Unchanged: 0/0
  2063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2064 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2065 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2067 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2068 ;;Total ram usage:        3 bytes
  2069 ;; Hardware stack levels used: 1
  2070 ;; Hardware stack levels required when called: 3
  2071 ;; This function calls:
  2072 ;;		_gpio_pin_write_logic
  2073 ;; This function is called by:
  2074 ;;		_main
  2075 ;; This function uses a non-reentrant model
  2076 ;;
  2077                           
  2078                           	psect	text7
  2079   002790                     __ptext7:
  2080                           	callstack 0
  2081   002790                     _dc_motor_move_left:
  2082                           	callstack 27
  2083   002790                     
  2084                           ;ECU_layer/DC_Motor/ecu_Dc_motor.c: 70:     if(dc_motor == ((void*)0))
  2085   002790  500C               	movf	dc_motor_move_left@dc_motor^0,w,c
  2086   002792  100D               	iorwf	(dc_motor_move_left@dc_motor+1)^0,w,c
  2087   002794  A4D8               	btfss	status,2,c
  2088   002796  EFCF  F013         	goto	u4251
  2089   00279A  EFD1  F013         	goto	u4250
  2090   00279E                     u4251:
  2091   00279E  EFD5  F013         	goto	l5363
  2092   0027A2                     u4250:
  2093   0027A2                     
  2094                           ;ECU_layer/DC_Motor/ecu_Dc_motor.c: 71:     {;ECU_layer/DC_Motor/ecu_Dc_motor.c: 72:    
      +                               ret = (Std_ReturnType)0x00;
  2095   0027A2  0E00               	movlw	0
  2096   0027A4  6E0E               	movwf	dc_motor_move_left@ret^0,c
  2097                           
  2098                           ;ECU_layer/DC_Motor/ecu_Dc_motor.c: 73:     }
  2099   0027A6  EFE9  F013         	goto	l5365
  2100   0027AA                     l5363:
  2101                           
  2102                           ;ECU_layer/DC_Motor/ecu_Dc_motor.c: 75:     {;ECU_layer/DC_Motor/ecu_Dc_motor.c: 77:    
      +                               ret = gpio_pin_write_logic(&(dc_motor->dc_motor_pin[0]),GPIO_LOW);
  2103   0027AA  C00C  F002         	movff	dc_motor_move_left@dc_motor,gpio_pin_write_logic@pin
  2104   0027AE  C00D  F003         	movff	dc_motor_move_left@dc_motor+1,gpio_pin_write_logic@pin+1
  2105   0027B2  0E00               	movlw	0
  2106   0027B4  6E04               	movwf	gpio_pin_write_logic@log^0,c
  2107   0027B6  EC71  F00E         	call	_gpio_pin_write_logic	;wreg free
  2108   0027BA  6E0E               	movwf	dc_motor_move_left@ret^0,c
  2109                           
  2110                           ;ECU_layer/DC_Motor/ecu_Dc_motor.c: 78:         ret = gpio_pin_write_logic(&(dc_motor->d
      +                          c_motor_pin[1]),GPIO_HIGH);
  2111   0027BC  0E01               	movlw	1
  2112   0027BE  240C               	addwf	dc_motor_move_left@dc_motor^0,w,c
  2113   0027C0  6E02               	movwf	gpio_pin_write_logic@pin^0,c
  2114   0027C2  0E00               	movlw	0
  2115   0027C4  200D               	addwfc	(dc_motor_move_left@dc_motor+1)^0,w,c
  2116   0027C6  6E03               	movwf	(gpio_pin_write_logic@pin+1)^0,c
  2117   0027C8  0E01               	movlw	1
  2118   0027CA  6E04               	movwf	gpio_pin_write_logic@log^0,c
  2119   0027CC  EC71  F00E         	call	_gpio_pin_write_logic	;wreg free
  2120   0027D0  6E0E               	movwf	dc_motor_move_left@ret^0,c
  2121   0027D2                     l5365:
  2122                           
  2123                           ;ECU_layer/DC_Motor/ecu_Dc_motor.c: 80:     return ret;
  2124   0027D2  500E               	movf	dc_motor_move_left@ret^0,w,c
  2125   0027D4  0012               	return		;funcret
  2126   0027D6                     __end_of_dc_motor_move_left:
  2127                           	callstack 0
  2128                           
  2129 ;; *************** function _convert_byte_to_string *****************
  2130 ;; Defined at:
  2131 ;;		line 426 in file "ECU_layer/Char_lCD/ecu_chr_lcd.c"
  2132 ;; Parameters:    Size  Location     Type
  2133 ;;  value           1    wreg     unsigned char 
  2134 ;;  str             2   85[COMRAM] PTR unsigned char 
  2135 ;;		 -> numper_places_str(7), 
  2136 ;; Auto vars:     Size  Location     Type
  2137 ;;  value           1   87[COMRAM] unsigned char 
  2138 ;;  ret             1   88[COMRAM] unsigned char 
  2139 ;; Return value:  Size  Location     Type
  2140 ;;                  1    wreg      unsigned char 
  2141 ;; Registers used:
  2142 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2143 ;; Tracked objects:
  2144 ;;		On entry : 0/0
  2145 ;;		On exit  : 0/0
  2146 ;;		Unchanged: 0/0
  2147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2148 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2149 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2151 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2152 ;;Total ram usage:        4 bytes
  2153 ;; Hardware stack levels used: 1
  2154 ;; Hardware stack levels required when called: 10
  2155 ;; This function calls:
  2156 ;;		_memset
  2157 ;;		_sprintf
  2158 ;; This function is called by:
  2159 ;;		_main
  2160 ;; This function uses a non-reentrant model
  2161 ;;
  2162                           
  2163                           	psect	text8
  2164   0025C0                     __ptext8:
  2165                           	callstack 0
  2166   0025C0                     _convert_byte_to_string:
  2167                           	callstack 20
  2168                           
  2169                           ;incstack = 0
  2170                           ;convert_byte_to_string@value stored from wreg
  2171   0025C0  6E58               	movwf	convert_byte_to_string@value^0,c
  2172   0025C2                     
  2173                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 426: Std_ReturnType convert_byte_to_string(uint8 valu
      +                          e,uint8 *str);ECU_layer/Char_lCD/ecu_chr_lcd.c: 427: {;ECU_layer/Char_lCD/ecu_chr_lcd.c:
      +                           428:     Std_ReturnType ret = (Std_ReturnType)0x01;
  2174   0025C2  0E01               	movlw	1
  2175   0025C4  6E59               	movwf	convert_byte_to_string@ret^0,c
  2176   0025C6                     
  2177                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 429:     if(str == ((void*)0))
  2178   0025C6  5056               	movf	convert_byte_to_string@str^0,w,c
  2179   0025C8  1057               	iorwf	(convert_byte_to_string@str+1)^0,w,c
  2180   0025CA  A4D8               	btfss	status,2,c
  2181   0025CC  EFEA  F012         	goto	u4231
  2182   0025D0  EFEC  F012         	goto	u4230
  2183   0025D4                     u4231:
  2184   0025D4  EFF0  F012         	goto	l5337
  2185   0025D8                     u4230:
  2186   0025D8                     
  2187                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 430:     {;ECU_layer/Char_lCD/ecu_chr_lcd.c: 431:    
      +                               ret = (Std_ReturnType)0x00;
  2188   0025D8  0E00               	movlw	0
  2189   0025DA  6E59               	movwf	convert_byte_to_string@ret^0,c
  2190                           
  2191                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 432:     }
  2192   0025DC  EF0B  F013         	goto	l5341
  2193   0025E0                     l5337:
  2194                           
  2195                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 434:     {;ECU_layer/Char_lCD/ecu_chr_lcd.c: 436:    
      +                               memset(str,'\0',4);
  2196   0025E0  C056  F002         	movff	convert_byte_to_string@str,memset@dest
  2197   0025E4  C057  F003         	movff	convert_byte_to_string@str+1,memset@dest+1
  2198   0025E8  0E00               	movlw	0
  2199   0025EA  6E05               	movwf	(memset@c+1)^0,c
  2200   0025EC  0E00               	movlw	0
  2201   0025EE  6E04               	movwf	memset@c^0,c
  2202   0025F0  0E00               	movlw	0
  2203   0025F2  6E07               	movwf	(memset@n+1)^0,c
  2204   0025F4  0E04               	movlw	4
  2205   0025F6  6E06               	movwf	memset@n^0,c
  2206   0025F8  ECE5  F00B         	call	_memset	;wreg free
  2207   0025FC                     
  2208                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 437:         sprintf(str,"%i",value);
  2209   0025FC  C056  F040         	movff	convert_byte_to_string@str,sprintf@s
  2210   002600  C057  F041         	movff	convert_byte_to_string@str+1,sprintf@s+1
  2211   002604  0E21               	movlw	low STR_1
  2212   002606  6E42               	movwf	sprintf@fmt^0,c
  2213   002608  0E10               	movlw	high STR_1
  2214   00260A  6E43               	movwf	(sprintf@fmt+1)^0,c
  2215   00260C  C058  F044         	movff	convert_byte_to_string@value,?_sprintf+4
  2216   002610  6A45               	clrf	(?_sprintf+5)^0,c
  2217   002612  EC5C  F013         	call	_sprintf	;wreg free
  2218   002616                     l5341:
  2219                           
  2220                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 439:     return ret;
  2221   002616  5059               	movf	convert_byte_to_string@ret^0,w,c
  2222   002618  0012               	return		;funcret
  2223   00261A                     __end_of_convert_byte_to_string:
  2224                           	callstack 0
  2225                           
  2226 ;; *************** function _sprintf *****************
  2227 ;; Defined at:
  2228 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_sprintf.c"
  2229 ;; Parameters:    Size  Location     Type
  2230 ;;  s               2   63[COMRAM] PTR unsigned char 
  2231 ;;		 -> numper_places_str(7), convert_int_to_string@Temp_String(11), convert_short_to_string@Temp_String(6), 
  2232 ;;  fmt             2   65[COMRAM] PTR const unsigned char 
  2233 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2234 ;; Auto vars:     Size  Location     Type
  2235 ;;  f              12   73[COMRAM] struct _IO_FILE
  2236 ;;  ap              2   71[COMRAM] PTR void [1]
  2237 ;;		 -> ?_sprintf(2), 
  2238 ;;  ret             2    0        int 
  2239 ;; Return value:  Size  Location     Type
  2240 ;;                  2   63[COMRAM] int 
  2241 ;; Registers used:
  2242 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2243 ;; Tracked objects:
  2244 ;;		On entry : 0/0
  2245 ;;		On exit  : 0/0
  2246 ;;		Unchanged: 0/0
  2247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2248 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2249 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2251 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2252 ;;Total ram usage:       22 bytes
  2253 ;; Hardware stack levels used: 1
  2254 ;; Hardware stack levels required when called: 9
  2255 ;; This function calls:
  2256 ;;		_vfprintf
  2257 ;; This function is called by:
  2258 ;;		_convert_byte_to_string
  2259 ;;		_convert_short_to_string
  2260 ;;		_convert_int_to_string
  2261 ;; This function uses a non-reentrant model
  2262 ;;
  2263                           
  2264                           	psect	text9
  2265   0026B8                     __ptext9:
  2266                           	callstack 0
  2267   0026B8                     _sprintf:
  2268                           	callstack 20
  2269   0026B8  0E44               	movlw	low (?_sprintf+4)
  2270   0026BA  6E48               	movwf	sprintf@ap^0,c
  2271   0026BC  0E00               	movlw	high (?_sprintf+4)
  2272   0026BE  6E49               	movwf	(sprintf@ap+1)^0,c
  2273   0026C0  C040  F04A         	movff	sprintf@s,sprintf@f
  2274   0026C4  C041  F04B         	movff	sprintf@s+1,sprintf@f+1
  2275   0026C8  0E00               	movlw	0
  2276   0026CA  6E4E               	movwf	(sprintf@f+4)^0,c
  2277   0026CC  0E00               	movlw	0
  2278   0026CE  6E4D               	movwf	(sprintf@f+3)^0,c
  2279   0026D0  0E00               	movlw	0
  2280   0026D2  6E55               	movwf	(sprintf@f+11)^0,c
  2281   0026D4  0E00               	movlw	0
  2282   0026D6  6E54               	movwf	(sprintf@f+10)^0,c
  2283   0026D8  0E4A               	movlw	low sprintf@f
  2284   0026DA  6E38               	movwf	vfprintf@fp^0,c
  2285   0026DC  0E00               	movlw	high sprintf@f
  2286   0026DE  6E39               	movwf	(vfprintf@fp+1)^0,c
  2287   0026E0  C042  F03A         	movff	sprintf@fmt,vfprintf@fmt
  2288   0026E4  C043  F03B         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2289   0026E8  0E48               	movlw	low sprintf@ap
  2290   0026EA  6E3C               	movwf	vfprintf@ap^0,c
  2291   0026EC  0E00               	movlw	high sprintf@ap
  2292   0026EE  6E3D               	movwf	(vfprintf@ap+1)^0,c
  2293   0026F0  EC0D  F013         	call	_vfprintf	;wreg free
  2294   0026F4  504D               	movf	(sprintf@f+3)^0,w,c
  2295   0026F6  2440               	addwf	sprintf@s^0,w,c
  2296   0026F8  6ED9               	movwf	fsr2l,c
  2297   0026FA  504E               	movf	(sprintf@f+4)^0,w,c
  2298   0026FC  2041               	addwfc	(sprintf@s+1)^0,w,c
  2299   0026FE  6EDA               	movwf	fsr2h,c
  2300   002700  6ADF               	clrf	indf2,c
  2301   002702  0012               	return		;funcret
  2302   002704                     __end_of_sprintf:
  2303                           	callstack 0
  2304                           
  2305 ;; *************** function _vfprintf *****************
  2306 ;; Defined at:
  2307 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2308 ;; Parameters:    Size  Location     Type
  2309 ;;  fp              2   55[COMRAM] PTR struct _IO_FILE
  2310 ;;		 -> sprintf@f(12), 
  2311 ;;  fmt             2   57[COMRAM] PTR const unsigned char 
  2312 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2313 ;;  ap              2   59[COMRAM] PTR PTR void 
  2314 ;;		 -> sprintf@ap(2), 
  2315 ;; Auto vars:     Size  Location     Type
  2316 ;;  cfmt            2   61[COMRAM] PTR unsigned char 
  2317 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2318 ;; Return value:  Size  Location     Type
  2319 ;;                  2   55[COMRAM] int 
  2320 ;; Registers used:
  2321 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2322 ;; Tracked objects:
  2323 ;;		On entry : 0/0
  2324 ;;		On exit  : 0/0
  2325 ;;		Unchanged: 0/0
  2326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2327 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2328 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2330 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2331 ;;Total ram usage:        8 bytes
  2332 ;; Hardware stack levels used: 1
  2333 ;; Hardware stack levels required when called: 8
  2334 ;; This function calls:
  2335 ;;		_vfpfcnvrt
  2336 ;; This function is called by:
  2337 ;;		_sprintf
  2338 ;; This function uses a non-reentrant model
  2339 ;;
  2340                           
  2341                           	psect	text10
  2342   00261A                     __ptext10:
  2343                           	callstack 0
  2344   00261A                     _vfprintf:
  2345                           	callstack 20
  2346   00261A                     
  2347                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  2348   00261A  C03A  F03E         	movff	vfprintf@fmt,vfprintf@cfmt
  2349   00261E  C03B  F03F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2350                           
  2351                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  2352   002622  EF21  F013         	goto	l5089
  2353   002626                     l5087:
  2354                           
  2355                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2356   002626  C038  F02A         	movff	vfprintf@fp,vfpfcnvrt@fp
  2357   00262A  C039  F02B         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2358   00262E  0E3E               	movlw	low vfprintf@cfmt
  2359   002630  6E2C               	movwf	vfpfcnvrt@fmt^0,c
  2360   002632  0E00               	movlw	high vfprintf@cfmt
  2361   002634  6E2D               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2362   002636  C03C  F02E         	movff	vfprintf@ap,vfpfcnvrt@ap
  2363   00263A  C03D  F02F         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2364   00263E  ECDB  F00D         	call	_vfpfcnvrt	;wreg free
  2365   002642                     l5089:
  2366                           
  2367                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  2368   002642  C03E  FFF6         	movff	vfprintf@cfmt,tblptrl
  2369   002646  C03F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2370   00264A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2371   00264A  6AF8               	clrf	tblptru,c
  2372   00264C                     	endif
  2373   00264C                     	if	0	;tblptru may be non-zero
  2374   00264C                     	endif
  2375   00264C  0008               	tblrd		*
  2376   00264E  50F5               	movf	tablat,w,c
  2377   002650  0900               	iorlw	0
  2378   002652  A4D8               	btfss	status,2,c
  2379   002654  EF2E  F013         	goto	u3941
  2380   002658  EF30  F013         	goto	u3940
  2381   00265C                     u3941:
  2382   00265C  EF13  F013         	goto	l5087
  2383   002660                     u3940:
  2384   002660                     
  2385                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  2386   002660  0E00               	movlw	0
  2387   002662  6E39               	movwf	(?_vfprintf+1)^0,c
  2388   002664  0E00               	movlw	0
  2389   002666  6E38               	movwf	?_vfprintf^0,c
  2390   002668  0012               	return		;funcret
  2391   00266A                     __end_of_vfprintf:
  2392                           	callstack 0
  2393                           
  2394 ;; *************** function _vfpfcnvrt *****************
  2395 ;; Defined at:
  2396 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2397 ;; Parameters:    Size  Location     Type
  2398 ;;  fp              2   41[COMRAM] PTR struct _IO_FILE
  2399 ;;		 -> sprintf@f(12), 
  2400 ;;  fmt             2   43[COMRAM] PTR PTR unsigned char 
  2401 ;;		 -> vfprintf@cfmt(2), 
  2402 ;;  ap              2   45[COMRAM] PTR PTR void 
  2403 ;;		 -> sprintf@ap(2), 
  2404 ;; Auto vars:     Size  Location     Type
  2405 ;;  convarg         4   49[COMRAM] struct .
  2406 ;;  cp              2   53[COMRAM] PTR unsigned char 
  2407 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2408 ;;  i               2    0        int 
  2409 ;;  done            2    0        int 
  2410 ;;  c               1    0        unsigned char 
  2411 ;; Return value:  Size  Location     Type
  2412 ;;                  1    wreg      void 
  2413 ;; Registers used:
  2414 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2415 ;; Tracked objects:
  2416 ;;		On entry : 0/0
  2417 ;;		On exit  : 0/0
  2418 ;;		Unchanged: 0/0
  2419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2420 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2421 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2422 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2423 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2424 ;;Total ram usage:       14 bytes
  2425 ;; Hardware stack levels used: 1
  2426 ;; Hardware stack levels required when called: 7
  2427 ;; This function calls:
  2428 ;;		_dtoa
  2429 ;;		_fputc
  2430 ;; This function is called by:
  2431 ;;		_vfprintf
  2432 ;; This function uses a non-reentrant model
  2433 ;;
  2434                           
  2435                           	psect	text11
  2436   001BB6                     __ptext11:
  2437                           	callstack 0
  2438   001BB6                     _vfpfcnvrt:
  2439                           	callstack 20
  2440   001BB6                     
  2441                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  2442   001BB6  C02C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2443   001BBA  C02D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2444   001BBE  CFDE FFF6          	movff	postinc2,tblptrl
  2445   001BC2  CFDD FFF7          	movff	postdec2,tblptrh
  2446   001BC6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2447   001BC6  6AF8               	clrf	tblptru,c
  2448   001BC8                     	endif
  2449   001BC8                     	if	0	;tblptru may be non-zero
  2450   001BC8                     	endif
  2451   001BC8  0008               	tblrd		*
  2452   001BCA  50F5               	movf	tablat,w,c
  2453   001BCC  0A25               	xorlw	37
  2454   001BCE  A4D8               	btfss	status,2,c
  2455   001BD0  EFEC  F00D         	goto	u3841
  2456   001BD4  EFEE  F00D         	goto	u3840
  2457   001BD8                     u3841:
  2458   001BD8  EF5B  F00E         	goto	l4983
  2459   001BDC                     u3840:
  2460   001BDC                     
  2461                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  2462   001BDC  C02C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2463   001BE0  C02D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2464   001BE4  2ADE               	incf	postinc2,f,c
  2465   001BE6  0E00               	movlw	0
  2466   001BE8  22DD               	addwfc	postdec2,f,c
  2467   001BEA                     
  2468                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  2469   001BEA  0E00               	movlw	0
  2470   001BEC  0100               	movlb	0	; () banked
  2471   001BEE  6FA8               	movwf	(_width+1)& (0+255),b
  2472   001BF0  0E00               	movlw	0
  2473   001BF2  6FA7               	movwf	_width& (0+255),b
  2474   001BF4  C0A7  F068         	movff	_width,_flags
  2475   001BF8                     
  2476                           ; BSR set to: 0
  2477                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  2478   001BF8  685E               	setf	_prec^0,c
  2479   001BFA  685F               	setf	(_prec+1)^0,c
  2480   001BFC                     
  2481                           ; BSR set to: 0
  2482                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1143:   cp = *fmt
      +                          ;
  2483   001BFC  C02C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2484   001C00  C02D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2485   001C04  CFDE F036          	movff	postinc2,vfpfcnvrt@cp
  2486   001C08  CFDD F037          	movff	postdec2,vfpfcnvrt@cp+1
  2487   001C0C                     
  2488                           ; BSR set to: 0
  2489                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1213:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2490   001C0C  C036  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2491   001C10  C037  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2492   001C14                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2493   001C14  6AF8               	clrf	tblptru,c
  2494   001C16                     	endif
  2495   001C16                     	if	0	;tblptru may be non-zero
  2496   001C16                     	endif
  2497   001C16  0008               	tblrd		*
  2498   001C18  50F5               	movf	tablat,w,c
  2499   001C1A  0A64               	xorlw	100
  2500   001C1C  B4D8               	btfsc	status,2,c
  2501   001C1E  EF13  F00E         	goto	u3851
  2502   001C22  EF15  F00E         	goto	u3850
  2503   001C26                     u3851:
  2504   001C26  EF24  F00E         	goto	l4973
  2505   001C2A                     u3850:
  2506   001C2A                     
  2507                           ; BSR set to: 0
  2508   001C2A  C036  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2509   001C2E  C037  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2510   001C32                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2511   001C32  6AF8               	clrf	tblptru,c
  2512   001C34                     	endif
  2513   001C34                     	if	0	;tblptru may be non-zero
  2514   001C34                     	endif
  2515   001C34  0008               	tblrd		*
  2516   001C36  50F5               	movf	tablat,w,c
  2517   001C38  0A69               	xorlw	105
  2518   001C3A  A4D8               	btfss	status,2,c
  2519   001C3C  EF22  F00E         	goto	u3861
  2520   001C40  EF24  F00E         	goto	u3860
  2521   001C44                     u3861:
  2522   001C44  EF52  F00E         	goto	l4979
  2523   001C48                     u3860:
  2524   001C48                     l4973:
  2525                           
  2526                           ; BSR set to: 0
  2527                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1256:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2528   001C48  C02E  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2529   001C4C  C02F  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2530   001C50  CFDF F030          	movff	indf2,??_vfpfcnvrt
  2531   001C54  0E02               	movlw	2
  2532   001C56  26DE               	addwf	postinc2,f,c
  2533   001C58  CFDF F031          	movff	indf2,??_vfpfcnvrt+1
  2534   001C5C  0E00               	movlw	0
  2535   001C5E  22DD               	addwfc	postdec2,f,c
  2536   001C60  C030  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2537   001C64  C031  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2538   001C68  CFDE F032          	movff	postinc2,vfpfcnvrt@convarg
  2539   001C6C  CFDD F033          	movff	postdec2,vfpfcnvrt@convarg+1
  2540                           
  2541                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1258:    *fmt = c
      +                          p+1;
  2542   001C70  0E01               	movlw	1
  2543   001C72  2436               	addwf	vfpfcnvrt@cp^0,w,c
  2544   001C74  6E30               	movwf	??_vfpfcnvrt^0,c
  2545   001C76  0E00               	movlw	0
  2546   001C78  2037               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  2547   001C7A  6E31               	movwf	(??_vfpfcnvrt+1)^0,c
  2548   001C7C  C02C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2549   001C80  C02D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2550   001C84  C030  FFDE         	movff	??_vfpfcnvrt,postinc2
  2551   001C88  C031  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2552   001C8C                     
  2553                           ; BSR set to: 0
  2554                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1259:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  2555   001C8C  C02A  F01D         	movff	vfpfcnvrt@fp,dtoa@fp
  2556   001C90  C02B  F01E         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  2557   001C94  C032  F01F         	movff	vfpfcnvrt@convarg,dtoa@d
  2558   001C98  C033  F020         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  2559   001C9C  EC1B  F00B         	call	_dtoa	;wreg free
  2560   001CA0  EF70  F00E         	goto	l2103
  2561   001CA4                     l4979:
  2562                           
  2563                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  2564   001CA4  C02C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2565   001CA8  C02D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2566   001CAC  2ADE               	incf	postinc2,f,c
  2567   001CAE  0E00               	movlw	0
  2568   001CB0  22DD               	addwfc	postdec2,f,c
  2569   001CB2  EF70  F00E         	goto	l2103
  2570   001CB6                     l4983:
  2571                           
  2572                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  2573   001CB6  C02C  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2574   001CBA  C02D  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2575   001CBE  CFDE FFF6          	movff	postinc2,tblptrl
  2576   001CC2  CFDD FFF7          	movff	postdec2,tblptrh
  2577   001CC6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2578   001CC6  6AF8               	clrf	tblptru,c
  2579   001CC8                     	endif
  2580   001CC8                     	if	0	;tblptru may be non-zero
  2581   001CC8                     	endif
  2582   001CC8  0008               	tblrd		*
  2583   001CCA  50F5               	movf	tablat,w,c
  2584   001CCC  6E02               	movwf	fputc@c^0,c
  2585   001CCE  6A03               	clrf	(fputc@c+1)^0,c
  2586   001CD0  C02A  F004         	movff	vfpfcnvrt@fp,fputc@fp
  2587   001CD4  C02B  F005         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2588   001CD8  EC07  F00F         	call	_fputc	;wreg free
  2589   001CDC  EF52  F00E         	goto	l4979
  2590   001CE0                     l2103:
  2591   001CE0  0012               	return		;funcret
  2592   001CE2                     __end_of_vfpfcnvrt:
  2593                           	callstack 0
  2594                           
  2595 ;; *************** function _dtoa *****************
  2596 ;; Defined at:
  2597 ;;		line 470 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2598 ;; Parameters:    Size  Location     Type
  2599 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  2600 ;;		 -> sprintf@f(12), 
  2601 ;;  d               2   30[COMRAM] int 
  2602 ;; Auto vars:     Size  Location     Type
  2603 ;;  i               2   38[COMRAM] int 
  2604 ;;  w               2   36[COMRAM] int 
  2605 ;;  p               2   34[COMRAM] int 
  2606 ;;  s               1   40[COMRAM] unsigned char 
  2607 ;; Return value:  Size  Location     Type
  2608 ;;                  1    wreg      void 
  2609 ;; Registers used:
  2610 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2611 ;; Tracked objects:
  2612 ;;		On entry : 0/0
  2613 ;;		On exit  : 0/0
  2614 ;;		Unchanged: 0/0
  2615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2616 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2617 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2619 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2620 ;;Total ram usage:       13 bytes
  2621 ;; Hardware stack levels used: 1
  2622 ;; Hardware stack levels required when called: 6
  2623 ;; This function calls:
  2624 ;;		___awdiv
  2625 ;;		___awmod
  2626 ;;		_abs
  2627 ;;		_pad
  2628 ;; This function is called by:
  2629 ;;		_vfpfcnvrt
  2630 ;; This function uses a non-reentrant model
  2631 ;;
  2632                           
  2633                           	psect	text12
  2634   001636                     __ptext12:
  2635                           	callstack 0
  2636   001636                     _dtoa:
  2637                           	callstack 20
  2638   001636                     
  2639                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 470: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 471: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           472:  char s;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 473
      +                          :     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           476:     s = d < 0 ? 1 : 0;
  2640   001636  BE20               	btfsc	(dtoa@d+1)^0,7,c
  2641   001638  EF20  F00B         	goto	u3691
  2642   00163C  EF23  F00B         	goto	u3690
  2643   001640                     u3691:
  2644   001640  0E01               	movlw	1
  2645   001642  EF24  F00B         	goto	u3700
  2646   001646                     u3690:
  2647   001646  0E00               	movlw	0
  2648   001648                     u3700:
  2649   001648  6E29               	movwf	dtoa@s^0,c
  2650   00164A                     
  2651                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 477:     if (s) {
  2652   00164A  5029               	movf	dtoa@s^0,w,c
  2653   00164C  B4D8               	btfsc	status,2,c
  2654   00164E  EF2B  F00B         	goto	u3711
  2655   001652  EF2D  F00B         	goto	u3710
  2656   001656                     u3711:
  2657   001656  EF31  F00B         	goto	l4875
  2658   00165A                     u3710:
  2659   00165A                     
  2660                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 478:         d = 
      +                          -d;
  2661   00165A  6C1F               	negf	dtoa@d^0,c
  2662   00165C  1E20               	comf	(dtoa@d+1)^0,f,c
  2663   00165E  B0D8               	btfsc	status,0,c
  2664   001660  2A20               	incf	(dtoa@d+1)^0,f,c
  2665   001662                     l4875:
  2666                           
  2667                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 487:     p = (0 <
      +                          = prec) ? prec : 1;
  2668   001662  BE5F               	btfsc	(_prec+1)^0,7,c
  2669   001664  EF38  F00B         	goto	u3720
  2670   001668  EF36  F00B         	goto	u3721
  2671   00166C                     u3721:
  2672   00166C  EF3E  F00B         	goto	l2082
  2673   001670                     u3720:
  2674   001670  0E00               	movlw	0
  2675   001672  6E24               	movwf	(dtoa@p+1)^0,c
  2676   001674  0E01               	movlw	1
  2677   001676  6E23               	movwf	dtoa@p^0,c
  2678   001678  EF42  F00B         	goto	l2084
  2679   00167C                     l2082:
  2680   00167C  C05E  F023         	movff	_prec,dtoa@p
  2681   001680  C05F  F024         	movff	_prec+1,dtoa@p+1
  2682   001684                     l2084:
  2683                           
  2684                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 488:     w = widt
      +                          h;
  2685   001684  C0A7  F025         	movff	_width,dtoa@w
  2686   001688  C0A8  F026         	movff	_width+1,dtoa@w+1
  2687   00168C                     
  2688                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 489:     if (s
  2689   00168C  5029               	movf	dtoa@s^0,w,c
  2690   00168E  B4D8               	btfsc	status,2,c
  2691   001690  EF4C  F00B         	goto	u3731
  2692   001694  EF4E  F00B         	goto	u3730
  2693   001698                     u3731:
  2694   001698  EF65  F00B         	goto	l2085
  2695   00169C                     u3730:
  2696   00169C                     
  2697                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 493:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 494:         --w;
  2698   00169C  0625               	decf	dtoa@w^0,f,c
  2699   00169E  A0D8               	btfss	status,0,c
  2700   0016A0  0626               	decf	(dtoa@w+1)^0,f,c
  2701   0016A2                     
  2702                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 495:   s = s ? '-
      +                          ' : '+';
  2703   0016A2  5029               	movf	dtoa@s^0,w,c
  2704   0016A4  A4D8               	btfss	status,2,c
  2705   0016A6  EF57  F00B         	goto	u3741
  2706   0016AA  EF59  F00B         	goto	u3740
  2707   0016AE                     u3741:
  2708   0016AE  EF5F  F00B         	goto	l4887
  2709   0016B2                     u3740:
  2710   0016B2  0E00               	movlw	0
  2711   0016B4  6E22               	movwf	(_dtoa$3622+1)^0,c
  2712   0016B6  0E2B               	movlw	43
  2713   0016B8  6E21               	movwf	_dtoa$3622^0,c
  2714   0016BA  EF63  F00B         	goto	l4889
  2715   0016BE                     l4887:
  2716   0016BE  0E00               	movlw	0
  2717   0016C0  6E22               	movwf	(_dtoa$3622+1)^0,c
  2718   0016C2  0E2D               	movlw	45
  2719   0016C4  6E21               	movwf	_dtoa$3622^0,c
  2720   0016C6                     l4889:
  2721   0016C6  C021  F029         	movff	_dtoa$3622,dtoa@s
  2722   0016CA                     l2085:
  2723                           
  2724                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 505:     i = size
      +                          of(dbuf) - 1;
  2725   0016CA  0E00               	movlw	0
  2726   0016CC  6E28               	movwf	(dtoa@i+1)^0,c
  2727   0016CE  0E1F               	movlw	31
  2728   0016D0  6E27               	movwf	dtoa@i^0,c
  2729   0016D2                     
  2730                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 506:     dbuf[i] 
      +                          = '\0';
  2731   0016D2  0E00               	movlw	0
  2732   0016D4  0101               	movlb	1	; () banked
  2733   0016D6  6F1F               	movwf	(_dbuf+31)& (0+255),b
  2734                           
  2735                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  2736   0016D8  EF9E  F00B         	goto	l4903
  2737   0016DC                     l4893:
  2738                           
  2739                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 511:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 512:         --i;
  2740   0016DC  0627               	decf	dtoa@i^0,f,c
  2741   0016DE  A0D8               	btfss	status,0,c
  2742   0016E0  0628               	decf	(dtoa@i+1)^0,f,c
  2743   0016E2                     
  2744                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 513:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  2745   0016E2  0E00               	movlw	low _dbuf
  2746   0016E4  2427               	addwf	dtoa@i^0,w,c
  2747   0016E6  6ED9               	movwf	fsr2l,c
  2748   0016E8  0E01               	movlw	high _dbuf
  2749   0016EA  2028               	addwfc	(dtoa@i+1)^0,w,c
  2750   0016EC  6EDA               	movwf	fsr2h,c
  2751   0016EE  C01F  F002         	movff	dtoa@d,___awmod@dividend
  2752   0016F2  C020  F003         	movff	dtoa@d+1,___awmod@dividend+1
  2753   0016F6  0E00               	movlw	0
  2754   0016F8  6E05               	movwf	(___awmod@divisor+1)^0,c
  2755   0016FA  0E0A               	movlw	10
  2756   0016FC  6E04               	movwf	___awmod@divisor^0,c
  2757   0016FE  EC8B  F010         	call	___awmod	;wreg free
  2758   001702  C002  F008         	movff	?___awmod,abs@a
  2759   001706  C003  F009         	movff	?___awmod+1,abs@a+1
  2760   00170A  EC0D  F014         	call	_abs	;wreg free
  2761   00170E  5008               	movf	?_abs^0,w,c
  2762   001710  0F30               	addlw	48
  2763   001712  6EDF               	movwf	indf2,c
  2764   001714                     
  2765                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 514:         --p;
  2766   001714  0623               	decf	dtoa@p^0,f,c
  2767   001716  A0D8               	btfss	status,0,c
  2768   001718  0624               	decf	(dtoa@p+1)^0,f,c
  2769   00171A                     
  2770                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 515:         --w;
  2771   00171A  0625               	decf	dtoa@w^0,f,c
  2772   00171C  A0D8               	btfss	status,0,c
  2773   00171E  0626               	decf	(dtoa@w+1)^0,f,c
  2774   001720                     
  2775                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 516:         d = 
      +                          d / 10;
  2776   001720  C01F  F002         	movff	dtoa@d,___awdiv@dividend
  2777   001724  C020  F003         	movff	dtoa@d+1,___awdiv@dividend+1
  2778   001728  0E00               	movlw	0
  2779   00172A  6E05               	movwf	(___awdiv@divisor+1)^0,c
  2780   00172C  0E0A               	movlw	10
  2781   00172E  6E04               	movwf	___awdiv@divisor^0,c
  2782   001730  EC6C  F00F         	call	___awdiv	;wreg free
  2783   001734  C002  F01F         	movff	?___awdiv,dtoa@d
  2784   001738  C003  F020         	movff	?___awdiv+1,dtoa@d+1
  2785   00173C                     l4903:
  2786                           
  2787                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  2788   00173C  BE28               	btfsc	(dtoa@i+1)^0,7,c
  2789   00173E  EFA9  F00B         	goto	u3751
  2790   001742  5028               	movf	(dtoa@i+1)^0,w,c
  2791   001744  E108               	bnz	u3750
  2792   001746  0427               	decf	dtoa@i^0,w,c
  2793   001748  A0D8               	btfss	status,0,c
  2794   00174A  EFA9  F00B         	goto	u3751
  2795   00174E  EFAB  F00B         	goto	u3750
  2796   001752                     u3751:
  2797   001752  EFC1  F00B         	goto	l4909
  2798   001756                     u3750:
  2799   001756  501F               	movf	dtoa@d^0,w,c
  2800   001758  1020               	iorwf	(dtoa@d+1)^0,w,c
  2801   00175A  A4D8               	btfss	status,2,c
  2802   00175C  EFB2  F00B         	goto	u3761
  2803   001760  EFB4  F00B         	goto	u3760
  2804   001764                     u3761:
  2805   001764  EF6E  F00B         	goto	l4893
  2806   001768                     u3760:
  2807   001768  BE24               	btfsc	(dtoa@p+1)^0,7,c
  2808   00176A  EFC1  F00B         	goto	u3770
  2809   00176E  5024               	movf	(dtoa@p+1)^0,w,c
  2810   001770  E106               	bnz	u3771
  2811   001772  0423               	decf	dtoa@p^0,w,c
  2812   001774  B0D8               	btfsc	status,0,c
  2813   001776  EFBF  F00B         	goto	u3771
  2814   00177A  EFC1  F00B         	goto	u3770
  2815   00177E                     u3771:
  2816   00177E  EF6E  F00B         	goto	l4893
  2817   001782                     u3770:
  2818   001782                     l4909:
  2819                           
  2820                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 520:     if (s !=
      +                           0) {
  2821   001782  5029               	movf	dtoa@s^0,w,c
  2822   001784  B4D8               	btfsc	status,2,c
  2823   001786  EFC7  F00B         	goto	u3781
  2824   00178A  EFC9  F00B         	goto	u3780
  2825   00178E                     u3781:
  2826   00178E  EFD4  F00B         	goto	l4915
  2827   001792                     u3780:
  2828   001792                     
  2829                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 521:         --i;
  2830   001792  0627               	decf	dtoa@i^0,f,c
  2831   001794  A0D8               	btfss	status,0,c
  2832   001796  0628               	decf	(dtoa@i+1)^0,f,c
  2833   001798                     
  2834                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 522:         dbuf
      +                          [i] = s;
  2835   001798  0E00               	movlw	low _dbuf
  2836   00179A  2427               	addwf	dtoa@i^0,w,c
  2837   00179C  6ED9               	movwf	fsr2l,c
  2838   00179E  0E01               	movlw	high _dbuf
  2839   0017A0  2028               	addwfc	(dtoa@i+1)^0,w,c
  2840   0017A2  6EDA               	movwf	fsr2h,c
  2841   0017A4  C029  FFDF         	movff	dtoa@s,indf2
  2842   0017A8                     l4915:
  2843                           
  2844                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 526:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2845   0017A8  C01D  F012         	movff	dtoa@fp,pad@fp
  2846   0017AC  C01E  F013         	movff	dtoa@fp+1,pad@fp+1
  2847   0017B0  0E00               	movlw	low _dbuf
  2848   0017B2  2427               	addwf	dtoa@i^0,w,c
  2849   0017B4  6E14               	movwf	pad@buf^0,c
  2850   0017B6  0E01               	movlw	high _dbuf
  2851   0017B8  2028               	addwfc	(dtoa@i+1)^0,w,c
  2852   0017BA  6E15               	movwf	(pad@buf+1)^0,c
  2853   0017BC  C025  F016         	movff	dtoa@w,pad@p
  2854   0017C0  C026  F017         	movff	dtoa@w+1,pad@p+1
  2855   0017C4  EC09  F012         	call	_pad	;wreg free
  2856   0017C8  0012               	return		;funcret
  2857   0017CA                     __end_of_dtoa:
  2858                           	callstack 0
  2859                           
  2860 ;; *************** function _pad *****************
  2861 ;; Defined at:
  2862 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  2863 ;; Parameters:    Size  Location     Type
  2864 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  2865 ;;		 -> sprintf@f(12), 
  2866 ;;  buf             2   19[COMRAM] PTR unsigned char 
  2867 ;;		 -> dbuf(32), 
  2868 ;;  p               2   21[COMRAM] int 
  2869 ;; Auto vars:     Size  Location     Type
  2870 ;;  w               2   26[COMRAM] int 
  2871 ;;  i               2   24[COMRAM] int 
  2872 ;; Return value:  Size  Location     Type
  2873 ;;                  1    wreg      void 
  2874 ;; Registers used:
  2875 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2876 ;; Tracked objects:
  2877 ;;		On entry : 0/0
  2878 ;;		On exit  : 0/0
  2879 ;;		Unchanged: 0/0
  2880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2881 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2882 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2883 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2884 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2885 ;;Total ram usage:       11 bytes
  2886 ;; Hardware stack levels used: 1
  2887 ;; Hardware stack levels required when called: 5
  2888 ;; This function calls:
  2889 ;;		_fputc
  2890 ;;		_fputs
  2891 ;; This function is called by:
  2892 ;;		_dtoa
  2893 ;; This function uses a non-reentrant model
  2894 ;;
  2895                           
  2896                           	psect	text13
  2897   002412                     __ptext13:
  2898                           	callstack 0
  2899   002412                     _pad:
  2900                           	callstack 20
  2901   002412                     
  2902                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 164:     w = (p < 0) ? 0 : p;
  2903   002412  BE17               	btfsc	(pad@p+1)^0,7,c
  2904   002414  EF0E  F012         	goto	u3591
  2905   002418  EF10  F012         	goto	u3590
  2906   00241C                     u3591:
  2907   00241C  EF16  F012         	goto	l4817
  2908   002420                     u3590:
  2909   002420  C016  F01B         	movff	pad@p,pad@w
  2910   002424  C017  F01C         	movff	pad@p+1,pad@w+1
  2911   002428  EF1A  F012         	goto	l2073
  2912   00242C                     l4817:
  2913   00242C  0E00               	movlw	0
  2914   00242E  6E1C               	movwf	(pad@w+1)^0,c
  2915   002430  0E00               	movlw	0
  2916   002432  6E1B               	movwf	pad@w^0,c
  2917   002434                     l2073:
  2918                           
  2919                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  2920   002434  0E00               	movlw	0
  2921   002436  6E1A               	movwf	(pad@i+1)^0,c
  2922   002438  0E00               	movlw	0
  2923   00243A  6E19               	movwf	pad@i^0,c
  2924                           
  2925                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  2926   00243C  EF2C  F012         	goto	l4823
  2927   002440                     l4819:
  2928                           
  2929                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  2930   002440  0E00               	movlw	0
  2931   002442  6E03               	movwf	(fputc@c+1)^0,c
  2932   002444  0E20               	movlw	32
  2933   002446  6E02               	movwf	fputc@c^0,c
  2934   002448  C012  F004         	movff	pad@fp,fputc@fp
  2935   00244C  C013  F005         	movff	pad@fp+1,fputc@fp+1
  2936   002450  EC07  F00F         	call	_fputc	;wreg free
  2937   002454                     
  2938                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  2939   002454  4A19               	infsnz	pad@i^0,f,c
  2940   002456  2A1A               	incf	(pad@i+1)^0,f,c
  2941   002458                     l4823:
  2942                           
  2943                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  2944   002458  501B               	movf	pad@w^0,w,c
  2945   00245A  5C19               	subwf	pad@i^0,w,c
  2946   00245C  501A               	movf	(pad@i+1)^0,w,c
  2947   00245E  0A80               	xorlw	128
  2948   002460  6E18               	movwf	??_pad^0,c
  2949   002462  501C               	movf	(pad@w+1)^0,w,c
  2950   002464  0A80               	xorlw	128
  2951   002466  5818               	subwfb	??_pad^0,w,c
  2952   002468  A0D8               	btfss	status,0,c
  2953   00246A  EF39  F012         	goto	u3601
  2954   00246E  EF3B  F012         	goto	u3600
  2955   002472                     u3601:
  2956   002472  EF20  F012         	goto	l4819
  2957   002476                     u3600:
  2958   002476                     
  2959                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  2960   002476  C014  F00B         	movff	pad@buf,fputs@s
  2961   00247A  C015  F00C         	movff	pad@buf+1,fputs@s+1
  2962   00247E  C012  F00D         	movff	pad@fp,fputs@fp
  2963   002482  C013  F00E         	movff	pad@fp+1,fputs@fp+1
  2964   002486  ECEB  F013         	call	_fputs	;wreg free
  2965   00248A  0012               	return		;funcret
  2966   00248C                     __end_of_pad:
  2967                           	callstack 0
  2968                           
  2969 ;; *************** function _fputs *****************
  2970 ;; Defined at:
  2971 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  2972 ;; Parameters:    Size  Location     Type
  2973 ;;  s               2   10[COMRAM] PTR const unsigned char 
  2974 ;;		 -> dbuf(32), 
  2975 ;;  fp              2   12[COMRAM] PTR struct _IO_FILE
  2976 ;;		 -> sprintf@f(12), 
  2977 ;; Auto vars:     Size  Location     Type
  2978 ;;  i               2   15[COMRAM] int 
  2979 ;;  c               1   14[COMRAM] unsigned char 
  2980 ;; Return value:  Size  Location     Type
  2981 ;;                  2   10[COMRAM] int 
  2982 ;; Registers used:
  2983 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2984 ;; Tracked objects:
  2985 ;;		On entry : 0/0
  2986 ;;		On exit  : 0/0
  2987 ;;		Unchanged: 0/0
  2988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2989 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2990 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2992 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2993 ;;Total ram usage:        7 bytes
  2994 ;; Hardware stack levels used: 1
  2995 ;; Hardware stack levels required when called: 4
  2996 ;; This function calls:
  2997 ;;		_fputc
  2998 ;; This function is called by:
  2999 ;;		_pad
  3000 ;; This function uses a non-reentrant model
  3001 ;;
  3002                           
  3003                           	psect	text14
  3004   0027D6                     __ptext14:
  3005                           	callstack 0
  3006   0027D6                     _fputs:
  3007                           	callstack 20
  3008   0027D6  0E00               	movlw	0
  3009   0027D8  6E11               	movwf	(fputs@i+1)^0,c
  3010   0027DA  0E00               	movlw	0
  3011   0027DC  6E10               	movwf	fputs@i^0,c
  3012   0027DE  EFFC  F013         	goto	l4707
  3013   0027E2                     l4703:
  3014   0027E2  C00F  F002         	movff	fputs@c,fputc@c
  3015   0027E6  6A03               	clrf	(fputc@c+1)^0,c
  3016   0027E8  C00D  F004         	movff	fputs@fp,fputc@fp
  3017   0027EC  C00E  F005         	movff	fputs@fp+1,fputc@fp+1
  3018   0027F0  EC07  F00F         	call	_fputc	;wreg free
  3019   0027F4  4A10               	infsnz	fputs@i^0,f,c
  3020   0027F6  2A11               	incf	(fputs@i+1)^0,f,c
  3021   0027F8                     l4707:
  3022   0027F8  5010               	movf	fputs@i^0,w,c
  3023   0027FA  240B               	addwf	fputs@s^0,w,c
  3024   0027FC  6ED9               	movwf	fsr2l,c
  3025   0027FE  5011               	movf	(fputs@i+1)^0,w,c
  3026   002800  200C               	addwfc	(fputs@s+1)^0,w,c
  3027   002802  6EDA               	movwf	fsr2h,c
  3028   002804  50DF               	movf	indf2,w,c
  3029   002806  6E0F               	movwf	fputs@c^0,c
  3030   002808  500F               	movf	fputs@c^0,w,c
  3031   00280A  A4D8               	btfss	status,2,c
  3032   00280C  EF0A  F014         	goto	u3421
  3033   002810  EF0C  F014         	goto	u3420
  3034   002814                     u3421:
  3035   002814  EFF1  F013         	goto	l4703
  3036   002818                     u3420:
  3037   002818  0012               	return		;funcret
  3038   00281A                     __end_of_fputs:
  3039                           	callstack 0
  3040                           
  3041 ;; *************** function _fputc *****************
  3042 ;; Defined at:
  3043 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  3044 ;; Parameters:    Size  Location     Type
  3045 ;;  c               2    1[COMRAM] int 
  3046 ;;  fp              2    3[COMRAM] PTR struct _IO_FILE
  3047 ;;		 -> sprintf@f(12), 
  3048 ;; Auto vars:     Size  Location     Type
  3049 ;;		None
  3050 ;; Return value:  Size  Location     Type
  3051 ;;                  2    1[COMRAM] int 
  3052 ;; Registers used:
  3053 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3054 ;; Tracked objects:
  3055 ;;		On entry : 0/0
  3056 ;;		On exit  : 0/0
  3057 ;;		Unchanged: 0/0
  3058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3059 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3061 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3062 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3063 ;;Total ram usage:        9 bytes
  3064 ;; Hardware stack levels used: 1
  3065 ;; Hardware stack levels required when called: 3
  3066 ;; This function calls:
  3067 ;;		_putch
  3068 ;; This function is called by:
  3069 ;;		_pad
  3070 ;;		_vfpfcnvrt
  3071 ;;		_fputs
  3072 ;; This function uses a non-reentrant model
  3073 ;;
  3074                           
  3075                           	psect	text15
  3076   001E0E                     __ptext15:
  3077                           	callstack 0
  3078   001E0E                     _fputc:
  3079                           	callstack 23
  3080   001E0E  5004               	movf	fputc@fp^0,w,c
  3081   001E10  1005               	iorwf	(fputc@fp+1)^0,w,c
  3082   001E12  B4D8               	btfsc	status,2,c
  3083   001E14  EF0E  F00F         	goto	u3381
  3084   001E18  EF10  F00F         	goto	u3380
  3085   001E1C                     u3381:
  3086   001E1C  EF19  F00F         	goto	l4691
  3087   001E20                     u3380:
  3088   001E20  5004               	movf	fputc@fp^0,w,c
  3089   001E22  1005               	iorwf	(fputc@fp+1)^0,w,c
  3090   001E24  A4D8               	btfss	status,2,c
  3091   001E26  EF17  F00F         	goto	u3391
  3092   001E2A  EF19  F00F         	goto	u3390
  3093   001E2E                     u3391:
  3094   001E2E  EF1E  F00F         	goto	l4693
  3095   001E32                     u3390:
  3096   001E32                     l4691:
  3097   001E32  5002               	movf	fputc@c^0,w,c
  3098   001E34  ECF4  F014         	call	_putch
  3099   001E38  EF6B  F00F         	goto	l2128
  3100   001E3C                     l4693:
  3101   001E3C  EE20 F00A          	lfsr	2,10
  3102   001E40  5004               	movf	fputc@fp^0,w,c
  3103   001E42  26D9               	addwf	fsr2l,f,c
  3104   001E44  5005               	movf	(fputc@fp+1)^0,w,c
  3105   001E46  22DA               	addwfc	fsr2h,f,c
  3106   001E48  50DE               	movf	postinc2,w,c
  3107   001E4A  10DE               	iorwf	postinc2,w,c
  3108   001E4C  B4D8               	btfsc	status,2,c
  3109   001E4E  EF2B  F00F         	goto	u3401
  3110   001E52  EF2D  F00F         	goto	u3400
  3111   001E56                     u3401:
  3112   001E56  EF48  F00F         	goto	l4697
  3113   001E5A                     u3400:
  3114   001E5A  EE20 F00A          	lfsr	2,10
  3115   001E5E  5004               	movf	fputc@fp^0,w,c
  3116   001E60  26D9               	addwf	fsr2l,f,c
  3117   001E62  5005               	movf	(fputc@fp+1)^0,w,c
  3118   001E64  22DA               	addwfc	fsr2h,f,c
  3119   001E66  EE10 F003          	lfsr	1,3
  3120   001E6A  5004               	movf	fputc@fp^0,w,c
  3121   001E6C  26E1               	addwf	fsr1l,f,c
  3122   001E6E  5005               	movf	(fputc@fp+1)^0,w,c
  3123   001E70  22E2               	addwfc	fsr1h,f,c
  3124   001E72  50DE               	movf	postinc2,w,c
  3125   001E74  5CE6               	subwf	postinc1,w,c
  3126   001E76  50E6               	movf	postinc1,w,c
  3127   001E78  0A80               	xorlw	128
  3128   001E7A  6E0A               	movwf	(??_fputc+4)^0,c
  3129   001E7C  50DE               	movf	postinc2,w,c
  3130   001E7E  0A80               	xorlw	128
  3131   001E80  580A               	subwfb	(??_fputc+4)^0,w,c
  3132   001E82  B0D8               	btfsc	status,0,c
  3133   001E84  EF46  F00F         	goto	u3411
  3134   001E88  EF48  F00F         	goto	u3410
  3135   001E8C                     u3411:
  3136   001E8C  EF6B  F00F         	goto	l2128
  3137   001E90                     u3410:
  3138   001E90                     l4697:
  3139   001E90  EE20 F003          	lfsr	2,3
  3140   001E94  5004               	movf	fputc@fp^0,w,c
  3141   001E96  26D9               	addwf	fsr2l,f,c
  3142   001E98  5005               	movf	(fputc@fp+1)^0,w,c
  3143   001E9A  22DA               	addwfc	fsr2h,f,c
  3144   001E9C  CFDE F006          	movff	postinc2,??_fputc
  3145   001EA0  CFDD F007          	movff	postdec2,??_fputc+1
  3146   001EA4  C004  FFD9         	movff	fputc@fp,fsr2l
  3147   001EA8  C005  FFDA         	movff	fputc@fp+1,fsr2h
  3148   001EAC  CFDE F008          	movff	postinc2,??_fputc+2
  3149   001EB0  CFDD F009          	movff	postdec2,??_fputc+3
  3150   001EB4  5006               	movf	??_fputc^0,w,c
  3151   001EB6  2408               	addwf	(??_fputc+2)^0,w,c
  3152   001EB8  6ED9               	movwf	fsr2l,c
  3153   001EBA  5007               	movf	(??_fputc+1)^0,w,c
  3154   001EBC  2009               	addwfc	(??_fputc+3)^0,w,c
  3155   001EBE  6EDA               	movwf	fsr2h,c
  3156   001EC0  C002  FFDF         	movff	fputc@c,indf2
  3157   001EC4  EE20 F003          	lfsr	2,3
  3158   001EC8  5004               	movf	fputc@fp^0,w,c
  3159   001ECA  26D9               	addwf	fsr2l,f,c
  3160   001ECC  5005               	movf	(fputc@fp+1)^0,w,c
  3161   001ECE  22DA               	addwfc	fsr2h,f,c
  3162   001ED0  2ADE               	incf	postinc2,f,c
  3163   001ED2  0E00               	movlw	0
  3164   001ED4  22DD               	addwfc	postdec2,f,c
  3165   001ED6                     l2128:
  3166   001ED6  0012               	return		;funcret
  3167   001ED8                     __end_of_fputc:
  3168                           	callstack 0
  3169                           
  3170 ;; *************** function _putch *****************
  3171 ;; Defined at:
  3172 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\putch.c"
  3173 ;; Parameters:    Size  Location     Type
  3174 ;;  c               1    wreg     unsigned char 
  3175 ;; Auto vars:     Size  Location     Type
  3176 ;;  c               1    0[COMRAM] unsigned char 
  3177 ;; Return value:  Size  Location     Type
  3178 ;;                  1    wreg      void 
  3179 ;; Registers used:
  3180 ;;		wreg
  3181 ;; Tracked objects:
  3182 ;;		On entry : 0/0
  3183 ;;		On exit  : 0/0
  3184 ;;		Unchanged: 0/0
  3185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3190 ;;Total ram usage:        0 bytes
  3191 ;; Hardware stack levels used: 1
  3192 ;; Hardware stack levels required when called: 2
  3193 ;; This function calls:
  3194 ;;		Nothing
  3195 ;; This function is called by:
  3196 ;;		_fputc
  3197 ;; This function uses a non-reentrant model
  3198 ;;
  3199                           
  3200                           	psect	text16
  3201   0029E8                     __ptext16:
  3202                           	callstack 0
  3203   0029E8                     _putch:
  3204                           	callstack 23
  3205   0029E8  0012               	return		;funcret
  3206   0029EA                     __end_of_putch:
  3207                           	callstack 0
  3208                           
  3209 ;; *************** function _abs *****************
  3210 ;; Defined at:
  3211 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\abs.c"
  3212 ;; Parameters:    Size  Location     Type
  3213 ;;  a               2    7[COMRAM] int 
  3214 ;; Auto vars:     Size  Location     Type
  3215 ;;		None
  3216 ;; Return value:  Size  Location     Type
  3217 ;;                  2    7[COMRAM] int 
  3218 ;; Registers used:
  3219 ;;		wreg, status,2, status,0
  3220 ;; Tracked objects:
  3221 ;;		On entry : 0/0
  3222 ;;		On exit  : 0/0
  3223 ;;		Unchanged: 0/0
  3224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3225 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3227 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3228 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3229 ;;Total ram usage:        4 bytes
  3230 ;; Hardware stack levels used: 1
  3231 ;; Hardware stack levels required when called: 2
  3232 ;; This function calls:
  3233 ;;		Nothing
  3234 ;; This function is called by:
  3235 ;;		_dtoa
  3236 ;; This function uses a non-reentrant model
  3237 ;;
  3238                           
  3239                           	psect	text17
  3240   00281A                     __ptext17:
  3241                           	callstack 0
  3242   00281A                     _abs:
  3243                           	callstack 23
  3244   00281A  BE09               	btfsc	(abs@a+1)^0,7,c
  3245   00281C  EF1A  F014         	goto	u3610
  3246   002820  5009               	movf	(abs@a+1)^0,w,c
  3247   002822  E106               	bnz	u3611
  3248   002824  0408               	decf	abs@a^0,w,c
  3249   002826  B0D8               	btfsc	status,0,c
  3250   002828  EF18  F014         	goto	u3611
  3251   00282C  EF1A  F014         	goto	u3610
  3252   002830                     u3611:
  3253   002830  EF28  F014         	goto	l2113
  3254   002834                     u3610:
  3255   002834  C008  F00A         	movff	abs@a,??_abs
  3256   002838  C009  F00B         	movff	abs@a+1,??_abs+1
  3257   00283C  1E0A               	comf	??_abs^0,f,c
  3258   00283E  1E0B               	comf	(??_abs+1)^0,f,c
  3259   002840  4A0A               	infsnz	??_abs^0,f,c
  3260   002842  2A0B               	incf	(??_abs+1)^0,f,c
  3261   002844  C00A  F008         	movff	??_abs,?_abs
  3262   002848  C00B  F009         	movff	??_abs+1,?_abs+1
  3263   00284C  EF2C  F014         	goto	l2116
  3264   002850                     l2113:
  3265   002850  C008  F008         	movff	abs@a,?_abs
  3266   002854  C009  F009         	movff	abs@a+1,?_abs+1
  3267   002858                     l2116:
  3268   002858  0012               	return		;funcret
  3269   00285A                     __end_of_abs:
  3270                           	callstack 0
  3271                           
  3272 ;; *************** function ___awmod *****************
  3273 ;; Defined at:
  3274 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  3275 ;; Parameters:    Size  Location     Type
  3276 ;;  dividend        2    1[COMRAM] int 
  3277 ;;  divisor         2    3[COMRAM] int 
  3278 ;; Auto vars:     Size  Location     Type
  3279 ;;  sign            1    6[COMRAM] unsigned char 
  3280 ;;  counter         1    5[COMRAM] unsigned char 
  3281 ;; Return value:  Size  Location     Type
  3282 ;;                  2    1[COMRAM] int 
  3283 ;; Registers used:
  3284 ;;		wreg, status,2, status,0
  3285 ;; Tracked objects:
  3286 ;;		On entry : 0/0
  3287 ;;		On exit  : 0/0
  3288 ;;		Unchanged: 0/0
  3289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3290 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3291 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3293 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3294 ;;Total ram usage:        6 bytes
  3295 ;; Hardware stack levels used: 1
  3296 ;; Hardware stack levels required when called: 2
  3297 ;; This function calls:
  3298 ;;		Nothing
  3299 ;; This function is called by:
  3300 ;;		_dtoa
  3301 ;; This function uses a non-reentrant model
  3302 ;;
  3303                           
  3304                           	psect	text18
  3305   002116                     __ptext18:
  3306                           	callstack 0
  3307   002116                     ___awmod:
  3308                           	callstack 23
  3309   002116  0E00               	movlw	0
  3310   002118  6E07               	movwf	___awmod@sign^0,c
  3311   00211A  BE03               	btfsc	(___awmod@dividend+1)^0,7,c
  3312   00211C  EF94  F010         	goto	u3530
  3313   002120  EF92  F010         	goto	u3531
  3314   002124                     u3531:
  3315   002124  EF9A  F010         	goto	l4785
  3316   002128                     u3530:
  3317   002128  6C02               	negf	___awmod@dividend^0,c
  3318   00212A  1E03               	comf	(___awmod@dividend+1)^0,f,c
  3319   00212C  B0D8               	btfsc	status,0,c
  3320   00212E  2A03               	incf	(___awmod@dividend+1)^0,f,c
  3321   002130  0E01               	movlw	1
  3322   002132  6E07               	movwf	___awmod@sign^0,c
  3323   002134                     l4785:
  3324   002134  BE05               	btfsc	(___awmod@divisor+1)^0,7,c
  3325   002136  EFA1  F010         	goto	u3540
  3326   00213A  EF9F  F010         	goto	u3541
  3327   00213E                     u3541:
  3328   00213E  EFA5  F010         	goto	l4789
  3329   002142                     u3540:
  3330   002142  6C04               	negf	___awmod@divisor^0,c
  3331   002144  1E05               	comf	(___awmod@divisor+1)^0,f,c
  3332   002146  B0D8               	btfsc	status,0,c
  3333   002148  2A05               	incf	(___awmod@divisor+1)^0,f,c
  3334   00214A                     l4789:
  3335   00214A  5004               	movf	___awmod@divisor^0,w,c
  3336   00214C  1005               	iorwf	(___awmod@divisor+1)^0,w,c
  3337   00214E  B4D8               	btfsc	status,2,c
  3338   002150  EFAC  F010         	goto	u3551
  3339   002154  EFAE  F010         	goto	u3550
  3340   002158                     u3551:
  3341   002158  EFD2  F010         	goto	l4805
  3342   00215C                     u3550:
  3343   00215C  0E01               	movlw	1
  3344   00215E  6E06               	movwf	___awmod@counter^0,c
  3345   002160  EFB6  F010         	goto	l4795
  3346   002164                     l4793:
  3347   002164  90D8               	bcf	status,0,c
  3348   002166  3604               	rlcf	___awmod@divisor^0,f,c
  3349   002168  3605               	rlcf	(___awmod@divisor+1)^0,f,c
  3350   00216A  2A06               	incf	___awmod@counter^0,f,c
  3351   00216C                     l4795:
  3352   00216C  AE05               	btfss	(___awmod@divisor+1)^0,7,c
  3353   00216E  EFBB  F010         	goto	u3561
  3354   002172  EFBD  F010         	goto	u3560
  3355   002176                     u3561:
  3356   002176  EFB2  F010         	goto	l4793
  3357   00217A                     u3560:
  3358   00217A                     l4797:
  3359   00217A  5004               	movf	___awmod@divisor^0,w,c
  3360   00217C  5C02               	subwf	___awmod@dividend^0,w,c
  3361   00217E  5005               	movf	(___awmod@divisor+1)^0,w,c
  3362   002180  5803               	subwfb	(___awmod@dividend+1)^0,w,c
  3363   002182  A0D8               	btfss	status,0,c
  3364   002184  EFC6  F010         	goto	u3571
  3365   002188  EFC8  F010         	goto	u3570
  3366   00218C                     u3571:
  3367   00218C  EFCC  F010         	goto	l4801
  3368   002190                     u3570:
  3369   002190  5004               	movf	___awmod@divisor^0,w,c
  3370   002192  5E02               	subwf	___awmod@dividend^0,f,c
  3371   002194  5005               	movf	(___awmod@divisor+1)^0,w,c
  3372   002196  5A03               	subwfb	(___awmod@dividend+1)^0,f,c
  3373   002198                     l4801:
  3374   002198  90D8               	bcf	status,0,c
  3375   00219A  3205               	rrcf	(___awmod@divisor+1)^0,f,c
  3376   00219C  3204               	rrcf	___awmod@divisor^0,f,c
  3377   00219E  2E06               	decfsz	___awmod@counter^0,f,c
  3378   0021A0  EFBD  F010         	goto	l4797
  3379   0021A4                     l4805:
  3380   0021A4  5007               	movf	___awmod@sign^0,w,c
  3381   0021A6  B4D8               	btfsc	status,2,c
  3382   0021A8  EFD8  F010         	goto	u3581
  3383   0021AC  EFDA  F010         	goto	u3580
  3384   0021B0                     u3581:
  3385   0021B0  EFDE  F010         	goto	l4809
  3386   0021B4                     u3580:
  3387   0021B4  6C02               	negf	___awmod@dividend^0,c
  3388   0021B6  1E03               	comf	(___awmod@dividend+1)^0,f,c
  3389   0021B8  B0D8               	btfsc	status,0,c
  3390   0021BA  2A03               	incf	(___awmod@dividend+1)^0,f,c
  3391   0021BC                     l4809:
  3392   0021BC  C002  F002         	movff	___awmod@dividend,?___awmod
  3393   0021C0  C003  F003         	movff	___awmod@dividend+1,?___awmod+1
  3394   0021C4  0012               	return		;funcret
  3395   0021C6                     __end_of___awmod:
  3396                           	callstack 0
  3397                           
  3398 ;; *************** function ___awdiv *****************
  3399 ;; Defined at:
  3400 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  3401 ;; Parameters:    Size  Location     Type
  3402 ;;  dividend        2    1[COMRAM] int 
  3403 ;;  divisor         2    3[COMRAM] int 
  3404 ;; Auto vars:     Size  Location     Type
  3405 ;;  quotient        2    7[COMRAM] int 
  3406 ;;  sign            1    6[COMRAM] unsigned char 
  3407 ;;  counter         1    5[COMRAM] unsigned char 
  3408 ;; Return value:  Size  Location     Type
  3409 ;;                  2    1[COMRAM] int 
  3410 ;; Registers used:
  3411 ;;		wreg, status,2, status,0
  3412 ;; Tracked objects:
  3413 ;;		On entry : 0/0
  3414 ;;		On exit  : 0/0
  3415 ;;		Unchanged: 0/0
  3416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3417 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3418 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3420 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3421 ;;Total ram usage:        8 bytes
  3422 ;; Hardware stack levels used: 1
  3423 ;; Hardware stack levels required when called: 2
  3424 ;; This function calls:
  3425 ;;		Nothing
  3426 ;; This function is called by:
  3427 ;;		_dtoa
  3428 ;; This function uses a non-reentrant model
  3429 ;;
  3430                           
  3431                           	psect	text19
  3432   001ED8                     __ptext19:
  3433                           	callstack 0
  3434   001ED8                     ___awdiv:
  3435                           	callstack 23
  3436   001ED8  0E00               	movlw	0
  3437   001EDA  6E07               	movwf	___awdiv@sign^0,c
  3438   001EDC  BE05               	btfsc	(___awdiv@divisor+1)^0,7,c
  3439   001EDE  EF75  F00F         	goto	u3470
  3440   001EE2  EF73  F00F         	goto	u3471
  3441   001EE6                     u3471:
  3442   001EE6  EF7B  F00F         	goto	l4741
  3443   001EEA                     u3470:
  3444   001EEA  6C04               	negf	___awdiv@divisor^0,c
  3445   001EEC  1E05               	comf	(___awdiv@divisor+1)^0,f,c
  3446   001EEE  B0D8               	btfsc	status,0,c
  3447   001EF0  2A05               	incf	(___awdiv@divisor+1)^0,f,c
  3448   001EF2  0E01               	movlw	1
  3449   001EF4  6E07               	movwf	___awdiv@sign^0,c
  3450   001EF6                     l4741:
  3451   001EF6  BE03               	btfsc	(___awdiv@dividend+1)^0,7,c
  3452   001EF8  EF82  F00F         	goto	u3480
  3453   001EFC  EF80  F00F         	goto	u3481
  3454   001F00                     u3481:
  3455   001F00  EF88  F00F         	goto	l4747
  3456   001F04                     u3480:
  3457   001F04  6C02               	negf	___awdiv@dividend^0,c
  3458   001F06  1E03               	comf	(___awdiv@dividend+1)^0,f,c
  3459   001F08  B0D8               	btfsc	status,0,c
  3460   001F0A  2A03               	incf	(___awdiv@dividend+1)^0,f,c
  3461   001F0C  0E01               	movlw	1
  3462   001F0E  1A07               	xorwf	___awdiv@sign^0,f,c
  3463   001F10                     l4747:
  3464   001F10  0E00               	movlw	0
  3465   001F12  6E09               	movwf	(___awdiv@quotient+1)^0,c
  3466   001F14  0E00               	movlw	0
  3467   001F16  6E08               	movwf	___awdiv@quotient^0,c
  3468   001F18  5004               	movf	___awdiv@divisor^0,w,c
  3469   001F1A  1005               	iorwf	(___awdiv@divisor+1)^0,w,c
  3470   001F1C  B4D8               	btfsc	status,2,c
  3471   001F1E  EF93  F00F         	goto	u3491
  3472   001F22  EF95  F00F         	goto	u3490
  3473   001F26                     u3491:
  3474   001F26  EFBD  F00F         	goto	l4769
  3475   001F2A                     u3490:
  3476   001F2A  0E01               	movlw	1
  3477   001F2C  6E06               	movwf	___awdiv@counter^0,c
  3478   001F2E  EF9D  F00F         	goto	l4755
  3479   001F32                     l4753:
  3480   001F32  90D8               	bcf	status,0,c
  3481   001F34  3604               	rlcf	___awdiv@divisor^0,f,c
  3482   001F36  3605               	rlcf	(___awdiv@divisor+1)^0,f,c
  3483   001F38  2A06               	incf	___awdiv@counter^0,f,c
  3484   001F3A                     l4755:
  3485   001F3A  AE05               	btfss	(___awdiv@divisor+1)^0,7,c
  3486   001F3C  EFA2  F00F         	goto	u3501
  3487   001F40  EFA4  F00F         	goto	u3500
  3488   001F44                     u3501:
  3489   001F44  EF99  F00F         	goto	l4753
  3490   001F48                     u3500:
  3491   001F48                     l4757:
  3492   001F48  90D8               	bcf	status,0,c
  3493   001F4A  3608               	rlcf	___awdiv@quotient^0,f,c
  3494   001F4C  3609               	rlcf	(___awdiv@quotient+1)^0,f,c
  3495   001F4E  5004               	movf	___awdiv@divisor^0,w,c
  3496   001F50  5C02               	subwf	___awdiv@dividend^0,w,c
  3497   001F52  5005               	movf	(___awdiv@divisor+1)^0,w,c
  3498   001F54  5803               	subwfb	(___awdiv@dividend+1)^0,w,c
  3499   001F56  A0D8               	btfss	status,0,c
  3500   001F58  EFB0  F00F         	goto	u3511
  3501   001F5C  EFB2  F00F         	goto	u3510
  3502   001F60                     u3511:
  3503   001F60  EFB7  F00F         	goto	l4765
  3504   001F64                     u3510:
  3505   001F64  5004               	movf	___awdiv@divisor^0,w,c
  3506   001F66  5E02               	subwf	___awdiv@dividend^0,f,c
  3507   001F68  5005               	movf	(___awdiv@divisor+1)^0,w,c
  3508   001F6A  5A03               	subwfb	(___awdiv@dividend+1)^0,f,c
  3509   001F6C  8008               	bsf	___awdiv@quotient^0,0,c
  3510   001F6E                     l4765:
  3511   001F6E  90D8               	bcf	status,0,c
  3512   001F70  3205               	rrcf	(___awdiv@divisor+1)^0,f,c
  3513   001F72  3204               	rrcf	___awdiv@divisor^0,f,c
  3514   001F74  2E06               	decfsz	___awdiv@counter^0,f,c
  3515   001F76  EFA4  F00F         	goto	l4757
  3516   001F7A                     l4769:
  3517   001F7A  5007               	movf	___awdiv@sign^0,w,c
  3518   001F7C  B4D8               	btfsc	status,2,c
  3519   001F7E  EFC3  F00F         	goto	u3521
  3520   001F82  EFC5  F00F         	goto	u3520
  3521   001F86                     u3521:
  3522   001F86  EFC9  F00F         	goto	l4773
  3523   001F8A                     u3520:
  3524   001F8A  6C08               	negf	___awdiv@quotient^0,c
  3525   001F8C  1E09               	comf	(___awdiv@quotient+1)^0,f,c
  3526   001F8E  B0D8               	btfsc	status,0,c
  3527   001F90  2A09               	incf	(___awdiv@quotient+1)^0,f,c
  3528   001F92                     l4773:
  3529   001F92  C008  F002         	movff	___awdiv@quotient,?___awdiv
  3530   001F96  C009  F003         	movff	___awdiv@quotient+1,?___awdiv+1
  3531   001F9A  0012               	return		;funcret
  3532   001F9C                     __end_of___awdiv:
  3533                           	callstack 0
  3534                           
  3535 ;; *************** function _memset *****************
  3536 ;; Defined at:
  3537 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\memset.c"
  3538 ;; Parameters:    Size  Location     Type
  3539 ;;  dest            2    1[COMRAM] PTR void 
  3540 ;;		 -> numper_places_str(7), 
  3541 ;;  c               2    3[COMRAM] int 
  3542 ;;  n               2    5[COMRAM] unsigned int 
  3543 ;; Auto vars:     Size  Location     Type
  3544 ;;  s               2   11[COMRAM] PTR unsigned char 
  3545 ;;		 -> numper_places_str(7), 
  3546 ;;  k               2    9[COMRAM] unsigned int 
  3547 ;; Return value:  Size  Location     Type
  3548 ;;                  2    1[COMRAM] PTR void 
  3549 ;; Registers used:
  3550 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3551 ;; Tracked objects:
  3552 ;;		On entry : 0/0
  3553 ;;		On exit  : 0/0
  3554 ;;		Unchanged: 0/0
  3555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3556 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3557 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3558 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3559 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3560 ;;Total ram usage:       12 bytes
  3561 ;; Hardware stack levels used: 1
  3562 ;; Hardware stack levels required when called: 2
  3563 ;; This function calls:
  3564 ;;		Nothing
  3565 ;; This function is called by:
  3566 ;;		_convert_byte_to_string
  3567 ;;		_convert_short_to_string
  3568 ;;		_convert_int_to_string
  3569 ;; This function uses a non-reentrant model
  3570 ;;
  3571                           
  3572                           	psect	text20
  3573   0017CA                     __ptext20:
  3574                           	callstack 0
  3575   0017CA                     _memset:
  3576                           	callstack 27
  3577   0017CA  C002  F00C         	movff	memset@dest,memset@s
  3578   0017CE  C003  F00D         	movff	memset@dest+1,memset@s+1
  3579   0017D2  5006               	movf	memset@n^0,w,c
  3580   0017D4  1007               	iorwf	(memset@n+1)^0,w,c
  3581   0017D6  A4D8               	btfss	status,2,c
  3582   0017D8  EFF0  F00B         	goto	u4061
  3583   0017DC  EFF2  F00B         	goto	u4060
  3584   0017E0                     u4061:
  3585   0017E0  EFF4  F00B         	goto	l5191
  3586   0017E4                     u4060:
  3587   0017E4  EF9F  F00C         	goto	l2038
  3588   0017E8                     l5191:
  3589   0017E8  C00C  FFD9         	movff	memset@s,fsr2l
  3590   0017EC  C00D  FFDA         	movff	memset@s+1,fsr2h
  3591   0017F0  C004  FFDF         	movff	memset@c,indf2
  3592   0017F4  5006               	movf	memset@n^0,w,c
  3593   0017F6  240C               	addwf	memset@s^0,w,c
  3594   0017F8  6E08               	movwf	??_memset^0,c
  3595   0017FA  5007               	movf	(memset@n+1)^0,w,c
  3596   0017FC  200D               	addwfc	(memset@s+1)^0,w,c
  3597   0017FE  6E09               	movwf	(??_memset+1)^0,c
  3598   001800  0EFF               	movlw	255
  3599   001802  2408               	addwf	??_memset^0,w,c
  3600   001804  6ED9               	movwf	fsr2l,c
  3601   001806  0EFF               	movlw	255
  3602   001808  2009               	addwfc	(??_memset+1)^0,w,c
  3603   00180A  6EDA               	movwf	fsr2h,c
  3604   00180C  C004  FFDF         	movff	memset@c,indf2
  3605   001810  5007               	movf	(memset@n+1)^0,w,c
  3606   001812  E107               	bnz	u4071
  3607   001814  0E03               	movlw	3
  3608   001816  5C06               	subwf	memset@n^0,w,c
  3609   001818  B0D8               	btfsc	status,0,c
  3610   00181A  EF11  F00C         	goto	u4071
  3611   00181E  EF13  F00C         	goto	u4070
  3612   001822                     u4071:
  3613   001822  EF15  F00C         	goto	l5197
  3614   001826                     u4070:
  3615   001826  EF9F  F00C         	goto	l2038
  3616   00182A                     l5197:
  3617   00182A  EE20 F001          	lfsr	2,1
  3618   00182E  500C               	movf	memset@s^0,w,c
  3619   001830  26D9               	addwf	fsr2l,f,c
  3620   001832  500D               	movf	(memset@s+1)^0,w,c
  3621   001834  22DA               	addwfc	fsr2h,f,c
  3622   001836  C004  FFDF         	movff	memset@c,indf2
  3623   00183A  EE20 F002          	lfsr	2,2
  3624   00183E  500C               	movf	memset@s^0,w,c
  3625   001840  26D9               	addwf	fsr2l,f,c
  3626   001842  500D               	movf	(memset@s+1)^0,w,c
  3627   001844  22DA               	addwfc	fsr2h,f,c
  3628   001846  C004  FFDF         	movff	memset@c,indf2
  3629   00184A  5006               	movf	memset@n^0,w,c
  3630   00184C  240C               	addwf	memset@s^0,w,c
  3631   00184E  6E08               	movwf	??_memset^0,c
  3632   001850  5007               	movf	(memset@n+1)^0,w,c
  3633   001852  200D               	addwfc	(memset@s+1)^0,w,c
  3634   001854  6E09               	movwf	(??_memset+1)^0,c
  3635   001856  0EFE               	movlw	254
  3636   001858  2408               	addwf	??_memset^0,w,c
  3637   00185A  6ED9               	movwf	fsr2l,c
  3638   00185C  0EFF               	movlw	255
  3639   00185E  2009               	addwfc	(??_memset+1)^0,w,c
  3640   001860  6EDA               	movwf	fsr2h,c
  3641   001862  C004  FFDF         	movff	memset@c,indf2
  3642   001866  5006               	movf	memset@n^0,w,c
  3643   001868  240C               	addwf	memset@s^0,w,c
  3644   00186A  6E08               	movwf	??_memset^0,c
  3645   00186C  5007               	movf	(memset@n+1)^0,w,c
  3646   00186E  200D               	addwfc	(memset@s+1)^0,w,c
  3647   001870  6E09               	movwf	(??_memset+1)^0,c
  3648   001872  0EFD               	movlw	253
  3649   001874  2408               	addwf	??_memset^0,w,c
  3650   001876  6ED9               	movwf	fsr2l,c
  3651   001878  0EFF               	movlw	255
  3652   00187A  2009               	addwfc	(??_memset+1)^0,w,c
  3653   00187C  6EDA               	movwf	fsr2h,c
  3654   00187E  C004  FFDF         	movff	memset@c,indf2
  3655   001882  5007               	movf	(memset@n+1)^0,w,c
  3656   001884  E107               	bnz	u4081
  3657   001886  0E07               	movlw	7
  3658   001888  5C06               	subwf	memset@n^0,w,c
  3659   00188A  B0D8               	btfsc	status,0,c
  3660   00188C  EF4A  F00C         	goto	u4081
  3661   001890  EF4C  F00C         	goto	u4080
  3662   001894                     u4081:
  3663   001894  EF4E  F00C         	goto	l5203
  3664   001898                     u4080:
  3665   001898  EF9F  F00C         	goto	l2038
  3666   00189C                     l5203:
  3667   00189C  EE20 F003          	lfsr	2,3
  3668   0018A0  500C               	movf	memset@s^0,w,c
  3669   0018A2  26D9               	addwf	fsr2l,f,c
  3670   0018A4  500D               	movf	(memset@s+1)^0,w,c
  3671   0018A6  22DA               	addwfc	fsr2h,f,c
  3672   0018A8  C004  FFDF         	movff	memset@c,indf2
  3673   0018AC  5006               	movf	memset@n^0,w,c
  3674   0018AE  240C               	addwf	memset@s^0,w,c
  3675   0018B0  6E08               	movwf	??_memset^0,c
  3676   0018B2  5007               	movf	(memset@n+1)^0,w,c
  3677   0018B4  200D               	addwfc	(memset@s+1)^0,w,c
  3678   0018B6  6E09               	movwf	(??_memset+1)^0,c
  3679   0018B8  0EFC               	movlw	252
  3680   0018BA  2408               	addwf	??_memset^0,w,c
  3681   0018BC  6ED9               	movwf	fsr2l,c
  3682   0018BE  0EFF               	movlw	255
  3683   0018C0  2009               	addwfc	(??_memset+1)^0,w,c
  3684   0018C2  6EDA               	movwf	fsr2h,c
  3685   0018C4  C004  FFDF         	movff	memset@c,indf2
  3686   0018C8  5007               	movf	(memset@n+1)^0,w,c
  3687   0018CA  E107               	bnz	u4091
  3688   0018CC  0E09               	movlw	9
  3689   0018CE  5C06               	subwf	memset@n^0,w,c
  3690   0018D0  B0D8               	btfsc	status,0,c
  3691   0018D2  EF6D  F00C         	goto	u4091
  3692   0018D6  EF6F  F00C         	goto	u4090
  3693   0018DA                     u4091:
  3694   0018DA  EF71  F00C         	goto	l5209
  3695   0018DE                     u4090:
  3696   0018DE  EF9F  F00C         	goto	l2038
  3697   0018E2                     l5209:
  3698   0018E2  C00C  F008         	movff	memset@s,??_memset
  3699   0018E6  C00D  F009         	movff	memset@s+1,??_memset+1
  3700   0018EA  1E08               	comf	??_memset^0,f,c
  3701   0018EC  1E09               	comf	(??_memset+1)^0,f,c
  3702   0018EE  4A08               	infsnz	??_memset^0,f,c
  3703   0018F0  2A09               	incf	(??_memset+1)^0,f,c
  3704   0018F2  0E03               	movlw	3
  3705   0018F4  1408               	andwf	??_memset^0,w,c
  3706   0018F6  6E0A               	movwf	memset@k^0,c
  3707   0018F8  6A0B               	clrf	(memset@k+1)^0,c
  3708   0018FA  500A               	movf	memset@k^0,w,c
  3709   0018FC  260C               	addwf	memset@s^0,f,c
  3710   0018FE  500B               	movf	(memset@k+1)^0,w,c
  3711   001900  220D               	addwfc	(memset@s+1)^0,f,c
  3712   001902  500A               	movf	memset@k^0,w,c
  3713   001904  5E06               	subwf	memset@n^0,f,c
  3714   001906  500B               	movf	(memset@k+1)^0,w,c
  3715   001908  5A07               	subwfb	(memset@n+1)^0,f,c
  3716   00190A  0EFC               	movlw	252
  3717   00190C  1606               	andwf	memset@n^0,f,c
  3718   00190E  0EFF               	movlw	255
  3719   001910  1607               	andwf	(memset@n+1)^0,f,c
  3720   001912  EF96  F00C         	goto	l5217
  3721   001916                     l5211:
  3722   001916  C00C  FFD9         	movff	memset@s,fsr2l
  3723   00191A  C00D  FFDA         	movff	memset@s+1,fsr2h
  3724   00191E  C004  FFDF         	movff	memset@c,indf2
  3725   001922  0606               	decf	memset@n^0,f,c
  3726   001924  A0D8               	btfss	status,0,c
  3727   001926  0607               	decf	(memset@n+1)^0,f,c
  3728   001928  4A0C               	infsnz	memset@s^0,f,c
  3729   00192A  2A0D               	incf	(memset@s+1)^0,f,c
  3730   00192C                     l5217:
  3731   00192C  5006               	movf	memset@n^0,w,c
  3732   00192E  1007               	iorwf	(memset@n+1)^0,w,c
  3733   001930  A4D8               	btfss	status,2,c
  3734   001932  EF9D  F00C         	goto	u4101
  3735   001936  EF9F  F00C         	goto	u4100
  3736   00193A                     u4101:
  3737   00193A  EF8B  F00C         	goto	l5211
  3738   00193E                     u4100:
  3739   00193E                     l2038:
  3740   00193E  0012               	return		;funcret
  3741   001940                     __end_of_memset:
  3742                           	callstack 0
  3743                           
  3744 ;; *************** function _application_initialize *****************
  3745 ;; Defined at:
  3746 ;;		line 75 in file "application.c"
  3747 ;; Parameters:    Size  Location     Type
  3748 ;;		None
  3749 ;; Auto vars:     Size  Location     Type
  3750 ;;		None
  3751 ;; Return value:  Size  Location     Type
  3752 ;;                  1    wreg      void 
  3753 ;; Registers used:
  3754 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3755 ;; Tracked objects:
  3756 ;;		On entry : 0/0
  3757 ;;		On exit  : 0/0
  3758 ;;		Unchanged: 0/0
  3759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3764 ;;Total ram usage:        0 bytes
  3765 ;; Hardware stack levels used: 1
  3766 ;; Hardware stack levels required when called: 7
  3767 ;; This function calls:
  3768 ;;		_Mcal_initialize
  3769 ;;		_ecu_initialize
  3770 ;; This function is called by:
  3771 ;;		_main
  3772 ;; This function uses a non-reentrant model
  3773 ;;
  3774                           
  3775                           	psect	text21
  3776   0029B6                     __ptext21:
  3777                           	callstack 0
  3778   0029B6                     _application_initialize:
  3779                           	callstack 23
  3780   0029B6                     
  3781                           ;application.c: 77:     ecu_initialize();
  3782   0029B6  EC2D  F014         	call	_ecu_initialize	;wreg free
  3783   0029BA                     
  3784                           ;application.c: 78:     Mcal_initialize();
  3785   0029BA  ECF5  F014         	call	_Mcal_initialize	;wreg free
  3786   0029BE  0012               	return		;funcret
  3787   0029C0                     __end_of_application_initialize:
  3788                           	callstack 0
  3789                           
  3790 ;; *************** function _ecu_initialize *****************
  3791 ;; Defined at:
  3792 ;;		line 95 in file "ECU_layer/ecu_initialize.c"
  3793 ;; Parameters:    Size  Location     Type
  3794 ;;		None
  3795 ;; Auto vars:     Size  Location     Type
  3796 ;;  ret             1    0        unsigned char 
  3797 ;; Return value:  Size  Location     Type
  3798 ;;                  1    wreg      void 
  3799 ;; Registers used:
  3800 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3801 ;; Tracked objects:
  3802 ;;		On entry : 0/0
  3803 ;;		On exit  : 0/0
  3804 ;;		Unchanged: 0/0
  3805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3810 ;;Total ram usage:        0 bytes
  3811 ;; Hardware stack levels used: 1
  3812 ;; Hardware stack levels required when called: 6
  3813 ;; This function calls:
  3814 ;;		_PIR_sensor_initialize
  3815 ;;		_dc_motor_initialize
  3816 ;;		_lcd_8bit_initialize
  3817 ;; This function is called by:
  3818 ;;		_application_initialize
  3819 ;; This function uses a non-reentrant model
  3820 ;;
  3821                           
  3822                           	psect	text22
  3823   00285A                     __ptext22:
  3824                           	callstack 0
  3825   00285A                     _ecu_initialize:
  3826                           	callstack 23
  3827   00285A  0E79               	movlw	low _motor_1
  3828   00285C  6E10               	movwf	dc_motor_initialize@dc_motor^0,c
  3829   00285E  0E00               	movlw	high _motor_1
  3830   002860  6E11               	movwf	(dc_motor_initialize@dc_motor+1)^0,c
  3831   002862  EC4C  F014         	call	_dc_motor_initialize	;wreg free
  3832   002866  0E77               	movlw	low _motor_2
  3833   002868  6E10               	movwf	dc_motor_initialize@dc_motor^0,c
  3834   00286A  0E00               	movlw	high _motor_2
  3835   00286C  6E11               	movwf	(dc_motor_initialize@dc_motor+1)^0,c
  3836   00286E  EC4C  F014         	call	_dc_motor_initialize	;wreg free
  3837   002872  0EDE               	movlw	low _lcd_1
  3838   002874  6E17               	movwf	lcd_8bit_initialize@lcd_obj^0,c
  3839   002876  0E00               	movlw	high _lcd_1
  3840   002878  6E18               	movwf	(lcd_8bit_initialize@lcd_obj+1)^0,c
  3841   00287A  EC42  F00D         	call	_lcd_8bit_initialize	;wreg free
  3842   00287E  0E7C               	movlw	low _pir1
  3843   002880  6E10               	movwf	PIR_sensor_initialize@Pir_obj^0,c
  3844   002882  0E00               	movlw	high _pir1
  3845   002884  6E11               	movwf	(PIR_sensor_initialize@Pir_obj+1)^0,c
  3846   002886  EC6B  F014         	call	_PIR_sensor_initialize	;wreg free
  3847   00288A  0E7B               	movlw	low _pir2
  3848   00288C  6E10               	movwf	PIR_sensor_initialize@Pir_obj^0,c
  3849   00288E  0E00               	movlw	high _pir2
  3850   002890  6E11               	movwf	(PIR_sensor_initialize@Pir_obj+1)^0,c
  3851   002892  EC6B  F014         	call	_PIR_sensor_initialize	;wreg free
  3852   002896  0012               	return		;funcret
  3853   002898                     __end_of_ecu_initialize:
  3854                           	callstack 0
  3855                           
  3856 ;; *************** function _lcd_8bit_initialize *****************
  3857 ;; Defined at:
  3858 ;;		line 226 in file "ECU_layer/Char_lCD/ecu_chr_lcd.c"
  3859 ;; Parameters:    Size  Location     Type
  3860 ;;  lcd_obj         2   22[COMRAM] PTR const struct .
  3861 ;;		 -> lcd_1(10), 
  3862 ;; Auto vars:     Size  Location     Type
  3863 ;;  i               2   25[COMRAM] int 
  3864 ;;  ret             1   27[COMRAM] unsigned char 
  3865 ;; Return value:  Size  Location     Type
  3866 ;;                  1    wreg      unsigned char 
  3867 ;; Registers used:
  3868 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3869 ;; Tracked objects:
  3870 ;;		On entry : 0/0
  3871 ;;		On exit  : 0/0
  3872 ;;		Unchanged: 0/0
  3873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3874 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3875 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3876 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3877 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3878 ;;Total ram usage:        6 bytes
  3879 ;; Hardware stack levels used: 1
  3880 ;; Hardware stack levels required when called: 5
  3881 ;; This function calls:
  3882 ;;		_gpio_pin_initialize
  3883 ;;		_lcd_8bit_send_command
  3884 ;; This function is called by:
  3885 ;;		_ecu_initialize
  3886 ;; This function uses a non-reentrant model
  3887 ;;
  3888                           
  3889                           	psect	text23
  3890   001A84                     __ptext23:
  3891                           	callstack 0
  3892   001A84                     _lcd_8bit_initialize:
  3893                           	callstack 23
  3894   001A84                     
  3895                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 229:     if(lcd_obj == ((void*)0))
  3896   001A84  5017               	movf	lcd_8bit_initialize@lcd_obj^0,w,c
  3897   001A86  1018               	iorwf	(lcd_8bit_initialize@lcd_obj+1)^0,w,c
  3898   001A88  A4D8               	btfss	status,2,c
  3899   001A8A  EF49  F00D         	goto	u3871
  3900   001A8E  EF4B  F00D         	goto	u3870
  3901   001A92                     u3871:
  3902   001A92  EF4F  F00D         	goto	l4995
  3903   001A96                     u3870:
  3904   001A96                     
  3905                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 230:     {;ECU_layer/Char_lCD/ecu_chr_lcd.c: 231:    
      +                               ret = (Std_ReturnType)0x00;
  3906   001A96  0E00               	movlw	0
  3907   001A98  6E1C               	movwf	lcd_8bit_initialize@ret^0,c
  3908                           
  3909                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 232:     }
  3910   001A9A  EFD9  F00D         	goto	l5031
  3911   001A9E                     l4995:
  3912                           
  3913                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 234:     {;ECU_layer/Char_lCD/ecu_chr_lcd.c: 235:    
      +                               ret = gpio_pin_initialize(&(lcd_obj->lcd_enable));
  3914   001A9E  0E08               	movlw	8
  3915   001AA0  2417               	addwf	lcd_8bit_initialize@lcd_obj^0,w,c
  3916   001AA2  6E0C               	movwf	gpio_pin_initialize@pin^0,c
  3917   001AA4  0E00               	movlw	0
  3918   001AA6  2018               	addwfc	(lcd_8bit_initialize@lcd_obj+1)^0,w,c
  3919   001AA8  6E0D               	movwf	(gpio_pin_initialize@pin+1)^0,c
  3920   001AAA  EC7D  F012         	call	_gpio_pin_initialize	;wreg free
  3921   001AAE  6E1C               	movwf	lcd_8bit_initialize@ret^0,c
  3922                           
  3923                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 236:         ret = gpio_pin_initialize(&(lcd_obj->lcd
      +                          _rs));
  3924   001AB0  0E09               	movlw	9
  3925   001AB2  2417               	addwf	lcd_8bit_initialize@lcd_obj^0,w,c
  3926   001AB4  6E0C               	movwf	gpio_pin_initialize@pin^0,c
  3927   001AB6  0E00               	movlw	0
  3928   001AB8  2018               	addwfc	(lcd_8bit_initialize@lcd_obj+1)^0,w,c
  3929   001ABA  6E0D               	movwf	(gpio_pin_initialize@pin+1)^0,c
  3930   001ABC  EC7D  F012         	call	_gpio_pin_initialize	;wreg free
  3931   001AC0  6E1C               	movwf	lcd_8bit_initialize@ret^0,c
  3932   001AC2                     
  3933                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 238:         for(int i=0;i<8;i++)
  3934   001AC2  0E00               	movlw	0
  3935   001AC4  6E1B               	movwf	(lcd_8bit_initialize@i+1)^0,c
  3936   001AC6  0E00               	movlw	0
  3937   001AC8  6E1A               	movwf	lcd_8bit_initialize@i^0,c
  3938   001ACA                     l5003:
  3939   001ACA  501A               	movf	lcd_8bit_initialize@i^0,w,c
  3940   001ACC  2417               	addwf	lcd_8bit_initialize@lcd_obj^0,w,c
  3941   001ACE  6E0C               	movwf	gpio_pin_initialize@pin^0,c
  3942   001AD0  501B               	movf	(lcd_8bit_initialize@i+1)^0,w,c
  3943   001AD2  2018               	addwfc	(lcd_8bit_initialize@lcd_obj+1)^0,w,c
  3944   001AD4  6E0D               	movwf	(gpio_pin_initialize@pin+1)^0,c
  3945   001AD6  EC7D  F012         	call	_gpio_pin_initialize	;wreg free
  3946   001ADA                     
  3947                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 241:         }
  3948   001ADA  4A1A               	infsnz	lcd_8bit_initialize@i^0,f,c
  3949   001ADC  2A1B               	incf	(lcd_8bit_initialize@i+1)^0,f,c
  3950   001ADE  BE1B               	btfsc	(lcd_8bit_initialize@i+1)^0,7,c
  3951   001AE0  EF7B  F00D         	goto	u3881
  3952   001AE4  501B               	movf	(lcd_8bit_initialize@i+1)^0,w,c
  3953   001AE6  E109               	bnz	u3880
  3954   001AE8  0E08               	movlw	8
  3955   001AEA  5C1A               	subwf	lcd_8bit_initialize@i^0,w,c
  3956   001AEC  A0D8               	btfss	status,0,c
  3957   001AEE  EF7B  F00D         	goto	u3881
  3958   001AF2  EF7D  F00D         	goto	u3880
  3959   001AF6                     u3881:
  3960   001AF6  EF65  F00D         	goto	l5003
  3961   001AFA                     u3880:
  3962   001AFA                     
  3963                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 243:         _delay((unsigned long)((20)*(4000000UL/4
      +                          000.0)));
  3964   001AFA  0E1A               	movlw	26
  3965   001AFC  6E19               	movwf	??_lcd_8bit_initialize^0,c
  3966   001AFE  0EF8               	movlw	248
  3967   001B00                     u6277:
  3968   001B00  2EE8               	decfsz	wreg,f,c
  3969   001B02  D7FE               	bra	u6277
  3970   001B04  2E19               	decfsz	??_lcd_8bit_initialize^0,f,c
  3971   001B06  D7FC               	bra	u6277
  3972   001B08  D000               	nop2	
  3973   001B0A  C017  F00F         	movff	lcd_8bit_initialize@lcd_obj,lcd_8bit_send_command@lcd_obj
  3974   001B0E  C018  F010         	movff	lcd_8bit_initialize@lcd_obj+1,lcd_8bit_send_command@lcd_obj+1
  3975   001B12  0E38               	movlw	56
  3976   001B14  6E11               	movwf	lcd_8bit_send_command@command^0,c
  3977   001B16  EC7C  F011         	call	_lcd_8bit_send_command	;wreg free
  3978   001B1A                     
  3979                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 245:         _delay((unsigned long)((5)*(4000000UL/40
      +                          00.0)));
  3980   001B1A  0E07               	movlw	7
  3981   001B1C  6E19               	movwf	??_lcd_8bit_initialize^0,c
  3982   001B1E  0E7D               	movlw	125
  3983   001B20                     u6287:
  3984   001B20  2EE8               	decfsz	wreg,f,c
  3985   001B22  D7FE               	bra	u6287
  3986   001B24  2E19               	decfsz	??_lcd_8bit_initialize^0,f,c
  3987   001B26  D7FC               	bra	u6287
  3988   001B28  F000               	nop	
  3989   001B2A  C017  F00F         	movff	lcd_8bit_initialize@lcd_obj,lcd_8bit_send_command@lcd_obj
  3990   001B2E  C018  F010         	movff	lcd_8bit_initialize@lcd_obj+1,lcd_8bit_send_command@lcd_obj+1
  3991   001B32  0E38               	movlw	56
  3992   001B34  6E11               	movwf	lcd_8bit_send_command@command^0,c
  3993   001B36  EC7C  F011         	call	_lcd_8bit_send_command	;wreg free
  3994   001B3A                     
  3995                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 247:         _delay((unsigned long)((150)*(4000000UL/
      +                          4000000.0)));
  3996   001B3A  0E32               	movlw	50
  3997   001B3C                     u6297:
  3998   001B3C  2EE8               	decfsz	wreg,f,c
  3999   001B3E  D7FE               	bra	u6297
  4000   001B40  C017  F00F         	movff	lcd_8bit_initialize@lcd_obj,lcd_8bit_send_command@lcd_obj
  4001   001B44  C018  F010         	movff	lcd_8bit_initialize@lcd_obj+1,lcd_8bit_send_command@lcd_obj+1
  4002   001B48  0E38               	movlw	56
  4003   001B4A  6E11               	movwf	lcd_8bit_send_command@command^0,c
  4004   001B4C  EC7C  F011         	call	_lcd_8bit_send_command	;wreg free
  4005   001B50  C017  F00F         	movff	lcd_8bit_initialize@lcd_obj,lcd_8bit_send_command@lcd_obj
  4006   001B54  C018  F010         	movff	lcd_8bit_initialize@lcd_obj+1,lcd_8bit_send_command@lcd_obj+1
  4007   001B58  0E01               	movlw	1
  4008   001B5A  6E11               	movwf	lcd_8bit_send_command@command^0,c
  4009   001B5C  EC7C  F011         	call	_lcd_8bit_send_command	;wreg free
  4010   001B60  C017  F00F         	movff	lcd_8bit_initialize@lcd_obj,lcd_8bit_send_command@lcd_obj
  4011   001B64  C018  F010         	movff	lcd_8bit_initialize@lcd_obj+1,lcd_8bit_send_command@lcd_obj+1
  4012   001B68  0E02               	movlw	2
  4013   001B6A  6E11               	movwf	lcd_8bit_send_command@command^0,c
  4014   001B6C  EC7C  F011         	call	_lcd_8bit_send_command	;wreg free
  4015   001B70  C017  F00F         	movff	lcd_8bit_initialize@lcd_obj,lcd_8bit_send_command@lcd_obj
  4016   001B74  C018  F010         	movff	lcd_8bit_initialize@lcd_obj+1,lcd_8bit_send_command@lcd_obj+1
  4017   001B78  0E06               	movlw	6
  4018   001B7A  6E11               	movwf	lcd_8bit_send_command@command^0,c
  4019   001B7C  EC7C  F011         	call	_lcd_8bit_send_command	;wreg free
  4020   001B80  C017  F00F         	movff	lcd_8bit_initialize@lcd_obj,lcd_8bit_send_command@lcd_obj
  4021   001B84  C018  F010         	movff	lcd_8bit_initialize@lcd_obj+1,lcd_8bit_send_command@lcd_obj+1
  4022   001B88  0E0C               	movlw	12
  4023   001B8A  6E11               	movwf	lcd_8bit_send_command@command^0,c
  4024   001B8C  EC7C  F011         	call	_lcd_8bit_send_command	;wreg free
  4025   001B90  C017  F00F         	movff	lcd_8bit_initialize@lcd_obj,lcd_8bit_send_command@lcd_obj
  4026   001B94  C018  F010         	movff	lcd_8bit_initialize@lcd_obj+1,lcd_8bit_send_command@lcd_obj+1
  4027   001B98  0E38               	movlw	56
  4028   001B9A  6E11               	movwf	lcd_8bit_send_command@command^0,c
  4029   001B9C  EC7C  F011         	call	_lcd_8bit_send_command	;wreg free
  4030   001BA0                     
  4031                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 254:         ret = lcd_8bit_send_command(lcd_obj,0x80
      +                          );
  4032   001BA0  C017  F00F         	movff	lcd_8bit_initialize@lcd_obj,lcd_8bit_send_command@lcd_obj
  4033   001BA4  C018  F010         	movff	lcd_8bit_initialize@lcd_obj+1,lcd_8bit_send_command@lcd_obj+1
  4034   001BA8  0E80               	movlw	128
  4035   001BAA  6E11               	movwf	lcd_8bit_send_command@command^0,c
  4036   001BAC  EC7C  F011         	call	_lcd_8bit_send_command	;wreg free
  4037   001BB0  6E1C               	movwf	lcd_8bit_initialize@ret^0,c
  4038   001BB2                     l5031:
  4039                           
  4040                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 256:     return ret;
  4041   001BB2  501C               	movf	lcd_8bit_initialize@ret^0,w,c
  4042   001BB4  0012               	return		;funcret
  4043   001BB6                     __end_of_lcd_8bit_initialize:
  4044                           	callstack 0
  4045                           
  4046 ;; *************** function _lcd_8bit_send_command *****************
  4047 ;; Defined at:
  4048 ;;		line 267 in file "ECU_layer/Char_lCD/ecu_chr_lcd.c"
  4049 ;; Parameters:    Size  Location     Type
  4050 ;;  lcd_obj         2   14[COMRAM] PTR const struct .
  4051 ;;		 -> lcd_1(10), 
  4052 ;;  command         1   16[COMRAM] unsigned char 
  4053 ;; Auto vars:     Size  Location     Type
  4054 ;;  i               2   20[COMRAM] int 
  4055 ;;  ret             1   19[COMRAM] unsigned char 
  4056 ;; Return value:  Size  Location     Type
  4057 ;;                  1    wreg      unsigned char 
  4058 ;; Registers used:
  4059 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4060 ;; Tracked objects:
  4061 ;;		On entry : 0/0
  4062 ;;		On exit  : 0/0
  4063 ;;		Unchanged: 0/0
  4064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4065 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4066 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4067 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4068 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4069 ;;Total ram usage:        8 bytes
  4070 ;; Hardware stack levels used: 1
  4071 ;; Hardware stack levels required when called: 4
  4072 ;; This function calls:
  4073 ;;		_gpio_pin_write_logic
  4074 ;;		_lcd_8bit_send_enable
  4075 ;; This function is called by:
  4076 ;;		_lcd_8bit_initialize
  4077 ;;		_lcd_8bit_set_cursor
  4078 ;;		_lcd_8bit_send_custome_chr
  4079 ;; This function uses a non-reentrant model
  4080 ;;
  4081                           
  4082                           	psect	text24
  4083   0022F8                     __ptext24:
  4084                           	callstack 0
  4085   0022F8                     _lcd_8bit_send_command:
  4086                           	callstack 24
  4087   0022F8                     
  4088                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 270:     if(lcd_obj == ((void*)0))
  4089   0022F8  500F               	movf	lcd_8bit_send_command@lcd_obj^0,w,c
  4090   0022FA  1010               	iorwf	(lcd_8bit_send_command@lcd_obj+1)^0,w,c
  4091   0022FC  A4D8               	btfss	status,2,c
  4092   0022FE  EF83  F011         	goto	u3811
  4093   002302  EF85  F011         	goto	u3810
  4094   002306                     u3811:
  4095   002306  EF89  F011         	goto	l4939
  4096   00230A                     u3810:
  4097   00230A                     
  4098                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 271:     {;ECU_layer/Char_lCD/ecu_chr_lcd.c: 272:    
      +                               ret = (Std_ReturnType)0x00;
  4099   00230A  0E00               	movlw	0
  4100   00230C  6E14               	movwf	lcd_8bit_send_command@ret^0,c
  4101                           
  4102                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 273:     }
  4103   00230E  EFC5  F011         	goto	l4955
  4104   002312                     l4939:
  4105   002312  0E09               	movlw	9
  4106   002314  240F               	addwf	lcd_8bit_send_command@lcd_obj^0,w,c
  4107   002316  6E02               	movwf	gpio_pin_write_logic@pin^0,c
  4108   002318  0E00               	movlw	0
  4109   00231A  2010               	addwfc	(lcd_8bit_send_command@lcd_obj+1)^0,w,c
  4110   00231C  6E03               	movwf	(gpio_pin_write_logic@pin+1)^0,c
  4111   00231E  0E00               	movlw	0
  4112   002320  6E04               	movwf	gpio_pin_write_logic@log^0,c
  4113   002322  EC71  F00E         	call	_gpio_pin_write_logic	;wreg free
  4114   002326                     
  4115                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 277:         for(int i=0;i<8;i++)
  4116   002326  0E00               	movlw	0
  4117   002328  6E16               	movwf	(lcd_8bit_send_command@i+1)^0,c
  4118   00232A  0E00               	movlw	0
  4119   00232C  6E15               	movwf	lcd_8bit_send_command@i^0,c
  4120   00232E                     l4947:
  4121   00232E  5015               	movf	lcd_8bit_send_command@i^0,w,c
  4122   002330  240F               	addwf	lcd_8bit_send_command@lcd_obj^0,w,c
  4123   002332  6E02               	movwf	gpio_pin_write_logic@pin^0,c
  4124   002334  5016               	movf	(lcd_8bit_send_command@i+1)^0,w,c
  4125   002336  2010               	addwfc	(lcd_8bit_send_command@lcd_obj+1)^0,w,c
  4126   002338  6E03               	movwf	(gpio_pin_write_logic@pin+1)^0,c
  4127   00233A  C015  F012         	movff	lcd_8bit_send_command@i,??_lcd_8bit_send_command
  4128   00233E  C011  F013         	movff	lcd_8bit_send_command@command,??_lcd_8bit_send_command+1
  4129   002342  2A12               	incf	??_lcd_8bit_send_command^0,f,c
  4130   002344  EFA6  F011         	goto	u3824
  4131   002348                     u3825:
  4132   002348  90D8               	bcf	status,0,c
  4133   00234A  3213               	rrcf	(??_lcd_8bit_send_command+1)^0,f,c
  4134   00234C                     u3824:
  4135   00234C  2E12               	decfsz	??_lcd_8bit_send_command^0,f,c
  4136   00234E  EFA4  F011         	goto	u3825
  4137   002352  5013               	movf	(??_lcd_8bit_send_command+1)^0,w,c
  4138   002354  0B01               	andlw	1
  4139   002356  6E04               	movwf	gpio_pin_write_logic@log^0,c
  4140   002358  EC71  F00E         	call	_gpio_pin_write_logic	;wreg free
  4141   00235C                     
  4142                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 280:         }
  4143   00235C  4A15               	infsnz	lcd_8bit_send_command@i^0,f,c
  4144   00235E  2A16               	incf	(lcd_8bit_send_command@i+1)^0,f,c
  4145   002360  BE16               	btfsc	(lcd_8bit_send_command@i+1)^0,7,c
  4146   002362  EFBC  F011         	goto	u3831
  4147   002366  5016               	movf	(lcd_8bit_send_command@i+1)^0,w,c
  4148   002368  E109               	bnz	u3830
  4149   00236A  0E08               	movlw	8
  4150   00236C  5C15               	subwf	lcd_8bit_send_command@i^0,w,c
  4151   00236E  A0D8               	btfss	status,0,c
  4152   002370  EFBC  F011         	goto	u3831
  4153   002374  EFBE  F011         	goto	u3830
  4154   002378                     u3831:
  4155   002378  EF97  F011         	goto	l4947
  4156   00237C                     u3830:
  4157   00237C                     
  4158                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 281:         ret = lcd_8bit_send_enable(lcd_obj);
  4159   00237C  C00F  F00C         	movff	lcd_8bit_send_command@lcd_obj,lcd_8bit_send_enable@lcd_obj
  4160   002380  C010  F00D         	movff	lcd_8bit_send_command@lcd_obj+1,lcd_8bit_send_enable@lcd_obj+1
  4161   002384  EC35  F013         	call	_lcd_8bit_send_enable	;wreg free
  4162   002388  6E14               	movwf	lcd_8bit_send_command@ret^0,c
  4163   00238A                     l4955:
  4164                           
  4165                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 283:     return ret;
  4166   00238A  5014               	movf	lcd_8bit_send_command@ret^0,w,c
  4167   00238C  0012               	return		;funcret
  4168   00238E                     __end_of_lcd_8bit_send_command:
  4169                           	callstack 0
  4170                           
  4171 ;; *************** function _lcd_8bit_send_enable *****************
  4172 ;; Defined at:
  4173 ;;		line 534 in file "ECU_layer/Char_lCD/ecu_chr_lcd.c"
  4174 ;; Parameters:    Size  Location     Type
  4175 ;;  lcd_obj         2   11[COMRAM] PTR const struct .
  4176 ;;		 -> lcd_1(10), 
  4177 ;; Auto vars:     Size  Location     Type
  4178 ;;  ret             1   13[COMRAM] unsigned char 
  4179 ;; Return value:  Size  Location     Type
  4180 ;;                  1    wreg      unsigned char 
  4181 ;; Registers used:
  4182 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4183 ;; Tracked objects:
  4184 ;;		On entry : 0/0
  4185 ;;		On exit  : 0/0
  4186 ;;		Unchanged: 0/0
  4187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4188 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4189 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4190 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4191 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4192 ;;Total ram usage:        3 bytes
  4193 ;; Hardware stack levels used: 1
  4194 ;; Hardware stack levels required when called: 3
  4195 ;; This function calls:
  4196 ;;		_gpio_pin_write_logic
  4197 ;; This function is called by:
  4198 ;;		_lcd_8bit_send_command
  4199 ;;		_lcd_8bit_send_char
  4200 ;; This function uses a non-reentrant model
  4201 ;;
  4202                           
  4203                           	psect	text25
  4204   00266A                     __ptext25:
  4205                           	callstack 0
  4206   00266A                     _lcd_8bit_send_enable:
  4207                           	callstack 24
  4208   00266A                     
  4209                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 537:     if(lcd_obj == ((void*)0))
  4210   00266A  500C               	movf	lcd_8bit_send_enable@lcd_obj^0,w,c
  4211   00266C  100D               	iorwf	(lcd_8bit_send_enable@lcd_obj+1)^0,w,c
  4212   00266E  A4D8               	btfss	status,2,c
  4213   002670  EF3C  F013         	goto	u3621
  4214   002674  EF3E  F013         	goto	u3620
  4215   002678                     u3621:
  4216   002678  EF42  F013         	goto	l4837
  4217   00267C                     u3620:
  4218   00267C                     
  4219                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 538:     {;ECU_layer/Char_lCD/ecu_chr_lcd.c: 539:    
      +                               ret = (Std_ReturnType)0x00;
  4220   00267C  0E00               	movlw	0
  4221   00267E  6E0E               	movwf	lcd_8bit_send_enable@ret^0,c
  4222                           
  4223                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 540:     }
  4224   002680  EF5A  F013         	goto	l4841
  4225   002684                     l4837:
  4226   002684  0E08               	movlw	8
  4227   002686  240C               	addwf	lcd_8bit_send_enable@lcd_obj^0,w,c
  4228   002688  6E02               	movwf	gpio_pin_write_logic@pin^0,c
  4229   00268A  0E00               	movlw	0
  4230   00268C  200D               	addwfc	(lcd_8bit_send_enable@lcd_obj+1)^0,w,c
  4231   00268E  6E03               	movwf	(gpio_pin_write_logic@pin+1)^0,c
  4232   002690  0E01               	movlw	1
  4233   002692  6E04               	movwf	gpio_pin_write_logic@log^0,c
  4234   002694  EC71  F00E         	call	_gpio_pin_write_logic	;wreg free
  4235   002698                     
  4236                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 544:         _delay((unsigned long)((5)*(4000000UL/40
      +                          00000.0)));
  4237   002698  D000               	nop2		;2 cycle nop
  4238   00269A  D000               	nop2		;2 cycle nop
  4239   00269C  F000               	nop	
  4240                           
  4241                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 545:         ret = gpio_pin_write_logic(&(lcd_obj->lc
      +                          d_enable),GPIO_LOW);
  4242   00269E  0E08               	movlw	8
  4243   0026A0  240C               	addwf	lcd_8bit_send_enable@lcd_obj^0,w,c
  4244   0026A2  6E02               	movwf	gpio_pin_write_logic@pin^0,c
  4245   0026A4  0E00               	movlw	0
  4246   0026A6  200D               	addwfc	(lcd_8bit_send_enable@lcd_obj+1)^0,w,c
  4247   0026A8  6E03               	movwf	(gpio_pin_write_logic@pin+1)^0,c
  4248   0026AA  0E00               	movlw	0
  4249   0026AC  6E04               	movwf	gpio_pin_write_logic@log^0,c
  4250   0026AE  EC71  F00E         	call	_gpio_pin_write_logic	;wreg free
  4251   0026B2  6E0E               	movwf	lcd_8bit_send_enable@ret^0,c
  4252   0026B4                     l4841:
  4253                           
  4254                           ;ECU_layer/Char_lCD/ecu_chr_lcd.c: 548:     return ret;
  4255   0026B4  500E               	movf	lcd_8bit_send_enable@ret^0,w,c
  4256   0026B6  0012               	return		;funcret
  4257   0026B8                     __end_of_lcd_8bit_send_enable:
  4258                           	callstack 0
  4259                           
  4260 ;; *************** function _dc_motor_initialize *****************
  4261 ;; Defined at:
  4262 ;;		line 20 in file "ECU_layer/DC_Motor/ecu_Dc_motor.c"
  4263 ;; Parameters:    Size  Location     Type
  4264 ;;  dc_motor        2   15[COMRAM] PTR const struct .
  4265 ;;		 -> motor_2(2), motor_1(2), 
  4266 ;; Auto vars:     Size  Location     Type
  4267 ;;  ret             1   17[COMRAM] unsigned char 
  4268 ;; Return value:  Size  Location     Type
  4269 ;;                  1    wreg      unsigned char 
  4270 ;; Registers used:
  4271 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4272 ;; Tracked objects:
  4273 ;;		On entry : 0/0
  4274 ;;		On exit  : 0/0
  4275 ;;		Unchanged: 0/0
  4276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4277 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4278 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4280 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4281 ;;Total ram usage:        3 bytes
  4282 ;; Hardware stack levels used: 1
  4283 ;; Hardware stack levels required when called: 4
  4284 ;; This function calls:
  4285 ;;		_gpio_pin_initialize
  4286 ;; This function is called by:
  4287 ;;		_ecu_initialize
  4288 ;; This function uses a non-reentrant model
  4289 ;;
  4290                           
  4291                           	psect	text26
  4292   002898                     __ptext26:
  4293                           	callstack 0
  4294   002898                     _dc_motor_initialize:
  4295                           	callstack 24
  4296   002898                     
  4297                           ;ECU_layer/DC_Motor/ecu_Dc_motor.c: 23:     if(dc_motor == ((void*)0))
  4298   002898  5010               	movf	dc_motor_initialize@dc_motor^0,w,c
  4299   00289A  1011               	iorwf	(dc_motor_initialize@dc_motor+1)^0,w,c
  4300   00289C  A4D8               	btfss	status,2,c
  4301   00289E  EF53  F014         	goto	u3921
  4302   0028A2  EF55  F014         	goto	u3920
  4303   0028A6                     u3921:
  4304   0028A6  EF59  F014         	goto	l5067
  4305   0028AA                     u3920:
  4306   0028AA                     
  4307                           ;ECU_layer/DC_Motor/ecu_Dc_motor.c: 24:     {;ECU_layer/DC_Motor/ecu_Dc_motor.c: 25:    
      +                               ret = (Std_ReturnType)0x00;
  4308   0028AA  0E00               	movlw	0
  4309   0028AC  6E12               	movwf	dc_motor_initialize@ret^0,c
  4310                           
  4311                           ;ECU_layer/DC_Motor/ecu_Dc_motor.c: 26:     }
  4312   0028AE  EF69  F014         	goto	l5069
  4313   0028B2                     l5067:
  4314                           
  4315                           ;ECU_layer/DC_Motor/ecu_Dc_motor.c: 28:     {;ECU_layer/DC_Motor/ecu_Dc_motor.c: 31:    
      +                               ret = gpio_pin_initialize(&(dc_motor->dc_motor_pin[0]));
  4316   0028B2  C010  F00C         	movff	dc_motor_initialize@dc_motor,gpio_pin_initialize@pin
  4317   0028B6  C011  F00D         	movff	dc_motor_initialize@dc_motor+1,gpio_pin_initialize@pin+1
  4318   0028BA  EC7D  F012         	call	_gpio_pin_initialize	;wreg free
  4319   0028BE  6E12               	movwf	dc_motor_initialize@ret^0,c
  4320                           
  4321                           ;ECU_layer/DC_Motor/ecu_Dc_motor.c: 32:         ret = gpio_pin_initialize(&(dc_motor->dc
      +                          _motor_pin[1]));
  4322   0028C0  0E01               	movlw	1
  4323   0028C2  2410               	addwf	dc_motor_initialize@dc_motor^0,w,c
  4324   0028C4  6E0C               	movwf	gpio_pin_initialize@pin^0,c
  4325   0028C6  0E00               	movlw	0
  4326   0028C8  2011               	addwfc	(dc_motor_initialize@dc_motor+1)^0,w,c
  4327   0028CA  6E0D               	movwf	(gpio_pin_initialize@pin+1)^0,c
  4328   0028CC  EC7D  F012         	call	_gpio_pin_initialize	;wreg free
  4329   0028D0  6E12               	movwf	dc_motor_initialize@ret^0,c
  4330   0028D2                     l5069:
  4331                           
  4332                           ;ECU_layer/DC_Motor/ecu_Dc_motor.c: 34:     return ret;
  4333   0028D2  5012               	movf	dc_motor_initialize@ret^0,w,c
  4334   0028D4  0012               	return		;funcret
  4335   0028D6                     __end_of_dc_motor_initialize:
  4336                           	callstack 0
  4337                           
  4338 ;; *************** function _PIR_sensor_initialize *****************
  4339 ;; Defined at:
  4340 ;;		line 10 in file "ECU_layer/Pir_sensor/Pir_sensor.c"
  4341 ;; Parameters:    Size  Location     Type
  4342 ;;  Pir_obj         2   15[COMRAM] PTR const struct .
  4343 ;;		 -> pir2(1), pir1(1), 
  4344 ;; Auto vars:     Size  Location     Type
  4345 ;;  ret             1   17[COMRAM] unsigned char 
  4346 ;; Return value:  Size  Location     Type
  4347 ;;                  1    wreg      unsigned char 
  4348 ;; Registers used:
  4349 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4350 ;; Tracked objects:
  4351 ;;		On entry : 0/0
  4352 ;;		On exit  : 0/0
  4353 ;;		Unchanged: 0/0
  4354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4355 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4356 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4358 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4359 ;;Total ram usage:        3 bytes
  4360 ;; Hardware stack levels used: 1
  4361 ;; Hardware stack levels required when called: 4
  4362 ;; This function calls:
  4363 ;;		_gpio_pin_initialize
  4364 ;; This function is called by:
  4365 ;;		_ecu_initialize
  4366 ;; This function uses a non-reentrant model
  4367 ;;
  4368                           
  4369                           	psect	text27
  4370   0028D6                     __ptext27:
  4371                           	callstack 0
  4372   0028D6                     _PIR_sensor_initialize:
  4373                           	callstack 24
  4374   0028D6                     
  4375                           ;ECU_layer/Pir_sensor/Pir_sensor.c: 13:     if(Pir_obj==((void*)0))
  4376   0028D6  5010               	movf	PIR_sensor_initialize@Pir_obj^0,w,c
  4377   0028D8  1011               	iorwf	(PIR_sensor_initialize@Pir_obj+1)^0,w,c
  4378   0028DA  A4D8               	btfss	status,2,c
  4379   0028DC  EF72  F014         	goto	u3931
  4380   0028E0  EF74  F014         	goto	u3930
  4381   0028E4                     u3931:
  4382   0028E4  EF78  F014         	goto	l5079
  4383   0028E8                     u3930:
  4384   0028E8                     
  4385                           ;ECU_layer/Pir_sensor/Pir_sensor.c: 14:     {;ECU_layer/Pir_sensor/Pir_sensor.c: 15:    
      +                               ret = (Std_ReturnType)0x00;
  4386   0028E8  0E00               	movlw	0
  4387   0028EA  6E12               	movwf	PIR_sensor_initialize@ret^0,c
  4388                           
  4389                           ;ECU_layer/Pir_sensor/Pir_sensor.c: 16:     }
  4390   0028EC  EF7F  F014         	goto	l5081
  4391   0028F0                     l5079:
  4392                           
  4393                           ;ECU_layer/Pir_sensor/Pir_sensor.c: 18:     {;ECU_layer/Pir_sensor/Pir_sensor.c: 19:    
      +                               ret = gpio_pin_initialize(&(Pir_obj->pin));
  4394   0028F0  C010  F00C         	movff	PIR_sensor_initialize@Pir_obj,gpio_pin_initialize@pin
  4395   0028F4  C011  F00D         	movff	PIR_sensor_initialize@Pir_obj+1,gpio_pin_initialize@pin+1
  4396   0028F8  EC7D  F012         	call	_gpio_pin_initialize	;wreg free
  4397   0028FC  6E12               	movwf	PIR_sensor_initialize@ret^0,c
  4398   0028FE                     l5081:
  4399                           
  4400                           ;ECU_layer/Pir_sensor/Pir_sensor.c: 21:     return ret;
  4401   0028FE  5012               	movf	PIR_sensor_initialize@ret^0,w,c
  4402   002900  0012               	return		;funcret
  4403   002902                     __end_of_PIR_sensor_initialize:
  4404                           	callstack 0
  4405                           
  4406 ;; *************** function _gpio_pin_initialize *****************
  4407 ;; Defined at:
  4408 ;;		line 146 in file "MCAL_layer/GPIO/hal_gpio.c"
  4409 ;; Parameters:    Size  Location     Type
  4410 ;;  pin             2   11[COMRAM] PTR const struct .
  4411 ;;		 -> pir2(1), pir1(1), motor_2.dc_motor_pin(2), motor_2(2), 
  4412 ;;		 -> motor_1.dc_motor_pin(2), motor_1(2), lcd_1.lcd_data(8), lcd_1(10), 
  4413 ;;		 -> led_initialize@pin_obj(1), relay_initialize@relay_pin(1), 
  4414 ;; Auto vars:     Size  Location     Type
  4415 ;;  ret             1   14[COMRAM] unsigned char 
  4416 ;; Return value:  Size  Location     Type
  4417 ;;                  1    wreg      unsigned char 
  4418 ;; Registers used:
  4419 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4420 ;; Tracked objects:
  4421 ;;		On entry : 0/0
  4422 ;;		On exit  : 0/0
  4423 ;;		Unchanged: 0/0
  4424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4425 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4426 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4427 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4428 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4429 ;;Total ram usage:        4 bytes
  4430 ;; Hardware stack levels used: 1
  4431 ;; Hardware stack levels required when called: 3
  4432 ;; This function calls:
  4433 ;;		_gpio_pin_direction_initialize
  4434 ;;		_gpio_pin_write_logic
  4435 ;; This function is called by:
  4436 ;;		_lcd_8bit_initialize
  4437 ;;		_dc_motor_initialize
  4438 ;;		_PIR_sensor_initialize
  4439 ;;		_lcd_4bit_initialize
  4440 ;;		_relay_initialize
  4441 ;;		_keypad_initialize
  4442 ;;		_led_initialize
  4443 ;;		_initialize_seven_segment
  4444 ;;		_CCP_Init
  4445 ;;		_Interrupt_RBx_Init
  4446 ;;		_Interrupt_INTx_Pin_init
  4447 ;; This function uses a non-reentrant model
  4448 ;;
  4449                           
  4450                           	psect	text28
  4451   0024FA                     __ptext28:
  4452                           	callstack 0
  4453   0024FA                     _gpio_pin_initialize:
  4454                           	callstack 24
  4455   0024FA                     
  4456                           ;MCAL_layer/GPIO/hal_gpio.c: 149:     if((pin==((void*)0))||(pin->pin>=8))
  4457   0024FA  500C               	movf	gpio_pin_initialize@pin^0,w,c
  4458   0024FC  100D               	iorwf	(gpio_pin_initialize@pin+1)^0,w,c
  4459   0024FE  B4D8               	btfsc	status,2,c
  4460   002500  EF84  F012         	goto	u3791
  4461   002504  EF86  F012         	goto	u3790
  4462   002508                     u3791:
  4463   002508  EF97  F012         	goto	l4925
  4464   00250C                     u3790:
  4465   00250C  C00C  FFD9         	movff	gpio_pin_initialize@pin,fsr2l
  4466   002510  C00D  FFDA         	movff	gpio_pin_initialize@pin+1,fsr2h
  4467   002514  30DF               	rrcf	223,w,c
  4468   002516  32E8               	rrcf	wreg,f,c
  4469   002518  32E8               	rrcf	wreg,f,c
  4470   00251A  0B07               	andlw	7
  4471   00251C  6E0E               	movwf	??_gpio_pin_initialize^0,c
  4472   00251E  0E07               	movlw	7
  4473   002520  640E               	cpfsgt	??_gpio_pin_initialize^0,c
  4474   002522  EF95  F012         	goto	u3801
  4475   002526  EF97  F012         	goto	u3800
  4476   00252A                     u3801:
  4477   00252A  EF9B  F012         	goto	l4927
  4478   00252E                     u3800:
  4479   00252E                     l4925:
  4480                           
  4481                           ;MCAL_layer/GPIO/hal_gpio.c: 150:     {;MCAL_layer/GPIO/hal_gpio.c: 151:         ret = (
      +                          Std_ReturnType)0x00;
  4482   00252E  0E00               	movlw	0
  4483   002530  6E0F               	movwf	gpio_pin_initialize@ret^0,c
  4484                           
  4485                           ;MCAL_layer/GPIO/hal_gpio.c: 152:     }
  4486   002532  EFB1  F012         	goto	l4929
  4487   002536                     l4927:
  4488                           
  4489                           ;MCAL_layer/GPIO/hal_gpio.c: 154:     {;MCAL_layer/GPIO/hal_gpio.c: 155:         ret = g
      +                          pio_pin_direction_initialize(pin);
  4490   002536  C00C  F002         	movff	gpio_pin_initialize@pin,gpio_pin_direction_initialize@pin
  4491   00253A  C00D  F003         	movff	gpio_pin_initialize@pin+1,gpio_pin_direction_initialize@pin+1
  4492   00253E  ECA0  F00C         	call	_gpio_pin_direction_initialize	;wreg free
  4493   002542  6E0F               	movwf	gpio_pin_initialize@ret^0,c
  4494                           
  4495                           ;MCAL_layer/GPIO/hal_gpio.c: 156:         ret = gpio_pin_write_logic(pin,pin->logic);
  4496   002544  C00C  F002         	movff	gpio_pin_initialize@pin,gpio_pin_write_logic@pin
  4497   002548  C00D  F003         	movff	gpio_pin_initialize@pin+1,gpio_pin_write_logic@pin+1
  4498   00254C  C00C  FFD9         	movff	gpio_pin_initialize@pin,fsr2l
  4499   002550  C00D  FFDA         	movff	gpio_pin_initialize@pin+1,fsr2h
  4500   002554  0E00               	movlw	0
  4501   002556  BEDF               	btfsc	indf2,7,c
  4502   002558  0E01               	movlw	1
  4503   00255A  6E04               	movwf	gpio_pin_write_logic@log^0,c
  4504   00255C  EC71  F00E         	call	_gpio_pin_write_logic	;wreg free
  4505   002560  6E0F               	movwf	gpio_pin_initialize@ret^0,c
  4506   002562                     l4929:
  4507                           
  4508                           ;MCAL_layer/GPIO/hal_gpio.c: 158:     return ret;
  4509   002562  500F               	movf	gpio_pin_initialize@ret^0,w,c
  4510   002564  0012               	return		;funcret
  4511   002566                     __end_of_gpio_pin_initialize:
  4512                           	callstack 0
  4513                           
  4514 ;; *************** function _gpio_pin_write_logic *****************
  4515 ;; Defined at:
  4516 ;;		line 96 in file "MCAL_layer/GPIO/hal_gpio.c"
  4517 ;; Parameters:    Size  Location     Type
  4518 ;;  pin             2    1[COMRAM] PTR const struct .
  4519 ;;		 -> pir2(1), pir1(1), motor_2.dc_motor_pin(2), motor_2(2), 
  4520 ;;		 -> motor_1.dc_motor_pin(2), motor_1(2), lcd_1.lcd_data(8), lcd_1(10), 
  4521 ;;		 -> led_turn_off@pin_obj(1), led_turn_on@pin_obj(1), led_initialize@pin_obj(1), relay_turn_off@relay_pin(1), 
  4522 ;;		 -> relay_turn_on@relay_pin(1), relay_initialize@relay_pin(1), 
  4523 ;;  log             1    3[COMRAM] enum E3137
  4524 ;; Auto vars:     Size  Location     Type
  4525 ;;  ret             1   10[COMRAM] unsigned char 
  4526 ;; Return value:  Size  Location     Type
  4527 ;;                  1    wreg      unsigned char 
  4528 ;; Registers used:
  4529 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4530 ;; Tracked objects:
  4531 ;;		On entry : 0/0
  4532 ;;		On exit  : 0/0
  4533 ;;		Unchanged: 0/0
  4534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4535 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4536 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4537 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4538 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4539 ;;Total ram usage:       10 bytes
  4540 ;; Hardware stack levels used: 1
  4541 ;; Hardware stack levels required when called: 2
  4542 ;; This function calls:
  4543 ;;		Nothing
  4544 ;; This function is called by:
  4545 ;;		_lcd_8bit_send_command
  4546 ;;		_lcd_8bit_send_char
  4547 ;;		_lcd_8bit_send_enable
  4548 ;;		_dc_motor_move_right
  4549 ;;		_dc_motor_move_left
  4550 ;;		_dc_motor_stop
  4551 ;;		_gpio_pin_initialize
  4552 ;;		_lcd_4bit_send_command
  4553 ;;		_lcd_4bit_send_char
  4554 ;;		_lcd_send_4bit
  4555 ;;		_lcd_4bit_send_enable
  4556 ;;		_relay_turn_on
  4557 ;;		_relay_turn_off
  4558 ;;		_keypad_get_value
  4559 ;;		_led_turn_on
  4560 ;;		_led_turn_off
  4561 ;;		_seven_segment_write_number
  4562 ;; This function uses a non-reentrant model
  4563 ;;
  4564                           
  4565                           	psect	text29
  4566   001CE2                     __ptext29:
  4567                           	callstack 0
  4568   001CE2                     _gpio_pin_write_logic:
  4569                           	callstack 24
  4570   001CE2                     
  4571                           ;MCAL_layer/GPIO/hal_gpio.c: 96: Std_ReturnType gpio_pin_write_logic(const pin_config *p
      +                          in,logic_t log);MCAL_layer/GPIO/hal_gpio.c: 97: {;MCAL_layer/GPIO/hal_gpio.c: 98:     St
      +                          d_ReturnType ret = (Std_ReturnType)0x01;
  4572   001CE2  0E01               	movlw	1
  4573   001CE4  6E0B               	movwf	gpio_pin_write_logic@ret^0,c
  4574   001CE6                     
  4575                           ;MCAL_layer/GPIO/hal_gpio.c: 99:     if((pin==((void*)0))||(pin->pin>=8))
  4576   001CE6  5002               	movf	gpio_pin_write_logic@pin^0,w,c
  4577   001CE8  1003               	iorwf	(gpio_pin_write_logic@pin+1)^0,w,c
  4578   001CEA  B4D8               	btfsc	status,2,c
  4579   001CEC  EF7A  F00E         	goto	u3431
  4580   001CF0  EF7C  F00E         	goto	u3430
  4581   001CF4                     u3431:
  4582   001CF4  EF8D  F00E         	goto	l4715
  4583   001CF8                     u3430:
  4584   001CF8  C002  FFD9         	movff	gpio_pin_write_logic@pin,fsr2l
  4585   001CFC  C003  FFDA         	movff	gpio_pin_write_logic@pin+1,fsr2h
  4586   001D00  30DF               	rrcf	223,w,c
  4587   001D02  32E8               	rrcf	wreg,f,c
  4588   001D04  32E8               	rrcf	wreg,f,c
  4589   001D06  0B07               	andlw	7
  4590   001D08  6E05               	movwf	??_gpio_pin_write_logic^0,c
  4591   001D0A  0E07               	movlw	7
  4592   001D0C  6405               	cpfsgt	??_gpio_pin_write_logic^0,c
  4593   001D0E  EF8B  F00E         	goto	u3441
  4594   001D12  EF8D  F00E         	goto	u3440
  4595   001D16                     u3441:
  4596   001D16  EFF0  F00E         	goto	l4723
  4597   001D1A                     u3440:
  4598   001D1A                     l4715:
  4599                           
  4600                           ;MCAL_layer/GPIO/hal_gpio.c: 100:     {;MCAL_layer/GPIO/hal_gpio.c: 101:         ret = (
      +                          Std_ReturnType)0x00;
  4601   001D1A  0E00               	movlw	0
  4602   001D1C  6E0B               	movwf	gpio_pin_write_logic@ret^0,c
  4603                           
  4604                           ;MCAL_layer/GPIO/hal_gpio.c: 102:     }
  4605   001D1E  EF05  F00F         	goto	l4725
  4606   001D22                     l4717:
  4607                           
  4608                           ;MCAL_layer/GPIO/hal_gpio.c: 108:                 (*lat_registers[pin->port] &= ~((uint8
      +                          )1 << pin->pin));
  4609   001D22  C002  FFD9         	movff	gpio_pin_write_logic@pin,fsr2l
  4610   001D26  C003  FFDA         	movff	gpio_pin_write_logic@pin+1,fsr2h
  4611   001D2A  30DF               	rrcf	223,w,c
  4612   001D2C  32E8               	rrcf	wreg,f,c
  4613   001D2E  32E8               	rrcf	wreg,f,c
  4614   001D30  0B07               	andlw	7
  4615   001D32  6E05               	movwf	??_gpio_pin_write_logic^0,c
  4616   001D34  0E01               	movlw	1
  4617   001D36  6E06               	movwf	(??_gpio_pin_write_logic+1)^0,c
  4618   001D38  2A05               	incf	??_gpio_pin_write_logic^0,f,c
  4619   001D3A  EFA1  F00E         	goto	u3454
  4620   001D3E                     u3455:
  4621   001D3E  90D8               	bcf	status,0,c
  4622   001D40  3606               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  4623   001D42                     u3454:
  4624   001D42  2E05               	decfsz	??_gpio_pin_write_logic^0,f,c
  4625   001D44  EF9F  F00E         	goto	u3455
  4626   001D48  5006               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  4627   001D4A  0AFF               	xorlw	255
  4628   001D4C  6E07               	movwf	(??_gpio_pin_write_logic+2)^0,c
  4629   001D4E  C002  FFD9         	movff	gpio_pin_write_logic@pin,fsr2l
  4630   001D52  C003  FFDA         	movff	gpio_pin_write_logic@pin+1,fsr2h
  4631   001D56  50DF               	movf	223,w,c
  4632   001D58  0B07               	andlw	7
  4633   001D5A  6E08               	movwf	(??_gpio_pin_write_logic+3)^0,c
  4634   001D5C  5008               	movf	(??_gpio_pin_write_logic+3)^0,w,c
  4635   001D5E  0D02               	mullw	2
  4636   001D60  0EC0               	movlw	low _lat_registers
  4637   001D62  24F3               	addwf	243,w,c
  4638   001D64  6ED9               	movwf	fsr2l,c
  4639   001D66  0E00               	movlw	high _lat_registers
  4640   001D68  20F4               	addwfc	prodh,w,c
  4641   001D6A  6EDA               	movwf	fsr2h,c
  4642   001D6C  CFDE F009          	movff	postinc2,??_gpio_pin_write_logic+4
  4643   001D70  CFDD F00A          	movff	postdec2,??_gpio_pin_write_logic+5
  4644   001D74  C009  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
  4645   001D78  C00A  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
  4646   001D7C  5007               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  4647   001D7E  16DF               	andwf	indf2,f,c
  4648                           
  4649                           ;MCAL_layer/GPIO/hal_gpio.c: 109:                 break;
  4650   001D80  EF05  F00F         	goto	l4725
  4651   001D84                     l4719:
  4652                           
  4653                           ;MCAL_layer/GPIO/hal_gpio.c: 111:                 (*lat_registers[pin->port] |= ((uint8)
      +                          1 << pin->pin));
  4654   001D84  C002  FFD9         	movff	gpio_pin_write_logic@pin,fsr2l
  4655   001D88  C003  FFDA         	movff	gpio_pin_write_logic@pin+1,fsr2h
  4656   001D8C  30DF               	rrcf	223,w,c
  4657   001D8E  32E8               	rrcf	wreg,f,c
  4658   001D90  32E8               	rrcf	wreg,f,c
  4659   001D92  0B07               	andlw	7
  4660   001D94  6E05               	movwf	??_gpio_pin_write_logic^0,c
  4661   001D96  0E01               	movlw	1
  4662   001D98  6E06               	movwf	(??_gpio_pin_write_logic+1)^0,c
  4663   001D9A  2A05               	incf	??_gpio_pin_write_logic^0,f,c
  4664   001D9C  EFD2  F00E         	goto	u3464
  4665   001DA0                     u3465:
  4666   001DA0  90D8               	bcf	status,0,c
  4667   001DA2  3606               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  4668   001DA4                     u3464:
  4669   001DA4  2E05               	decfsz	??_gpio_pin_write_logic^0,f,c
  4670   001DA6  EFD0  F00E         	goto	u3465
  4671   001DAA  C002  FFD9         	movff	gpio_pin_write_logic@pin,fsr2l
  4672   001DAE  C003  FFDA         	movff	gpio_pin_write_logic@pin+1,fsr2h
  4673   001DB2  50DF               	movf	223,w,c
  4674   001DB4  0B07               	andlw	7
  4675   001DB6  6E07               	movwf	(??_gpio_pin_write_logic+2)^0,c
  4676   001DB8  5007               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  4677   001DBA  0D02               	mullw	2
  4678   001DBC  0EC0               	movlw	low _lat_registers
  4679   001DBE  24F3               	addwf	243,w,c
  4680   001DC0  6ED9               	movwf	fsr2l,c
  4681   001DC2  0E00               	movlw	high _lat_registers
  4682   001DC4  20F4               	addwfc	prodh,w,c
  4683   001DC6  6EDA               	movwf	fsr2h,c
  4684   001DC8  CFDE F008          	movff	postinc2,??_gpio_pin_write_logic+3
  4685   001DCC  CFDD F009          	movff	postdec2,??_gpio_pin_write_logic+4
  4686   001DD0  C008  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  4687   001DD4  C009  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  4688   001DD8  5006               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  4689   001DDA  12DF               	iorwf	indf2,f,c
  4690                           
  4691                           ;MCAL_layer/GPIO/hal_gpio.c: 112:                 break;
  4692   001DDC  EF05  F00F         	goto	l4725
  4693   001DE0                     l4723:
  4694   001DE0  5004               	movf	gpio_pin_write_logic@log^0,w,c
  4695   001DE2  6E05               	movwf	??_gpio_pin_write_logic^0,c
  4696   001DE4  6A06               	clrf	(??_gpio_pin_write_logic+1)^0,c
  4697                           
  4698                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4699                           ; Switch size 1, requested type "simple"
  4700                           ; Number of cases is 1, Range of values is 0 to 0
  4701                           ; switch strategies available:
  4702                           ; Name         Instructions Cycles
  4703                           ; simple_byte            4     3 (average)
  4704                           ;	Chosen strategy is simple_byte
  4705   001DE6  5006               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  4706   001DE8  0A00               	xorlw	0	; case 0
  4707   001DEA  B4D8               	btfsc	status,2,c
  4708   001DEC  EFFA  F00E         	goto	l6895
  4709   001DF0  EF8D  F00E         	goto	l4715
  4710   001DF4                     l6895:
  4711                           
  4712                           ; Switch size 1, requested type "simple"
  4713                           ; Number of cases is 2, Range of values is 0 to 1
  4714                           ; switch strategies available:
  4715                           ; Name         Instructions Cycles
  4716                           ; simple_byte            7     4 (average)
  4717                           ;	Chosen strategy is simple_byte
  4718   001DF4  5005               	movf	??_gpio_pin_write_logic^0,w,c
  4719   001DF6  0A00               	xorlw	0	; case 0
  4720   001DF8  B4D8               	btfsc	status,2,c
  4721   001DFA  EF91  F00E         	goto	l4717
  4722   001DFE  0A01               	xorlw	1	; case 1
  4723   001E00  B4D8               	btfsc	status,2,c
  4724   001E02  EFC2  F00E         	goto	l4719
  4725   001E06  EF8D  F00E         	goto	l4715
  4726   001E0A                     l4725:
  4727                           
  4728                           ;MCAL_layer/GPIO/hal_gpio.c: 117:      return ret;
  4729   001E0A  500B               	movf	gpio_pin_write_logic@ret^0,w,c
  4730   001E0C  0012               	return		;funcret
  4731   001E0E                     __end_of_gpio_pin_write_logic:
  4732                           	callstack 0
  4733                           
  4734 ;; *************** function _gpio_pin_direction_initialize *****************
  4735 ;; Defined at:
  4736 ;;		line 22 in file "MCAL_layer/GPIO/hal_gpio.c"
  4737 ;; Parameters:    Size  Location     Type
  4738 ;;  pin             2    1[COMRAM] PTR const struct .
  4739 ;;		 -> pir2(1), pir1(1), motor_2.dc_motor_pin(2), motor_2(2), 
  4740 ;;		 -> motor_1.dc_motor_pin(2), motor_1(2), lcd_1.lcd_data(8), lcd_1(10), 
  4741 ;;		 -> led_initialize@pin_obj(1), relay_initialize@relay_pin(1), 
  4742 ;; Auto vars:     Size  Location     Type
  4743 ;;  ret             1    9[COMRAM] unsigned char 
  4744 ;; Return value:  Size  Location     Type
  4745 ;;                  1    wreg      unsigned char 
  4746 ;; Registers used:
  4747 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4748 ;; Tracked objects:
  4749 ;;		On entry : 0/0
  4750 ;;		On exit  : 0/0
  4751 ;;		Unchanged: 0/0
  4752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4753 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4754 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4755 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4756 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4757 ;;Total ram usage:        9 bytes
  4758 ;; Hardware stack levels used: 1
  4759 ;; Hardware stack levels required when called: 2
  4760 ;; This function calls:
  4761 ;;		Nothing
  4762 ;; This function is called by:
  4763 ;;		_gpio_pin_initialize
  4764 ;;		_keypad_initialize
  4765 ;;		_push_button_initialize
  4766 ;; This function uses a non-reentrant model
  4767 ;;
  4768                           
  4769                           	psect	text30
  4770   001940                     __ptext30:
  4771                           	callstack 0
  4772   001940                     _gpio_pin_direction_initialize:
  4773                           	callstack 24
  4774   001940                     
  4775                           ;MCAL_layer/GPIO/hal_gpio.c: 22: Std_ReturnType gpio_pin_direction_initialize(const pin_
      +                          config *pin);MCAL_layer/GPIO/hal_gpio.c: 23: {;MCAL_layer/GPIO/hal_gpio.c: 24:     Std_R
      +                          eturnType ret = (Std_ReturnType)0x01;
  4776   001940  0E01               	movlw	1
  4777   001942  6E0A               	movwf	gpio_pin_direction_initialize@ret^0,c
  4778   001944                     
  4779                           ;MCAL_layer/GPIO/hal_gpio.c: 25:     if((pin==((void*)0))||(pin->pin>=8))
  4780   001944  5002               	movf	gpio_pin_direction_initialize@pin^0,w,c
  4781   001946  1003               	iorwf	(gpio_pin_direction_initialize@pin+1)^0,w,c
  4782   001948  B4D8               	btfsc	status,2,c
  4783   00194A  EFA9  F00C         	goto	u3631
  4784   00194E  EFAB  F00C         	goto	u3630
  4785   001952                     u3631:
  4786   001952  EFBC  F00C         	goto	l4851
  4787   001956                     u3630:
  4788   001956  C002  FFD9         	movff	gpio_pin_direction_initialize@pin,fsr2l
  4789   00195A  C003  FFDA         	movff	gpio_pin_direction_initialize@pin+1,fsr2h
  4790   00195E  30DF               	rrcf	223,w,c
  4791   001960  32E8               	rrcf	wreg,f,c
  4792   001962  32E8               	rrcf	wreg,f,c
  4793   001964  0B07               	andlw	7
  4794   001966  6E04               	movwf	??_gpio_pin_direction_initialize^0,c
  4795   001968  0E07               	movlw	7
  4796   00196A  6404               	cpfsgt	??_gpio_pin_direction_initialize^0,c
  4797   00196C  EFBA  F00C         	goto	u3641
  4798   001970  EFBC  F00C         	goto	u3640
  4799   001974                     u3641:
  4800   001974  EF1F  F00D         	goto	l4859
  4801   001978                     u3640:
  4802   001978                     l4851:
  4803                           
  4804                           ;MCAL_layer/GPIO/hal_gpio.c: 26:     {;MCAL_layer/GPIO/hal_gpio.c: 27:         ret = (St
      +                          d_ReturnType)0x00;
  4805   001978  0E00               	movlw	0
  4806   00197A  6E0A               	movwf	gpio_pin_direction_initialize@ret^0,c
  4807                           
  4808                           ;MCAL_layer/GPIO/hal_gpio.c: 28:     }
  4809   00197C  EF40  F00D         	goto	l4861
  4810   001980                     l4853:
  4811                           
  4812                           ;MCAL_layer/GPIO/hal_gpio.c: 34:                 (*tris_registers[pin->port] &= ~((uint8
      +                          )1 << pin->pin));
  4813   001980  C002  FFD9         	movff	gpio_pin_direction_initialize@pin,fsr2l
  4814   001984  C003  FFDA         	movff	gpio_pin_direction_initialize@pin+1,fsr2h
  4815   001988  30DF               	rrcf	223,w,c
  4816   00198A  32E8               	rrcf	wreg,f,c
  4817   00198C  32E8               	rrcf	wreg,f,c
  4818   00198E  0B07               	andlw	7
  4819   001990  6E04               	movwf	??_gpio_pin_direction_initialize^0,c
  4820   001992  0E01               	movlw	1
  4821   001994  6E05               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  4822   001996  2A04               	incf	??_gpio_pin_direction_initialize^0,f,c
  4823   001998  EFD0  F00C         	goto	u3654
  4824   00199C                     u3655:
  4825   00199C  90D8               	bcf	status,0,c
  4826   00199E  3605               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  4827   0019A0                     u3654:
  4828   0019A0  2E04               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  4829   0019A2  EFCE  F00C         	goto	u3655
  4830   0019A6  5005               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  4831   0019A8  0AFF               	xorlw	255
  4832   0019AA  6E06               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  4833   0019AC  C002  FFD9         	movff	gpio_pin_direction_initialize@pin,fsr2l
  4834   0019B0  C003  FFDA         	movff	gpio_pin_direction_initialize@pin+1,fsr2h
  4835   0019B4  50DF               	movf	223,w,c
  4836   0019B6  0B07               	andlw	7
  4837   0019B8  6E07               	movwf	(??_gpio_pin_direction_initialize+3)^0,c
  4838   0019BA  5007               	movf	(??_gpio_pin_direction_initialize+3)^0,w,c
  4839   0019BC  0D02               	mullw	2
  4840   0019BE  0ED4               	movlw	low _tris_registers
  4841   0019C0  24F3               	addwf	243,w,c
  4842   0019C2  6ED9               	movwf	fsr2l,c
  4843   0019C4  0E00               	movlw	high _tris_registers
  4844   0019C6  20F4               	addwfc	prodh,w,c
  4845   0019C8  6EDA               	movwf	fsr2h,c
  4846   0019CA  CFDE F008          	movff	postinc2,??_gpio_pin_direction_initialize+4
  4847   0019CE  CFDD F009          	movff	postdec2,??_gpio_pin_direction_initialize+5
  4848   0019D2  C008  FFD9         	movff	??_gpio_pin_direction_initialize+4,fsr2l
  4849   0019D6  C009  FFDA         	movff	??_gpio_pin_direction_initialize+5,fsr2h
  4850   0019DA  5006               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  4851   0019DC  16DF               	andwf	indf2,f,c
  4852                           
  4853                           ;MCAL_layer/GPIO/hal_gpio.c: 35:                 break;
  4854   0019DE  EF40  F00D         	goto	l4861
  4855   0019E2                     l4855:
  4856                           
  4857                           ;MCAL_layer/GPIO/hal_gpio.c: 37:                 (*tris_registers[pin->port] |= ((uint8)
      +                          1 << pin->pin));
  4858   0019E2  C002  FFD9         	movff	gpio_pin_direction_initialize@pin,fsr2l
  4859   0019E6  C003  FFDA         	movff	gpio_pin_direction_initialize@pin+1,fsr2h
  4860   0019EA  30DF               	rrcf	223,w,c
  4861   0019EC  32E8               	rrcf	wreg,f,c
  4862   0019EE  32E8               	rrcf	wreg,f,c
  4863   0019F0  0B07               	andlw	7
  4864   0019F2  6E04               	movwf	??_gpio_pin_direction_initialize^0,c
  4865   0019F4  0E01               	movlw	1
  4866   0019F6  6E05               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  4867   0019F8  2A04               	incf	??_gpio_pin_direction_initialize^0,f,c
  4868   0019FA  EF01  F00D         	goto	u3664
  4869   0019FE                     u3665:
  4870   0019FE  90D8               	bcf	status,0,c
  4871   001A00  3605               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  4872   001A02                     u3664:
  4873   001A02  2E04               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  4874   001A04  EFFF  F00C         	goto	u3665
  4875   001A08  C002  FFD9         	movff	gpio_pin_direction_initialize@pin,fsr2l
  4876   001A0C  C003  FFDA         	movff	gpio_pin_direction_initialize@pin+1,fsr2h
  4877   001A10  50DF               	movf	223,w,c
  4878   001A12  0B07               	andlw	7
  4879   001A14  6E06               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  4880   001A16  5006               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  4881   001A18  0D02               	mullw	2
  4882   001A1A  0ED4               	movlw	low _tris_registers
  4883   001A1C  24F3               	addwf	243,w,c
  4884   001A1E  6ED9               	movwf	fsr2l,c
  4885   001A20  0E00               	movlw	high _tris_registers
  4886   001A22  20F4               	addwfc	prodh,w,c
  4887   001A24  6EDA               	movwf	fsr2h,c
  4888   001A26  CFDE F007          	movff	postinc2,??_gpio_pin_direction_initialize+3
  4889   001A2A  CFDD F008          	movff	postdec2,??_gpio_pin_direction_initialize+4
  4890   001A2E  C007  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
  4891   001A32  C008  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
  4892   001A36  5005               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  4893   001A38  12DF               	iorwf	indf2,f,c
  4894                           
  4895                           ;MCAL_layer/GPIO/hal_gpio.c: 38:                 break;
  4896   001A3A  EF40  F00D         	goto	l4861
  4897   001A3E                     l4859:
  4898   001A3E  C002  FFD9         	movff	gpio_pin_direction_initialize@pin,fsr2l
  4899   001A42  C003  FFDA         	movff	gpio_pin_direction_initialize@pin+1,fsr2h
  4900   001A46  BCDF               	btfsc	indf2,6,c
  4901   001A48  EF28  F00D         	goto	u3671
  4902   001A4C  EF2B  F00D         	goto	u3670
  4903   001A50                     u3671:
  4904   001A50  0E01               	movlw	1
  4905   001A52  EF2C  F00D         	goto	u3680
  4906   001A56                     u3670:
  4907   001A56  0E00               	movlw	0
  4908   001A58                     u3680:
  4909   001A58  6E04               	movwf	??_gpio_pin_direction_initialize^0,c
  4910   001A5A  6A05               	clrf	(??_gpio_pin_direction_initialize+1)^0,c
  4911                           
  4912                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4913                           ; Switch size 1, requested type "simple"
  4914                           ; Number of cases is 1, Range of values is 0 to 0
  4915                           ; switch strategies available:
  4916                           ; Name         Instructions Cycles
  4917                           ; simple_byte            4     3 (average)
  4918                           ;	Chosen strategy is simple_byte
  4919   001A5C  5005               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  4920   001A5E  0A00               	xorlw	0	; case 0
  4921   001A60  B4D8               	btfsc	status,2,c
  4922   001A62  EF35  F00D         	goto	l6897
  4923   001A66  EFBC  F00C         	goto	l4851
  4924   001A6A                     l6897:
  4925                           
  4926                           ; Switch size 1, requested type "simple"
  4927                           ; Number of cases is 2, Range of values is 0 to 1
  4928                           ; switch strategies available:
  4929                           ; Name         Instructions Cycles
  4930                           ; simple_byte            7     4 (average)
  4931                           ;	Chosen strategy is simple_byte
  4932   001A6A  5004               	movf	??_gpio_pin_direction_initialize^0,w,c
  4933   001A6C  0A00               	xorlw	0	; case 0
  4934   001A6E  B4D8               	btfsc	status,2,c
  4935   001A70  EFC0  F00C         	goto	l4853
  4936   001A74  0A01               	xorlw	1	; case 1
  4937   001A76  B4D8               	btfsc	status,2,c
  4938   001A78  EFF1  F00C         	goto	l4855
  4939   001A7C  EFBC  F00C         	goto	l4851
  4940   001A80                     l4861:
  4941                           
  4942                           ;MCAL_layer/GPIO/hal_gpio.c: 43:     return ret;
  4943   001A80  500A               	movf	gpio_pin_direction_initialize@ret^0,w,c
  4944   001A82  0012               	return		;funcret
  4945   001A84                     __end_of_gpio_pin_direction_initialize:
  4946                           	callstack 0
  4947                           
  4948 ;; *************** function _Mcal_initialize *****************
  4949 ;; Defined at:
  4950 ;;		line 17 in file "MCAL_layer/Mcal_Initialize.c"
  4951 ;; Parameters:    Size  Location     Type
  4952 ;;		None
  4953 ;; Auto vars:     Size  Location     Type
  4954 ;;  ret             1    0        unsigned char 
  4955 ;; Return value:  Size  Location     Type
  4956 ;;                  1    wreg      void 
  4957 ;; Registers used:
  4958 ;;		wreg, status,2
  4959 ;; Tracked objects:
  4960 ;;		On entry : 0/0
  4961 ;;		On exit  : 0/0
  4962 ;;		Unchanged: 0/0
  4963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4968 ;;Total ram usage:        0 bytes
  4969 ;; Hardware stack levels used: 1
  4970 ;; Hardware stack levels required when called: 2
  4971 ;; This function calls:
  4972 ;;		Nothing
  4973 ;; This function is called by:
  4974 ;;		_application_initialize
  4975 ;; This function uses a non-reentrant model
  4976 ;;
  4977                           
  4978                           	psect	text31
  4979   0029EA                     __ptext31:
  4980                           	callstack 0
  4981   0029EA                     _Mcal_initialize:
  4982                           	callstack 27
  4983   0029EA  0012               	return		;funcret
  4984   0029EC                     __end_of_Mcal_initialize:
  4985                           	callstack 0
  4986                           
  4987 ;; *************** function _PIR_sensor_read *****************
  4988 ;; Defined at:
  4989 ;;		line 23 in file "ECU_layer/Pir_sensor/Pir_sensor.c"
  4990 ;; Parameters:    Size  Location     Type
  4991 ;;  Pir_obj         2   11[COMRAM] PTR const struct .
  4992 ;;		 -> pir2(1), pir1(1), 
  4993 ;;  pir_state       2   13[COMRAM] PTR unsigned char 
  4994 ;;		 -> pir2_state(1), pir1_state(1), 
  4995 ;; Auto vars:     Size  Location     Type
  4996 ;;  log             1   16[COMRAM] enum E3137
  4997 ;;  ret             1   15[COMRAM] unsigned char 
  4998 ;; Return value:  Size  Location     Type
  4999 ;;                  1    wreg      unsigned char 
  5000 ;; Registers used:
  5001 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5002 ;; Tracked objects:
  5003 ;;		On entry : 0/0
  5004 ;;		On exit  : 0/0
  5005 ;;		Unchanged: 0/0
  5006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5007 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5008 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5010 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5011 ;;Total ram usage:        6 bytes
  5012 ;; Hardware stack levels used: 1
  5013 ;; Hardware stack levels required when called: 3
  5014 ;; This function calls:
  5015 ;;		_gpio_pin_read_logic
  5016 ;; This function is called by:
  5017 ;;		_main
  5018 ;; This function uses a non-reentrant model
  5019 ;;
  5020                           
  5021                           	psect	text32
  5022   00238E                     __ptext32:
  5023                           	callstack 0
  5024   00238E                     _PIR_sensor_read:
  5025                           	callstack 27
  5026   00238E                     
  5027                           ;ECU_layer/Pir_sensor/Pir_sensor.c: 26:     logic_t log = GPIO_LOW;
  5028   00238E  0E00               	movlw	0
  5029   002390  6E11               	movwf	PIR_sensor_read@log^0,c
  5030   002392                     
  5031                           ;ECU_layer/Pir_sensor/Pir_sensor.c: 27:     if((Pir_obj==((void*)0))||(pir_state==((void
      +                          *)0)))
  5032   002392  500C               	movf	PIR_sensor_read@Pir_obj^0,w,c
  5033   002394  100D               	iorwf	(PIR_sensor_read@Pir_obj+1)^0,w,c
  5034   002396  B4D8               	btfsc	status,2,c
  5035   002398  EFD0  F011         	goto	u4311
  5036   00239C  EFD2  F011         	goto	u4310
  5037   0023A0                     u4311:
  5038   0023A0  EFDB  F011         	goto	l5479
  5039   0023A4                     u4310:
  5040   0023A4  500E               	movf	PIR_sensor_read@pir_state^0,w,c
  5041   0023A6  100F               	iorwf	(PIR_sensor_read@pir_state+1)^0,w,c
  5042   0023A8  A4D8               	btfss	status,2,c
  5043   0023AA  EFD9  F011         	goto	u4321
  5044   0023AE  EFDB  F011         	goto	u4320
  5045   0023B2                     u4321:
  5046   0023B2  EFDF  F011         	goto	l5481
  5047   0023B6                     u4320:
  5048   0023B6                     l5479:
  5049                           
  5050                           ;ECU_layer/Pir_sensor/Pir_sensor.c: 28:     {;ECU_layer/Pir_sensor/Pir_sensor.c: 29:    
      +                               ret = (Std_ReturnType)0x00;
  5051   0023B6  0E00               	movlw	0
  5052   0023B8  6E10               	movwf	PIR_sensor_read@ret^0,c
  5053                           
  5054                           ;ECU_layer/Pir_sensor/Pir_sensor.c: 30:     }
  5055   0023BA  EF07  F012         	goto	l1355
  5056   0023BE                     l5481:
  5057                           
  5058                           ;ECU_layer/Pir_sensor/Pir_sensor.c: 32:     {;ECU_layer/Pir_sensor/Pir_sensor.c: 33:    
      +                               ret = gpio_pin_read_logic(&(Pir_obj->pin),&log);
  5059   0023BE  C00C  F002         	movff	PIR_sensor_read@Pir_obj,gpio_pin_read_logic@pin
  5060   0023C2  C00D  F003         	movff	PIR_sensor_read@Pir_obj+1,gpio_pin_read_logic@pin+1
  5061   0023C6  0E11               	movlw	low PIR_sensor_read@log
  5062   0023C8  6E04               	movwf	gpio_pin_read_logic@log^0,c
  5063   0023CA  0E00               	movlw	high PIR_sensor_read@log
  5064   0023CC  6E05               	movwf	(gpio_pin_read_logic@log+1)^0,c
  5065   0023CE  EC2F  F010         	call	_gpio_pin_read_logic	;wreg free
  5066   0023D2  6E10               	movwf	PIR_sensor_read@ret^0,c
  5067   0023D4                     
  5068                           ;ECU_layer/Pir_sensor/Pir_sensor.c: 34:         if(log == GPIO_HIGH)
  5069   0023D4  0411               	decf	PIR_sensor_read@log^0,w,c
  5070   0023D6  A4D8               	btfss	status,2,c
  5071   0023D8  EFF0  F011         	goto	u4331
  5072   0023DC  EFF2  F011         	goto	u4330
  5073   0023E0                     u4331:
  5074   0023E0  EFFA  F011         	goto	l5487
  5075   0023E4                     u4330:
  5076   0023E4                     
  5077                           ;ECU_layer/Pir_sensor/Pir_sensor.c: 35:         {;ECU_layer/Pir_sensor/Pir_sensor.c: 36:
      +                                       *pir_state = 1;
  5078   0023E4  C00E  FFD9         	movff	PIR_sensor_read@pir_state,fsr2l
  5079   0023E8  C00F  FFDA         	movff	PIR_sensor_read@pir_state+1,fsr2h
  5080   0023EC  0E01               	movlw	1
  5081   0023EE  6EDF               	movwf	indf2,c
  5082                           
  5083                           ;ECU_layer/Pir_sensor/Pir_sensor.c: 37:         }
  5084   0023F0  EF07  F012         	goto	l1355
  5085   0023F4                     l5487:
  5086   0023F4  5011               	movf	PIR_sensor_read@log^0,w,c
  5087   0023F6  A4D8               	btfss	status,2,c
  5088   0023F8  EF00  F012         	goto	u4341
  5089   0023FC  EF02  F012         	goto	u4340
  5090   002400                     u4341:
  5091   002400  EFDB  F011         	goto	l5479
  5092   002404                     u4340:
  5093   002404                     
  5094                           ;ECU_layer/Pir_sensor/Pir_sensor.c: 39:         {;ECU_layer/Pir_sensor/Pir_sensor.c: 40:
      +                                       *pir_state = 0;
  5095   002404  C00E  FFD9         	movff	PIR_sensor_read@pir_state,fsr2l
  5096   002408  C00F  FFDA         	movff	PIR_sensor_read@pir_state+1,fsr2h
  5097   00240C  6ADF               	clrf	indf2,c
  5098   00240E                     l1355:
  5099                           
  5100                           ;ECU_layer/Pir_sensor/Pir_sensor.c: 47:     return ret;
  5101   00240E  5010               	movf	PIR_sensor_read@ret^0,w,c
  5102   002410  0012               	return		;funcret
  5103   002412                     __end_of_PIR_sensor_read:
  5104                           	callstack 0
  5105                           
  5106 ;; *************** function _gpio_pin_read_logic *****************
  5107 ;; Defined at:
  5108 ;;		line 75 in file "MCAL_layer/GPIO/hal_gpio.c"
  5109 ;; Parameters:    Size  Location     Type
  5110 ;;  pin             2    1[COMRAM] PTR const struct .
  5111 ;;		 -> pir2(1), pir1(1), 
  5112 ;;  log             2    3[COMRAM] PTR enum E3137
  5113 ;;		 -> PIR_sensor_read@log(1), push_button_read@btn_l(1), keypad_get_value@log(1), 
  5114 ;; Auto vars:     Size  Location     Type
  5115 ;;  ret             1   10[COMRAM] unsigned char 
  5116 ;; Return value:  Size  Location     Type
  5117 ;;                  1    wreg      unsigned char 
  5118 ;; Registers used:
  5119 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5120 ;; Tracked objects:
  5121 ;;		On entry : 0/0
  5122 ;;		On exit  : 0/0
  5123 ;;		Unchanged: 0/0
  5124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5125 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5126 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5127 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5128 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5129 ;;Total ram usage:       10 bytes
  5130 ;; Hardware stack levels used: 1
  5131 ;; Hardware stack levels required when called: 2
  5132 ;; This function calls:
  5133 ;;		Nothing
  5134 ;; This function is called by:
  5135 ;;		_PIR_sensor_read
  5136 ;;		_keypad_get_value
  5137 ;;		_push_button_read
  5138 ;; This function uses a non-reentrant model
  5139 ;;
  5140                           
  5141                           	psect	text33
  5142   00205E                     __ptext33:
  5143                           	callstack 0
  5144   00205E                     _gpio_pin_read_logic:
  5145                           	callstack 27
  5146   00205E                     
  5147                           ;MCAL_layer/GPIO/hal_gpio.c: 75: Std_ReturnType gpio_pin_read_logic(const pin_config *pi
      +                          n,logic_t *log);MCAL_layer/GPIO/hal_gpio.c: 76: {;MCAL_layer/GPIO/hal_gpio.c: 77:     St
      +                          d_ReturnType ret = (Std_ReturnType)0x01;
  5148   00205E  0E01               	movlw	1
  5149   002060  6E0B               	movwf	gpio_pin_read_logic@ret^0,c
  5150   002062                     
  5151                           ;MCAL_layer/GPIO/hal_gpio.c: 78:     if((pin==((void*)0))||(pin->pin>=8)||(log==((void*)
      +                          0)))
  5152   002062  5002               	movf	gpio_pin_read_logic@pin^0,w,c
  5153   002064  1003               	iorwf	(gpio_pin_read_logic@pin+1)^0,w,c
  5154   002066  B4D8               	btfsc	status,2,c
  5155   002068  EF38  F010         	goto	u4111
  5156   00206C  EF3A  F010         	goto	u4110
  5157   002070                     u4111:
  5158   002070  EF54  F010         	goto	l5239
  5159   002074                     u4110:
  5160   002074  C002  FFD9         	movff	gpio_pin_read_logic@pin,fsr2l
  5161   002078  C003  FFDA         	movff	gpio_pin_read_logic@pin+1,fsr2h
  5162   00207C  30DF               	rrcf	223,w,c
  5163   00207E  32E8               	rrcf	wreg,f,c
  5164   002080  32E8               	rrcf	wreg,f,c
  5165   002082  0B07               	andlw	7
  5166   002084  6E06               	movwf	??_gpio_pin_read_logic^0,c
  5167   002086  0E08               	movlw	8
  5168   002088  6006               	cpfslt	??_gpio_pin_read_logic^0,c
  5169   00208A  EF49  F010         	goto	u4121
  5170   00208E  EF4B  F010         	goto	u4120
  5171   002092                     u4121:
  5172   002092  EF54  F010         	goto	l5239
  5173   002096                     u4120:
  5174   002096  5004               	movf	gpio_pin_read_logic@log^0,w,c
  5175   002098  1005               	iorwf	(gpio_pin_read_logic@log+1)^0,w,c
  5176   00209A  A4D8               	btfss	status,2,c
  5177   00209C  EF52  F010         	goto	u4131
  5178   0020A0  EF54  F010         	goto	u4130
  5179   0020A4                     u4131:
  5180   0020A4  EF58  F010         	goto	l5241
  5181   0020A8                     u4130:
  5182   0020A8                     l5239:
  5183                           
  5184                           ;MCAL_layer/GPIO/hal_gpio.c: 79:     {;MCAL_layer/GPIO/hal_gpio.c: 80:         ret = (St
      +                          d_ReturnType)0x00;
  5185   0020A8  0E00               	movlw	0
  5186   0020AA  6E0B               	movwf	gpio_pin_read_logic@ret^0,c
  5187                           
  5188                           ;MCAL_layer/GPIO/hal_gpio.c: 81:     }
  5189   0020AC  EF89  F010         	goto	l5243
  5190   0020B0                     l5241:
  5191                           
  5192                           ;MCAL_layer/GPIO/hal_gpio.c: 83:     {;MCAL_layer/GPIO/hal_gpio.c: 84:         *log = ((
      +                          *port_registers[pin->port] >> pin->pin) & (uint8)1);
  5193   0020B0  C002  FFD9         	movff	gpio_pin_read_logic@pin,fsr2l
  5194   0020B4  C003  FFDA         	movff	gpio_pin_read_logic@pin+1,fsr2h
  5195   0020B8  30DF               	rrcf	223,w,c
  5196   0020BA  32E8               	rrcf	wreg,f,c
  5197   0020BC  32E8               	rrcf	wreg,f,c
  5198   0020BE  0B07               	andlw	7
  5199   0020C0  6E06               	movwf	??_gpio_pin_read_logic^0,c
  5200   0020C2  C002  FFD9         	movff	gpio_pin_read_logic@pin,fsr2l
  5201   0020C6  C003  FFDA         	movff	gpio_pin_read_logic@pin+1,fsr2h
  5202   0020CA  50DF               	movf	223,w,c
  5203   0020CC  0B07               	andlw	7
  5204   0020CE  6E07               	movwf	(??_gpio_pin_read_logic+1)^0,c
  5205   0020D0  5007               	movf	(??_gpio_pin_read_logic+1)^0,w,c
  5206   0020D2  0D02               	mullw	2
  5207   0020D4  0ECA               	movlw	low _port_registers
  5208   0020D6  24F3               	addwf	243,w,c
  5209   0020D8  6ED9               	movwf	fsr2l,c
  5210   0020DA  0E00               	movlw	high _port_registers
  5211   0020DC  20F4               	addwfc	prodh,w,c
  5212   0020DE  6EDA               	movwf	fsr2h,c
  5213   0020E0  CFDE F008          	movff	postinc2,??_gpio_pin_read_logic+2
  5214   0020E4  CFDD F009          	movff	postdec2,??_gpio_pin_read_logic+3
  5215   0020E8  C008  FFD9         	movff	??_gpio_pin_read_logic+2,fsr2l
  5216   0020EC  C009  FFDA         	movff	??_gpio_pin_read_logic+3,fsr2h
  5217   0020F0  50DF               	movf	indf2,w,c
  5218   0020F2  6E0A               	movwf	(??_gpio_pin_read_logic+4)^0,c
  5219   0020F4  2A06               	incf	??_gpio_pin_read_logic^0,f,c
  5220   0020F6  EF7F  F010         	goto	u4144
  5221   0020FA                     u4145:
  5222   0020FA  90D8               	bcf	status,0,c
  5223   0020FC  320A               	rrcf	(??_gpio_pin_read_logic+4)^0,f,c
  5224   0020FE                     u4144:
  5225   0020FE  2E06               	decfsz	??_gpio_pin_read_logic^0,f,c
  5226   002100  EF7D  F010         	goto	u4145
  5227   002104  500A               	movf	(??_gpio_pin_read_logic+4)^0,w,c
  5228   002106  0B01               	andlw	1
  5229   002108  C004  FFD9         	movff	gpio_pin_read_logic@log,fsr2l
  5230   00210C  C005  FFDA         	movff	gpio_pin_read_logic@log+1,fsr2h
  5231   002110  6EDF               	movwf	indf2,c
  5232   002112                     l5243:
  5233                           
  5234                           ;MCAL_layer/GPIO/hal_gpio.c: 86:      return ret;
  5235   002112  500B               	movf	gpio_pin_read_logic@ret^0,w,c
  5236   002114  0012               	return		;funcret
  5237   002116                     __end_of_gpio_pin_read_logic:
  5238                           	callstack 0
  5239                           
  5240 ;; *************** function _Interrupt_manager *****************
  5241 ;; Defined at:
  5242 ;;		line 47 in file "MCAL_layer/Interrupt/mcal_Interrupt_manger.c"
  5243 ;; Parameters:    Size  Location     Type
  5244 ;;		None
  5245 ;; Auto vars:     Size  Location     Type
  5246 ;;		None
  5247 ;; Return value:  Size  Location     Type
  5248 ;;                  1    wreg      void 
  5249 ;; Registers used:
  5250 ;;		wreg, status,2, status,0, cstack
  5251 ;; Tracked objects:
  5252 ;;		On entry : 0/0
  5253 ;;		On exit  : 0/0
  5254 ;;		Unchanged: 0/0
  5255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5260 ;;Total ram usage:        0 bytes
  5261 ;; Hardware stack levels used: 1
  5262 ;; Hardware stack levels required when called: 1
  5263 ;; This function calls:
  5264 ;;		_ADC_ISR
  5265 ;;		_CCP1_ISR
  5266 ;;		_CCP2_ISR
  5267 ;;		_INT0_ISR
  5268 ;;		_INT1_ISR
  5269 ;;		_INT2_ISR
  5270 ;;		_RB4_ISR
  5271 ;;		_RB5_ISR
  5272 ;;		_RB6_ISR
  5273 ;;		_RB7_ISR
  5274 ;;		_TIMER0_ISR
  5275 ;;		_TIMER1_ISR
  5276 ;;		_TIMER2_ISR
  5277 ;;		_TIMER3_ISR
  5278 ;; This function is called by:
  5279 ;;		Interrupt level 2
  5280 ;; This function uses a non-reentrant model
  5281 ;;
  5282                           
  5283                           	psect	intcode
  5284   000008                     __pintcode:
  5285                           	callstack 0
  5286   000008                     _Interrupt_manager:
  5287                           	callstack 20
  5288                           
  5289                           ;incstack = 0
  5290   000008  827D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5291   00000A  ED13  F008         	call	int_func,f	;refresh shadow registers
  5292                           
  5293                           	psect	intcode_body
  5294   001026                     __pintcode_body:
  5295                           	callstack 20
  5296   001026                     int_func:
  5297                           	callstack 20
  5298   001026  0006               	pop		; remove dummy address from shadow register refresh
  5299   001028                     
  5300                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 50:     if((INTCONbits.INT0IE == 1)&&(INT
      +                          CONbits.INT0F == 1))
  5301   001028  A8F2               	btfss	242,4,c	;volatile
  5302   00102A  EF19  F008         	goto	i2u528_41
  5303   00102E  EF1B  F008         	goto	i2u528_40
  5304   001032                     i2u528_41:
  5305   001032  EF24  F008         	goto	i2l1029
  5306   001036                     i2u528_40:
  5307   001036  A2F2               	btfss	242,1,c	;volatile
  5308   001038  EF20  F008         	goto	i2u529_41
  5309   00103C  EF22  F008         	goto	i2u529_40
  5310   001040                     i2u529_41:
  5311   001040  EF24  F008         	goto	i2l1029
  5312   001044                     i2u529_40:
  5313   001044                     
  5314                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 51:     {;MCAL_layer/Interrupt/mcal_Inter
      +                          rupt_manger.c: 52:         INT0_ISR();
  5315   001044  ECEC  F014         	call	_INT0_ISR	;wreg free
  5316   001048                     i2l1029:
  5317                           
  5318                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 56:     if((INTCON3bits.INT1IE == 1)&&(IN
      +                          TCON3bits.INT1F == 1))
  5319   001048  A6F0               	btfss	240,3,c	;volatile
  5320   00104A  EF29  F008         	goto	i2u530_41
  5321   00104E  EF2B  F008         	goto	i2u530_40
  5322   001052                     i2u530_41:
  5323   001052  EF34  F008         	goto	i2l1031
  5324   001056                     i2u530_40:
  5325   001056  A0F0               	btfss	240,0,c	;volatile
  5326   001058  EF30  F008         	goto	i2u531_41
  5327   00105C  EF32  F008         	goto	i2u531_40
  5328   001060                     i2u531_41:
  5329   001060  EF34  F008         	goto	i2l1031
  5330   001064                     i2u531_40:
  5331   001064                     
  5332                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 57:     {;MCAL_layer/Interrupt/mcal_Inter
      +                          rupt_manger.c: 58:         INT1_ISR();
  5333   001064  ECEA  F014         	call	_INT1_ISR	;wreg free
  5334   001068                     i2l1031:
  5335                           
  5336                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 62:     if((INTCON3bits.INT2IE == 1)&&(IN
      +                          TCON3bits.INT2IF == 1))
  5337   001068  A8F0               	btfss	240,4,c	;volatile
  5338   00106A  EF39  F008         	goto	i2u532_41
  5339   00106E  EF3B  F008         	goto	i2u532_40
  5340   001072                     i2u532_41:
  5341   001072  EF44  F008         	goto	i2l1033
  5342   001076                     i2u532_40:
  5343   001076  A2F0               	btfss	240,1,c	;volatile
  5344   001078  EF40  F008         	goto	i2u533_41
  5345   00107C  EF42  F008         	goto	i2u533_40
  5346   001080                     i2u533_41:
  5347   001080  EF44  F008         	goto	i2l1033
  5348   001084                     i2u533_40:
  5349   001084                     
  5350                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 63:     {;MCAL_layer/Interrupt/mcal_Inter
      +                          rupt_manger.c: 64:         INT2_ISR();
  5351   001084  ECE8  F014         	call	_INT2_ISR	;wreg free
  5352   001088                     i2l1033:
  5353                           
  5354                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 71:     if((INTCONbits.RBIE == 1)&&(INTCO
      +                          Nbits.RBIF == 1)&&(PORTBbits.RB4 == GPIO_HIGH)&&(RBx_flag[0] == 0))
  5355   001088  A6F2               	btfss	242,3,c	;volatile
  5356   00108A  EF49  F008         	goto	i2u534_41
  5357   00108E  EF4B  F008         	goto	i2u534_40
  5358   001092                     i2u534_41:
  5359   001092  EF66  F008         	goto	i2l1035
  5360   001096                     i2u534_40:
  5361   001096  A0F2               	btfss	242,0,c	;volatile
  5362   001098  EF50  F008         	goto	i2u535_41
  5363   00109C  EF52  F008         	goto	i2u535_40
  5364   0010A0                     i2u535_41:
  5365   0010A0  EF66  F008         	goto	i2l1035
  5366   0010A4                     i2u535_40:
  5367   0010A4  A881               	btfss	129,4,c	;volatile
  5368   0010A6  EF57  F008         	goto	i2u536_41
  5369   0010AA  EF59  F008         	goto	i2u536_40
  5370   0010AE                     i2u536_41:
  5371   0010AE  EF66  F008         	goto	i2l1035
  5372   0010B2                     i2u536_40:
  5373   0010B2  505A               	movf	_RBx_flag^0,w,c	;volatile
  5374   0010B4  A4D8               	btfss	status,2,c
  5375   0010B6  EF5F  F008         	goto	i2u537_41
  5376   0010BA  EF61  F008         	goto	i2u537_40
  5377   0010BE                     i2u537_41:
  5378   0010BE  EF66  F008         	goto	i2l1035
  5379   0010C2                     i2u537_40:
  5380   0010C2                     
  5381                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 72:     {;MCAL_layer/Interrupt/mcal_Inter
      +                          rupt_manger.c: 73:         RBx_flag[0] = 1;
  5382   0010C2  0E01               	movlw	1
  5383   0010C4  6E5A               	movwf	_RBx_flag^0,c	;volatile
  5384   0010C6                     
  5385                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 74:         RB4_ISR(0);
  5386   0010C6  0E00               	movlw	0
  5387   0010C8  ECBC  F014         	call	_RB4_ISR
  5388   0010CC                     i2l1035:
  5389                           
  5390                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 78:     if((INTCONbits.RBIE == 1)&&(INTCO
      +                          Nbits.RBIF == 1)&&(PORTBbits.RB4 == GPIO_LOW)&&(RBx_flag[0] == 1))
  5391   0010CC  A6F2               	btfss	242,3,c	;volatile
  5392   0010CE  EF6B  F008         	goto	i2u538_41
  5393   0010D2  EF6D  F008         	goto	i2u538_40
  5394   0010D6                     i2u538_41:
  5395   0010D6  EF88  F008         	goto	i2l1037
  5396   0010DA                     i2u538_40:
  5397   0010DA  A0F2               	btfss	242,0,c	;volatile
  5398   0010DC  EF72  F008         	goto	i2u539_41
  5399   0010E0  EF74  F008         	goto	i2u539_40
  5400   0010E4                     i2u539_41:
  5401   0010E4  EF88  F008         	goto	i2l1037
  5402   0010E8                     i2u539_40:
  5403   0010E8  B881               	btfsc	129,4,c	;volatile
  5404   0010EA  EF79  F008         	goto	i2u540_41
  5405   0010EE  EF7B  F008         	goto	i2u540_40
  5406   0010F2                     i2u540_41:
  5407   0010F2  EF88  F008         	goto	i2l1037
  5408   0010F6                     i2u540_40:
  5409   0010F6  045A               	decf	_RBx_flag^0,w,c	;volatile
  5410   0010F8  A4D8               	btfss	status,2,c
  5411   0010FA  EF81  F008         	goto	i2u541_41
  5412   0010FE  EF83  F008         	goto	i2u541_40
  5413   001102                     i2u541_41:
  5414   001102  EF88  F008         	goto	i2l1037
  5415   001106                     i2u541_40:
  5416   001106                     
  5417                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 79:     {;MCAL_layer/Interrupt/mcal_Inter
      +                          rupt_manger.c: 80:         RBx_flag[0] = 0;
  5418   001106  0E00               	movlw	0
  5419   001108  6E5A               	movwf	_RBx_flag^0,c	;volatile
  5420   00110A                     
  5421                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 81:         RB4_ISR(1);
  5422   00110A  0E01               	movlw	1
  5423   00110C  ECBC  F014         	call	_RB4_ISR
  5424   001110                     i2l1037:
  5425                           
  5426                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 85:     if((INTCONbits.RBIE == 1)&&(INTCO
      +                          Nbits.RBIF == 1)&&(PORTBbits.RB5 == GPIO_HIGH)&&(RBx_flag[1] == 0))
  5427   001110  A6F2               	btfss	242,3,c	;volatile
  5428   001112  EF8D  F008         	goto	i2u542_41
  5429   001116  EF8F  F008         	goto	i2u542_40
  5430   00111A                     i2u542_41:
  5431   00111A  EFAA  F008         	goto	i2l1039
  5432   00111E                     i2u542_40:
  5433   00111E  A0F2               	btfss	242,0,c	;volatile
  5434   001120  EF94  F008         	goto	i2u543_41
  5435   001124  EF96  F008         	goto	i2u543_40
  5436   001128                     i2u543_41:
  5437   001128  EFAA  F008         	goto	i2l1039
  5438   00112C                     i2u543_40:
  5439   00112C  AA81               	btfss	129,5,c	;volatile
  5440   00112E  EF9B  F008         	goto	i2u544_41
  5441   001132  EF9D  F008         	goto	i2u544_40
  5442   001136                     i2u544_41:
  5443   001136  EFAA  F008         	goto	i2l1039
  5444   00113A                     i2u544_40:
  5445   00113A  505B               	movf	(_RBx_flag+1)^0,w,c	;volatile
  5446   00113C  A4D8               	btfss	status,2,c
  5447   00113E  EFA3  F008         	goto	i2u545_41
  5448   001142  EFA5  F008         	goto	i2u545_40
  5449   001146                     i2u545_41:
  5450   001146  EFAA  F008         	goto	i2l1039
  5451   00114A                     i2u545_40:
  5452   00114A                     
  5453                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 86:     {;MCAL_layer/Interrupt/mcal_Inter
      +                          rupt_manger.c: 87:         RBx_flag[1] = 1;
  5454   00114A  0E01               	movlw	1
  5455   00114C  6E5B               	movwf	(_RBx_flag+1)^0,c	;volatile
  5456   00114E                     
  5457                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 88:         RB5_ISR(0);
  5458   00114E  0E00               	movlw	0
  5459   001150  ECAF  F014         	call	_RB5_ISR
  5460   001154                     i2l1039:
  5461                           
  5462                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 92:     if((INTCONbits.RBIE == 1)&&(INTCO
      +                          Nbits.RBIF == 1)&&(PORTBbits.RB5 == GPIO_LOW)&&(RBx_flag[1] == 1))
  5463   001154  A6F2               	btfss	242,3,c	;volatile
  5464   001156  EFAF  F008         	goto	i2u546_41
  5465   00115A  EFB1  F008         	goto	i2u546_40
  5466   00115E                     i2u546_41:
  5467   00115E  EFCC  F008         	goto	i2l1041
  5468   001162                     i2u546_40:
  5469   001162  A0F2               	btfss	242,0,c	;volatile
  5470   001164  EFB6  F008         	goto	i2u547_41
  5471   001168  EFB8  F008         	goto	i2u547_40
  5472   00116C                     i2u547_41:
  5473   00116C  EFCC  F008         	goto	i2l1041
  5474   001170                     i2u547_40:
  5475   001170  BA81               	btfsc	129,5,c	;volatile
  5476   001172  EFBD  F008         	goto	i2u548_41
  5477   001176  EFBF  F008         	goto	i2u548_40
  5478   00117A                     i2u548_41:
  5479   00117A  EFCC  F008         	goto	i2l1041
  5480   00117E                     i2u548_40:
  5481   00117E  045B               	decf	(_RBx_flag+1)^0,w,c	;volatile
  5482   001180  A4D8               	btfss	status,2,c
  5483   001182  EFC5  F008         	goto	i2u549_41
  5484   001186  EFC7  F008         	goto	i2u549_40
  5485   00118A                     i2u549_41:
  5486   00118A  EFCC  F008         	goto	i2l1041
  5487   00118E                     i2u549_40:
  5488   00118E                     
  5489                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 93:     {;MCAL_layer/Interrupt/mcal_Inter
      +                          rupt_manger.c: 94:         RBx_flag[1] = 0;
  5490   00118E  0E00               	movlw	0
  5491   001190  6E5B               	movwf	(_RBx_flag+1)^0,c	;volatile
  5492   001192                     
  5493                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 95:         RB5_ISR(1);
  5494   001192  0E01               	movlw	1
  5495   001194  ECAF  F014         	call	_RB5_ISR
  5496   001198                     i2l1041:
  5497                           
  5498                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 99:     if((INTCONbits.RBIE == 1)&&(INTCO
      +                          Nbits.RBIF == 1)&&(PORTBbits.RB6 == GPIO_HIGH)&&(RBx_flag[2] == 0))
  5499   001198  A6F2               	btfss	242,3,c	;volatile
  5500   00119A  EFD1  F008         	goto	i2u550_41
  5501   00119E  EFD3  F008         	goto	i2u550_40
  5502   0011A2                     i2u550_41:
  5503   0011A2  EFEE  F008         	goto	i2l1043
  5504   0011A6                     i2u550_40:
  5505   0011A6  A0F2               	btfss	242,0,c	;volatile
  5506   0011A8  EFD8  F008         	goto	i2u551_41
  5507   0011AC  EFDA  F008         	goto	i2u551_40
  5508   0011B0                     i2u551_41:
  5509   0011B0  EFEE  F008         	goto	i2l1043
  5510   0011B4                     i2u551_40:
  5511   0011B4  AC81               	btfss	129,6,c	;volatile
  5512   0011B6  EFDF  F008         	goto	i2u552_41
  5513   0011BA  EFE1  F008         	goto	i2u552_40
  5514   0011BE                     i2u552_41:
  5515   0011BE  EFEE  F008         	goto	i2l1043
  5516   0011C2                     i2u552_40:
  5517   0011C2  505C               	movf	(_RBx_flag+2)^0,w,c	;volatile
  5518   0011C4  A4D8               	btfss	status,2,c
  5519   0011C6  EFE7  F008         	goto	i2u553_41
  5520   0011CA  EFE9  F008         	goto	i2u553_40
  5521   0011CE                     i2u553_41:
  5522   0011CE  EFEE  F008         	goto	i2l1043
  5523   0011D2                     i2u553_40:
  5524   0011D2                     
  5525                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 100:     {;MCAL_layer/Interrupt/mcal_Inte
      +                          rrupt_manger.c: 101:         RBx_flag[2] = 1;
  5526   0011D2  0E01               	movlw	1
  5527   0011D4  6E5C               	movwf	(_RBx_flag+2)^0,c	;volatile
  5528   0011D6                     
  5529                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 102:         RB6_ISR(0);
  5530   0011D6  0E00               	movlw	0
  5531   0011D8  ECA2  F014         	call	_RB6_ISR
  5532   0011DC                     i2l1043:
  5533                           
  5534                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 106:     if((INTCONbits.RBIE == 1)&&(INTC
      +                          ONbits.RBIF == 1)&&(PORTBbits.RB6 == GPIO_LOW)&&(RBx_flag[2] == 1))
  5535   0011DC  A6F2               	btfss	242,3,c	;volatile
  5536   0011DE  EFF3  F008         	goto	i2u554_41
  5537   0011E2  EFF5  F008         	goto	i2u554_40
  5538   0011E6                     i2u554_41:
  5539   0011E6  EF10  F009         	goto	i2l1045
  5540   0011EA                     i2u554_40:
  5541   0011EA  A0F2               	btfss	242,0,c	;volatile
  5542   0011EC  EFFA  F008         	goto	i2u555_41
  5543   0011F0  EFFC  F008         	goto	i2u555_40
  5544   0011F4                     i2u555_41:
  5545   0011F4  EF10  F009         	goto	i2l1045
  5546   0011F8                     i2u555_40:
  5547   0011F8  BC81               	btfsc	129,6,c	;volatile
  5548   0011FA  EF01  F009         	goto	i2u556_41
  5549   0011FE  EF03  F009         	goto	i2u556_40
  5550   001202                     i2u556_41:
  5551   001202  EF10  F009         	goto	i2l1045
  5552   001206                     i2u556_40:
  5553   001206  045C               	decf	(_RBx_flag+2)^0,w,c	;volatile
  5554   001208  A4D8               	btfss	status,2,c
  5555   00120A  EF09  F009         	goto	i2u557_41
  5556   00120E  EF0B  F009         	goto	i2u557_40
  5557   001212                     i2u557_41:
  5558   001212  EF10  F009         	goto	i2l1045
  5559   001216                     i2u557_40:
  5560   001216                     
  5561                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 107:     {;MCAL_layer/Interrupt/mcal_Inte
      +                          rrupt_manger.c: 108:         RBx_flag[2] = 0;
  5562   001216  0E00               	movlw	0
  5563   001218  6E5C               	movwf	(_RBx_flag+2)^0,c	;volatile
  5564   00121A                     
  5565                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 109:         RB6_ISR(1);
  5566   00121A  0E01               	movlw	1
  5567   00121C  ECA2  F014         	call	_RB6_ISR
  5568   001220                     i2l1045:
  5569                           
  5570                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 113:     if((INTCONbits.RBIE == 1)&&(INTC
      +                          ONbits.RBIF == 1)&&(PORTBbits.RB7 == GPIO_HIGH)&&(RBx_flag[3] == 0))
  5571   001220  A6F2               	btfss	242,3,c	;volatile
  5572   001222  EF15  F009         	goto	i2u558_41
  5573   001226  EF17  F009         	goto	i2u558_40
  5574   00122A                     i2u558_41:
  5575   00122A  EF32  F009         	goto	i2l1047
  5576   00122E                     i2u558_40:
  5577   00122E  A0F2               	btfss	242,0,c	;volatile
  5578   001230  EF1C  F009         	goto	i2u559_41
  5579   001234  EF1E  F009         	goto	i2u559_40
  5580   001238                     i2u559_41:
  5581   001238  EF32  F009         	goto	i2l1047
  5582   00123C                     i2u559_40:
  5583   00123C  AE81               	btfss	129,7,c	;volatile
  5584   00123E  EF23  F009         	goto	i2u560_41
  5585   001242  EF25  F009         	goto	i2u560_40
  5586   001246                     i2u560_41:
  5587   001246  EF32  F009         	goto	i2l1047
  5588   00124A                     i2u560_40:
  5589   00124A  505D               	movf	(_RBx_flag+3)^0,w,c	;volatile
  5590   00124C  A4D8               	btfss	status,2,c
  5591   00124E  EF2B  F009         	goto	i2u561_41
  5592   001252  EF2D  F009         	goto	i2u561_40
  5593   001256                     i2u561_41:
  5594   001256  EF32  F009         	goto	i2l1047
  5595   00125A                     i2u561_40:
  5596   00125A                     
  5597                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 114:     {;MCAL_layer/Interrupt/mcal_Inte
      +                          rrupt_manger.c: 115:         RBx_flag[3] = 1;
  5598   00125A  0E01               	movlw	1
  5599   00125C  6E5D               	movwf	(_RBx_flag+3)^0,c	;volatile
  5600   00125E                     
  5601                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 116:         RB7_ISR(0);
  5602   00125E  0E00               	movlw	0
  5603   001260  EC95  F014         	call	_RB7_ISR
  5604   001264                     i2l1047:
  5605                           
  5606                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 120:     if((INTCONbits.RBIE == 1)&&(INTC
      +                          ONbits.RBIF == 1)&&(PORTBbits.RB7 == GPIO_LOW)&&(RBx_flag[3] == 1))
  5607   001264  A6F2               	btfss	242,3,c	;volatile
  5608   001266  EF37  F009         	goto	i2u562_41
  5609   00126A  EF39  F009         	goto	i2u562_40
  5610   00126E                     i2u562_41:
  5611   00126E  EF54  F009         	goto	i2l1049
  5612   001272                     i2u562_40:
  5613   001272  A0F2               	btfss	242,0,c	;volatile
  5614   001274  EF3E  F009         	goto	i2u563_41
  5615   001278  EF40  F009         	goto	i2u563_40
  5616   00127C                     i2u563_41:
  5617   00127C  EF54  F009         	goto	i2l1049
  5618   001280                     i2u563_40:
  5619   001280  BE81               	btfsc	129,7,c	;volatile
  5620   001282  EF45  F009         	goto	i2u564_41
  5621   001286  EF47  F009         	goto	i2u564_40
  5622   00128A                     i2u564_41:
  5623   00128A  EF54  F009         	goto	i2l1049
  5624   00128E                     i2u564_40:
  5625   00128E  045D               	decf	(_RBx_flag+3)^0,w,c	;volatile
  5626   001290  A4D8               	btfss	status,2,c
  5627   001292  EF4D  F009         	goto	i2u565_41
  5628   001296  EF4F  F009         	goto	i2u565_40
  5629   00129A                     i2u565_41:
  5630   00129A  EF54  F009         	goto	i2l1049
  5631   00129E                     i2u565_40:
  5632   00129E                     
  5633                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 121:     {;MCAL_layer/Interrupt/mcal_Inte
      +                          rrupt_manger.c: 122:         RBx_flag[3] = 0;
  5634   00129E  0E00               	movlw	0
  5635   0012A0  6E5D               	movwf	(_RBx_flag+3)^0,c	;volatile
  5636   0012A2                     
  5637                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 123:         RB7_ISR(1);
  5638   0012A2  0E01               	movlw	1
  5639   0012A4  EC95  F014         	call	_RB7_ISR
  5640   0012A8                     i2l1049:
  5641                           
  5642                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 131:     if((PIE1bits.ADIE == 1)&&(PIR1bi
      +                          ts.ADIF == 1))
  5643   0012A8  AC9D               	btfss	157,6,c	;volatile
  5644   0012AA  EF59  F009         	goto	i2u566_41
  5645   0012AE  EF5B  F009         	goto	i2u566_40
  5646   0012B2                     i2u566_41:
  5647   0012B2  EF64  F009         	goto	i2l1051
  5648   0012B6                     i2u566_40:
  5649   0012B6  AC9E               	btfss	158,6,c	;volatile
  5650   0012B8  EF60  F009         	goto	i2u567_41
  5651   0012BC  EF62  F009         	goto	i2u567_40
  5652   0012C0                     i2u567_41:
  5653   0012C0  EF64  F009         	goto	i2l1051
  5654   0012C4                     i2u567_40:
  5655   0012C4                     
  5656                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 132:     {;MCAL_layer/Interrupt/mcal_Inte
      +                          rrupt_manger.c: 133:         ADC_ISR();
  5657   0012C4  ECF2  F014         	call	_ADC_ISR	;wreg free
  5658   0012C8                     i2l1051:
  5659                           
  5660                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 140:     if((INTCONbits.TMR0IE == 1)&&(IN
      +                          TCONbits.TMR0IF == 1))
  5661   0012C8  AAF2               	btfss	242,5,c	;volatile
  5662   0012CA  EF69  F009         	goto	i2u568_41
  5663   0012CE  EF6B  F009         	goto	i2u568_40
  5664   0012D2                     i2u568_41:
  5665   0012D2  EF74  F009         	goto	i2l1053
  5666   0012D6                     i2u568_40:
  5667   0012D6  A4F2               	btfss	242,2,c	;volatile
  5668   0012D8  EF70  F009         	goto	i2u569_41
  5669   0012DC  EF72  F009         	goto	i2u569_40
  5670   0012E0                     i2u569_41:
  5671   0012E0  EF74  F009         	goto	i2l1053
  5672   0012E4                     i2u569_40:
  5673   0012E4                     
  5674                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 141:     {;MCAL_layer/Interrupt/mcal_Inte
      +                          rrupt_manger.c: 142:         TIMER0_ISR();
  5675   0012E4  ECD5  F014         	call	_TIMER0_ISR	;wreg free
  5676   0012E8                     i2l1053:
  5677                           
  5678                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 149:     if((PIE1bits.TMR1IE == 1)&&(PIR1
      +                          bits.TMR1IF == 1))
  5679   0012E8  A09D               	btfss	157,0,c	;volatile
  5680   0012EA  EF79  F009         	goto	i2u570_41
  5681   0012EE  EF7B  F009         	goto	i2u570_40
  5682   0012F2                     i2u570_41:
  5683   0012F2  EF84  F009         	goto	i2l1055
  5684   0012F6                     i2u570_40:
  5685   0012F6  A09E               	btfss	158,0,c	;volatile
  5686   0012F8  EF80  F009         	goto	i2u571_41
  5687   0012FC  EF82  F009         	goto	i2u571_40
  5688   001300                     i2u571_41:
  5689   001300  EF84  F009         	goto	i2l1055
  5690   001304                     i2u571_40:
  5691   001304                     
  5692                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 150:     {;MCAL_layer/Interrupt/mcal_Inte
      +                          rrupt_manger.c: 151:         TIMER1_ISR();
  5693   001304  ECCF  F014         	call	_TIMER1_ISR	;wreg free
  5694   001308                     i2l1055:
  5695                           
  5696                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 158:     if((PIE1bits.TMR2IE == 1)&&(PIR1
      +                          bits.TMR2IF == 1))
  5697   001308  A29D               	btfss	157,1,c	;volatile
  5698   00130A  EF89  F009         	goto	i2u572_41
  5699   00130E  EF8B  F009         	goto	i2u572_40
  5700   001312                     i2u572_41:
  5701   001312  EF94  F009         	goto	i2l1057
  5702   001316                     i2u572_40:
  5703   001316  A29E               	btfss	158,1,c	;volatile
  5704   001318  EF90  F009         	goto	i2u573_41
  5705   00131C  EF92  F009         	goto	i2u573_40
  5706   001320                     i2u573_41:
  5707   001320  EF94  F009         	goto	i2l1057
  5708   001324                     i2u573_40:
  5709   001324                     
  5710                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 159:     {;MCAL_layer/Interrupt/mcal_Inte
      +                          rrupt_manger.c: 160:         TIMER2_ISR();
  5711   001324  ECE0  F014         	call	_TIMER2_ISR	;wreg free
  5712   001328                     i2l1057:
  5713                           
  5714                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 167:     if((PIE2bits.TMR3IE == 1)&&(PIR2
      +                          bits.TMR3IF == 1))
  5715   001328  A2A0               	btfss	160,1,c	;volatile
  5716   00132A  EF99  F009         	goto	i2u574_41
  5717   00132E  EF9B  F009         	goto	i2u574_40
  5718   001332                     i2u574_41:
  5719   001332  EFA4  F009         	goto	i2l1059
  5720   001336                     i2u574_40:
  5721   001336  A2A1               	btfss	161,1,c	;volatile
  5722   001338  EFA0  F009         	goto	i2u575_41
  5723   00133C  EFA2  F009         	goto	i2u575_40
  5724   001340                     i2u575_41:
  5725   001340  EFA4  F009         	goto	i2l1059
  5726   001344                     i2u575_40:
  5727   001344                     
  5728                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 168:     {;MCAL_layer/Interrupt/mcal_Inte
      +                          rrupt_manger.c: 169:         TIMER3_ISR();
  5729   001344  ECC9  F014         	call	_TIMER3_ISR	;wreg free
  5730   001348                     i2l1059:
  5731                           
  5732                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 175:     if((PIE1bits.CCP1IE == 1)&&(PIR1
      +                          bits.CCP1IF == 1))
  5733   001348  A49D               	btfss	157,2,c	;volatile
  5734   00134A  EFA9  F009         	goto	i2u576_41
  5735   00134E  EFAB  F009         	goto	i2u576_40
  5736   001352                     i2u576_41:
  5737   001352  EFB4  F009         	goto	i2l1061
  5738   001356                     i2u576_40:
  5739   001356  A49E               	btfss	158,2,c	;volatile
  5740   001358  EFB0  F009         	goto	i2u577_41
  5741   00135C  EFB2  F009         	goto	i2u577_40
  5742   001360                     i2u577_41:
  5743   001360  EFB4  F009         	goto	i2l1061
  5744   001364                     i2u577_40:
  5745   001364                     
  5746                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 176:     {;MCAL_layer/Interrupt/mcal_Inte
      +                          rrupt_manger.c: 177:         CCP1_ISR();
  5747   001364  ECF0  F014         	call	_CCP1_ISR	;wreg free
  5748   001368                     i2l1061:
  5749                           
  5750                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 184:     if((PIE2bits.CCP2IE == 1)&&(PIR2
      +                          bits.CCP2IF == 1))
  5751   001368  A0A0               	btfss	160,0,c	;volatile
  5752   00136A  EFB9  F009         	goto	i2u578_41
  5753   00136E  EFBB  F009         	goto	i2u578_40
  5754   001372                     i2u578_41:
  5755   001372  EFC4  F009         	goto	i2l1064
  5756   001376                     i2u578_40:
  5757   001376  A0A1               	btfss	161,0,c	;volatile
  5758   001378  EFC0  F009         	goto	i2u579_41
  5759   00137C  EFC2  F009         	goto	i2u579_40
  5760   001380                     i2u579_41:
  5761   001380  EFC4  F009         	goto	i2l1064
  5762   001384                     i2u579_40:
  5763   001384                     
  5764                           ;MCAL_layer/Interrupt/mcal_Interrupt_manger.c: 185:     {;MCAL_layer/Interrupt/mcal_Inte
      +                          rrupt_manger.c: 186:         CCP2_ISR();
  5765   001384  ECEE  F014         	call	_CCP2_ISR	;wreg free
  5766   001388                     i2l1064:
  5767   001388  927D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5768   00138A  0011               	retfie		f
  5769   00138C                     __end_of_Interrupt_manager:
  5770                           	callstack 0
  5771                           
  5772 ;; *************** function _TIMER3_ISR *****************
  5773 ;; Defined at:
  5774 ;;		line 115 in file "MCAL_layer/Timer3/Timer3.c"
  5775 ;; Parameters:    Size  Location     Type
  5776 ;;		None
  5777 ;; Auto vars:     Size  Location     Type
  5778 ;;		None
  5779 ;; Return value:  Size  Location     Type
  5780 ;;                  1    wreg      void 
  5781 ;; Registers used:
  5782 ;;		wreg, status,2
  5783 ;; Tracked objects:
  5784 ;;		On entry : 0/0
  5785 ;;		On exit  : 0/0
  5786 ;;		Unchanged: 0/0
  5787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5792 ;;Total ram usage:        0 bytes
  5793 ;; Hardware stack levels used: 1
  5794 ;; This function calls:
  5795 ;;		Nothing
  5796 ;; This function is called by:
  5797 ;;		_Interrupt_manager
  5798 ;; This function uses a non-reentrant model
  5799 ;;
  5800                           
  5801                           	psect	text35
  5802   002992                     __ptext35:
  5803                           	callstack 0
  5804   002992                     _TIMER3_ISR:
  5805                           	callstack 20
  5806   002992                     
  5807                           ;MCAL_layer/Timer3/Timer3.c: 117:     (PIR2bits.TMR3IF = 0);
  5808   002992  92A1               	bcf	161,1,c	;volatile
  5809   002994                     
  5810                           ;MCAL_layer/Timer3/Timer3.c: 118:     TMR3H = (uint8)(timer3_preload>>8);
  5811   002994  5061               	movf	(_timer3_preload+1)^0,w,c
  5812   002996  6EB3               	movwf	179,c	;volatile
  5813   002998                     
  5814                           ;MCAL_layer/Timer3/Timer3.c: 119:     TMR3L = (uint8)(timer3_preload);
  5815   002998  C060  FFB2         	movff	_timer3_preload,4018	;volatile
  5816   00299C  0012               	return		;funcret
  5817   00299E                     __end_of_TIMER3_ISR:
  5818                           	callstack 0
  5819                           
  5820 ;; *************** function _TIMER2_ISR *****************
  5821 ;; Defined at:
  5822 ;;		line 103 in file "MCAL_layer/Timer2/Timer2.c"
  5823 ;; Parameters:    Size  Location     Type
  5824 ;;		None
  5825 ;; Auto vars:     Size  Location     Type
  5826 ;;		None
  5827 ;; Return value:  Size  Location     Type
  5828 ;;                  1    wreg      void 
  5829 ;; Registers used:
  5830 ;;		None
  5831 ;; Tracked objects:
  5832 ;;		On entry : 0/0
  5833 ;;		On exit  : 0/0
  5834 ;;		Unchanged: 0/0
  5835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5840 ;;Total ram usage:        0 bytes
  5841 ;; Hardware stack levels used: 1
  5842 ;; This function calls:
  5843 ;;		Nothing
  5844 ;; This function is called by:
  5845 ;;		_Interrupt_manager
  5846 ;; This function uses a non-reentrant model
  5847 ;;
  5848                           
  5849                           	psect	text36
  5850   0029C0                     __ptext36:
  5851                           	callstack 0
  5852   0029C0                     _TIMER2_ISR:
  5853                           	callstack 20
  5854   0029C0                     
  5855                           ;MCAL_layer/Timer2/Timer2.c: 105:     (PIR1bits.TMR2IF = 0);
  5856   0029C0  929E               	bcf	158,1,c	;volatile
  5857                           
  5858                           ;MCAL_layer/Timer2/Timer2.c: 106:     TMR2 = timer2_preload;
  5859   0029C2  C06B  FFCC         	movff	_timer2_preload,4044	;volatile
  5860   0029C6  0012               	return		;funcret
  5861   0029C8                     __end_of_TIMER2_ISR:
  5862                           	callstack 0
  5863                           
  5864 ;; *************** function _TIMER1_ISR *****************
  5865 ;; Defined at:
  5866 ;;		line 116 in file "MCAL_layer/Timer1/Timer1.c"
  5867 ;; Parameters:    Size  Location     Type
  5868 ;;		None
  5869 ;; Auto vars:     Size  Location     Type
  5870 ;;		None
  5871 ;; Return value:  Size  Location     Type
  5872 ;;                  1    wreg      void 
  5873 ;; Registers used:
  5874 ;;		wreg, status,2
  5875 ;; Tracked objects:
  5876 ;;		On entry : 0/0
  5877 ;;		On exit  : 0/0
  5878 ;;		Unchanged: 0/0
  5879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5884 ;;Total ram usage:        0 bytes
  5885 ;; Hardware stack levels used: 1
  5886 ;; This function calls:
  5887 ;;		Nothing
  5888 ;; This function is called by:
  5889 ;;		_Interrupt_manager
  5890 ;; This function uses a non-reentrant model
  5891 ;;
  5892                           
  5893                           	psect	text37
  5894   00299E                     __ptext37:
  5895                           	callstack 0
  5896   00299E                     _TIMER1_ISR:
  5897                           	callstack 20
  5898   00299E                     
  5899                           ;MCAL_layer/Timer1/Timer1.c: 118:     (PIR1bits.TMR1IF = 0);
  5900   00299E  909E               	bcf	158,0,c	;volatile
  5901   0029A0                     
  5902                           ;MCAL_layer/Timer1/Timer1.c: 119:     TMR1H = (uint8)(timer1_preload>>8);
  5903   0029A0  5063               	movf	(_timer1_preload+1)^0,w,c
  5904   0029A2  6ECF               	movwf	207,c	;volatile
  5905   0029A4                     
  5906                           ;MCAL_layer/Timer1/Timer1.c: 120:     TMR1L = (uint8)(timer1_preload);
  5907   0029A4  C062  FFCE         	movff	_timer1_preload,4046	;volatile
  5908   0029A8  0012               	return		;funcret
  5909   0029AA                     __end_of_TIMER1_ISR:
  5910                           	callstack 0
  5911                           
  5912 ;; *************** function _TIMER0_ISR *****************
  5913 ;; Defined at:
  5914 ;;		line 238 in file "MCAL_layer/Timer0/Timer0.c"
  5915 ;; Parameters:    Size  Location     Type
  5916 ;;		None
  5917 ;; Auto vars:     Size  Location     Type
  5918 ;;		None
  5919 ;; Return value:  Size  Location     Type
  5920 ;;                  1    wreg      void 
  5921 ;; Registers used:
  5922 ;;		wreg, status,2
  5923 ;; Tracked objects:
  5924 ;;		On entry : 0/0
  5925 ;;		On exit  : 0/0
  5926 ;;		Unchanged: 0/0
  5927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5932 ;;Total ram usage:        0 bytes
  5933 ;; Hardware stack levels used: 1
  5934 ;; This function calls:
  5935 ;;		Nothing
  5936 ;; This function is called by:
  5937 ;;		_Interrupt_manager
  5938 ;; This function uses a non-reentrant model
  5939 ;;
  5940                           
  5941                           	psect	text38
  5942   0029AA                     __ptext38:
  5943                           	callstack 0
  5944   0029AA                     _TIMER0_ISR:
  5945                           	callstack 20
  5946   0029AA                     
  5947                           ;MCAL_layer/Timer0/Timer0.c: 240:     (INTCONbits.TMR0IF = 0);
  5948   0029AA  94F2               	bcf	242,2,c	;volatile
  5949   0029AC                     
  5950                           ;MCAL_layer/Timer0/Timer0.c: 241:     TMR0H = (uint8)(timer0_preload>>8);
  5951   0029AC  5065               	movf	(_timer0_preload+1)^0,w,c
  5952   0029AE  6ED7               	movwf	215,c	;volatile
  5953   0029B0                     
  5954                           ;MCAL_layer/Timer0/Timer0.c: 242:     TMR0L = (uint8)(timer0_preload);
  5955   0029B0  C064  FFD6         	movff	_timer0_preload,4054	;volatile
  5956   0029B4  0012               	return		;funcret
  5957   0029B6                     __end_of_TIMER0_ISR:
  5958                           	callstack 0
  5959                           
  5960 ;; *************** function _RB7_ISR *****************
  5961 ;; Defined at:
  5962 ;;		line 204 in file "MCAL_layer/Interrupt/mcal_external_Interrupt.c"
  5963 ;; Parameters:    Size  Location     Type
  5964 ;;  RB7_source      1    wreg     unsigned char 
  5965 ;; Auto vars:     Size  Location     Type
  5966 ;;  RB7_source      1    0[COMRAM] unsigned char 
  5967 ;; Return value:  Size  Location     Type
  5968 ;;                  1    wreg      void 
  5969 ;; Registers used:
  5970 ;;		wreg, status,2, status,0
  5971 ;; Tracked objects:
  5972 ;;		On entry : 0/0
  5973 ;;		On exit  : 0/0
  5974 ;;		Unchanged: 0/0
  5975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5977 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5979 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5980 ;;Total ram usage:        1 bytes
  5981 ;; Hardware stack levels used: 1
  5982 ;; This function calls:
  5983 ;;		Nothing
  5984 ;; This function is called by:
  5985 ;;		_Interrupt_manager
  5986 ;; This function uses a non-reentrant model
  5987 ;;
  5988                           
  5989                           	psect	text39
  5990   00292A                     __ptext39:
  5991                           	callstack 0
  5992   00292A                     _RB7_ISR:
  5993                           	callstack 20
  5994                           
  5995                           ;incstack = 0
  5996                           ;RB7_ISR@RB7_source stored from wreg
  5997   00292A  6E01               	movwf	RB7_ISR@RB7_source^0,c
  5998   00292C                     
  5999                           ;MCAL_layer/Interrupt/mcal_external_Interrupt.c: 204: void RB7_ISR(uint8 RB7_source);MCA
      +                          L_layer/Interrupt/mcal_external_Interrupt.c: 205: {;MCAL_layer/Interrupt/mcal_external_I
      +                          nterrupt.c: 206:     (INTCONbits.RBIF = 0);
  6000   00292C  90F2               	bcf	242,0,c	;volatile
  6001   00292E                     
  6002                           ;MCAL_layer/Interrupt/mcal_external_Interrupt.c: 207:     if(RB7_source == 0)
  6003   00292E  5001               	movf	RB7_ISR@RB7_source^0,w,c
  6004   002930  A4D8               	btfss	status,2,c
  6005   002932  EF9D  F014         	goto	i2u430_41
  6006   002936  EF9F  F014         	goto	i2u430_40
  6007   00293A                     i2u430_41:
  6008   00293A  EFA1  F014         	goto	i2l5437
  6009   00293E                     i2u430_40:
  6010   00293E  EFA1  F014         	goto	i2l882
  6011   002942                     i2l5437:
  6012   002942                     i2l882:
  6013   002942  0012               	return		;funcret
  6014   002944                     __end_of_RB7_ISR:
  6015                           	callstack 0
  6016                           
  6017 ;; *************** function _RB6_ISR *****************
  6018 ;; Defined at:
  6019 ;;		line 184 in file "MCAL_layer/Interrupt/mcal_external_Interrupt.c"
  6020 ;; Parameters:    Size  Location     Type
  6021 ;;  RB6_source      1    wreg     unsigned char 
  6022 ;; Auto vars:     Size  Location     Type
  6023 ;;  RB6_source      1    0[COMRAM] unsigned char 
  6024 ;; Return value:  Size  Location     Type
  6025 ;;                  1    wreg      void 
  6026 ;; Registers used:
  6027 ;;		wreg, status,2, status,0
  6028 ;; Tracked objects:
  6029 ;;		On entry : 0/0
  6030 ;;		On exit  : 0/0
  6031 ;;		Unchanged: 0/0
  6032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6034 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6036 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6037 ;;Total ram usage:        1 bytes
  6038 ;; Hardware stack levels used: 1
  6039 ;; This function calls:
  6040 ;;		Nothing
  6041 ;; This function is called by:
  6042 ;;		_Interrupt_manager
  6043 ;; This function uses a non-reentrant model
  6044 ;;
  6045                           
  6046                           	psect	text40
  6047   002944                     __ptext40:
  6048                           	callstack 0
  6049   002944                     _RB6_ISR:
  6050                           	callstack 20
  6051                           
  6052                           ;incstack = 0
  6053                           ;RB6_ISR@RB6_source stored from wreg
  6054   002944  6E01               	movwf	RB6_ISR@RB6_source^0,c
  6055   002946                     
  6056                           ;MCAL_layer/Interrupt/mcal_external_Interrupt.c: 184: void RB6_ISR(uint8 RB6_source);MCA
      +                          L_layer/Interrupt/mcal_external_Interrupt.c: 185: {;MCAL_layer/Interrupt/mcal_external_I
      +                          nterrupt.c: 186:     (INTCONbits.RBIF = 0);
  6057   002946  90F2               	bcf	242,0,c	;volatile
  6058   002948                     
  6059                           ;MCAL_layer/Interrupt/mcal_external_Interrupt.c: 187:     if(RB6_source == 0)
  6060   002948  5001               	movf	RB6_ISR@RB6_source^0,w,c
  6061   00294A  A4D8               	btfss	status,2,c
  6062   00294C  EFAA  F014         	goto	i2u429_41
  6063   002950  EFAC  F014         	goto	i2u429_40
  6064   002954                     i2u429_41:
  6065   002954  EFAE  F014         	goto	i2l5427
  6066   002958                     i2u429_40:
  6067   002958  EFAE  F014         	goto	i2l874
  6068   00295C                     i2l5427:
  6069   00295C                     i2l874:
  6070   00295C  0012               	return		;funcret
  6071   00295E                     __end_of_RB6_ISR:
  6072                           	callstack 0
  6073                           
  6074 ;; *************** function _RB5_ISR *****************
  6075 ;; Defined at:
  6076 ;;		line 164 in file "MCAL_layer/Interrupt/mcal_external_Interrupt.c"
  6077 ;; Parameters:    Size  Location     Type
  6078 ;;  RB5_source      1    wreg     unsigned char 
  6079 ;; Auto vars:     Size  Location     Type
  6080 ;;  RB5_source      1    0[COMRAM] unsigned char 
  6081 ;; Return value:  Size  Location     Type
  6082 ;;                  1    wreg      void 
  6083 ;; Registers used:
  6084 ;;		wreg, status,2, status,0
  6085 ;; Tracked objects:
  6086 ;;		On entry : 0/0
  6087 ;;		On exit  : 0/0
  6088 ;;		Unchanged: 0/0
  6089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6091 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6093 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6094 ;;Total ram usage:        1 bytes
  6095 ;; Hardware stack levels used: 1
  6096 ;; This function calls:
  6097 ;;		Nothing
  6098 ;; This function is called by:
  6099 ;;		_Interrupt_manager
  6100 ;; This function uses a non-reentrant model
  6101 ;;
  6102                           
  6103                           	psect	text41
  6104   00295E                     __ptext41:
  6105                           	callstack 0
  6106   00295E                     _RB5_ISR:
  6107                           	callstack 20
  6108                           
  6109                           ;incstack = 0
  6110                           ;RB5_ISR@RB5_source stored from wreg
  6111   00295E  6E01               	movwf	RB5_ISR@RB5_source^0,c
  6112   002960                     
  6113                           ;MCAL_layer/Interrupt/mcal_external_Interrupt.c: 164: void RB5_ISR(uint8 RB5_source);MCA
      +                          L_layer/Interrupt/mcal_external_Interrupt.c: 165: {;MCAL_layer/Interrupt/mcal_external_I
      +                          nterrupt.c: 166:     (INTCONbits.RBIF = 0);
  6114   002960  90F2               	bcf	242,0,c	;volatile
  6115   002962                     
  6116                           ;MCAL_layer/Interrupt/mcal_external_Interrupt.c: 167:     if(RB5_source == 0)
  6117   002962  5001               	movf	RB5_ISR@RB5_source^0,w,c
  6118   002964  A4D8               	btfss	status,2,c
  6119   002966  EFB7  F014         	goto	i2u428_41
  6120   00296A  EFB9  F014         	goto	i2u428_40
  6121   00296E                     i2u428_41:
  6122   00296E  EFBB  F014         	goto	i2l5417
  6123   002972                     i2u428_40:
  6124   002972  EFBB  F014         	goto	i2l866
  6125   002976                     i2l5417:
  6126   002976                     i2l866:
  6127   002976  0012               	return		;funcret
  6128   002978                     __end_of_RB5_ISR:
  6129                           	callstack 0
  6130                           
  6131 ;; *************** function _RB4_ISR *****************
  6132 ;; Defined at:
  6133 ;;		line 144 in file "MCAL_layer/Interrupt/mcal_external_Interrupt.c"
  6134 ;; Parameters:    Size  Location     Type
  6135 ;;  RB4_source      1    wreg     unsigned char 
  6136 ;; Auto vars:     Size  Location     Type
  6137 ;;  RB4_source      1    0[COMRAM] unsigned char 
  6138 ;; Return value:  Size  Location     Type
  6139 ;;                  1    wreg      void 
  6140 ;; Registers used:
  6141 ;;		wreg, status,2, status,0
  6142 ;; Tracked objects:
  6143 ;;		On entry : 0/0
  6144 ;;		On exit  : 0/0
  6145 ;;		Unchanged: 0/0
  6146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6148 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6150 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6151 ;;Total ram usage:        1 bytes
  6152 ;; Hardware stack levels used: 1
  6153 ;; This function calls:
  6154 ;;		Nothing
  6155 ;; This function is called by:
  6156 ;;		_Interrupt_manager
  6157 ;; This function uses a non-reentrant model
  6158 ;;
  6159                           
  6160                           	psect	text42
  6161   002978                     __ptext42:
  6162                           	callstack 0
  6163   002978                     _RB4_ISR:
  6164                           	callstack 20
  6165                           
  6166                           ;incstack = 0
  6167                           ;RB4_ISR@RB4_source stored from wreg
  6168   002978  6E01               	movwf	RB4_ISR@RB4_source^0,c
  6169   00297A                     
  6170                           ;MCAL_layer/Interrupt/mcal_external_Interrupt.c: 144: void RB4_ISR(uint8 RB4_source);MCA
      +                          L_layer/Interrupt/mcal_external_Interrupt.c: 145: {;MCAL_layer/Interrupt/mcal_external_I
      +                          nterrupt.c: 146:     (INTCONbits.RBIF = 0);
  6171   00297A  90F2               	bcf	242,0,c	;volatile
  6172   00297C                     
  6173                           ;MCAL_layer/Interrupt/mcal_external_Interrupt.c: 147:     if(RB4_source == 0)
  6174   00297C  5001               	movf	RB4_ISR@RB4_source^0,w,c
  6175   00297E  A4D8               	btfss	status,2,c
  6176   002980  EFC4  F014         	goto	i2u427_41
  6177   002984  EFC6  F014         	goto	i2u427_40
  6178   002988                     i2u427_41:
  6179   002988  EFC8  F014         	goto	i2l5407
  6180   00298C                     i2u427_40:
  6181   00298C  EFC8  F014         	goto	i2l858
  6182   002990                     i2l5407:
  6183   002990                     i2l858:
  6184   002990  0012               	return		;funcret
  6185   002992                     __end_of_RB4_ISR:
  6186                           	callstack 0
  6187                           
  6188 ;; *************** function _INT2_ISR *****************
  6189 ;; Defined at:
  6190 ;;		line 81 in file "MCAL_layer/Interrupt/mcal_external_Interrupt.c"
  6191 ;; Parameters:    Size  Location     Type
  6192 ;;		None
  6193 ;; Auto vars:     Size  Location     Type
  6194 ;;		None
  6195 ;; Return value:  Size  Location     Type
  6196 ;;                  1    wreg      void 
  6197 ;; Registers used:
  6198 ;;		None
  6199 ;; Tracked objects:
  6200 ;;		On entry : 0/0
  6201 ;;		On exit  : 0/0
  6202 ;;		Unchanged: 0/0
  6203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6208 ;;Total ram usage:        0 bytes
  6209 ;; Hardware stack levels used: 1
  6210 ;; This function calls:
  6211 ;;		Nothing
  6212 ;; This function is called by:
  6213 ;;		_Interrupt_manager
  6214 ;; This function uses a non-reentrant model
  6215 ;;
  6216                           
  6217                           	psect	text43
  6218   0029D0                     __ptext43:
  6219                           	callstack 0
  6220   0029D0                     _INT2_ISR:
  6221                           	callstack 20
  6222   0029D0                     
  6223                           ;MCAL_layer/Interrupt/mcal_external_Interrupt.c: 84:     (INTCON3bits.INT2IF = 0);
  6224   0029D0  92F0               	bcf	240,1,c	;volatile
  6225   0029D2  0012               	return		;funcret
  6226   0029D4                     __end_of_INT2_ISR:
  6227                           	callstack 0
  6228                           
  6229 ;; *************** function _INT1_ISR *****************
  6230 ;; Defined at:
  6231 ;;		line 68 in file "MCAL_layer/Interrupt/mcal_external_Interrupt.c"
  6232 ;; Parameters:    Size  Location     Type
  6233 ;;		None
  6234 ;; Auto vars:     Size  Location     Type
  6235 ;;		None
  6236 ;; Return value:  Size  Location     Type
  6237 ;;                  1    wreg      void 
  6238 ;; Registers used:
  6239 ;;		None
  6240 ;; Tracked objects:
  6241 ;;		On entry : 0/0
  6242 ;;		On exit  : 0/0
  6243 ;;		Unchanged: 0/0
  6244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6249 ;;Total ram usage:        0 bytes
  6250 ;; Hardware stack levels used: 1
  6251 ;; This function calls:
  6252 ;;		Nothing
  6253 ;; This function is called by:
  6254 ;;		_Interrupt_manager
  6255 ;; This function uses a non-reentrant model
  6256 ;;
  6257                           
  6258                           	psect	text44
  6259   0029D4                     __ptext44:
  6260                           	callstack 0
  6261   0029D4                     _INT1_ISR:
  6262                           	callstack 20
  6263   0029D4                     
  6264                           ;MCAL_layer/Interrupt/mcal_external_Interrupt.c: 71:     (INTCON3bits.INT1IF = 0);
  6265   0029D4  90F0               	bcf	240,0,c	;volatile
  6266   0029D6  0012               	return		;funcret
  6267   0029D8                     __end_of_INT1_ISR:
  6268                           	callstack 0
  6269                           
  6270 ;; *************** function _INT0_ISR *****************
  6271 ;; Defined at:
  6272 ;;		line 55 in file "MCAL_layer/Interrupt/mcal_external_Interrupt.c"
  6273 ;; Parameters:    Size  Location     Type
  6274 ;;		None
  6275 ;; Auto vars:     Size  Location     Type
  6276 ;;		None
  6277 ;; Return value:  Size  Location     Type
  6278 ;;                  1    wreg      void 
  6279 ;; Registers used:
  6280 ;;		None
  6281 ;; Tracked objects:
  6282 ;;		On entry : 0/0
  6283 ;;		On exit  : 0/0
  6284 ;;		Unchanged: 0/0
  6285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6290 ;;Total ram usage:        0 bytes
  6291 ;; Hardware stack levels used: 1
  6292 ;; This function calls:
  6293 ;;		Nothing
  6294 ;; This function is called by:
  6295 ;;		_Interrupt_manager
  6296 ;; This function uses a non-reentrant model
  6297 ;;
  6298                           
  6299                           	psect	text45
  6300   0029D8                     __ptext45:
  6301                           	callstack 0
  6302   0029D8                     _INT0_ISR:
  6303                           	callstack 20
  6304   0029D8                     
  6305                           ;MCAL_layer/Interrupt/mcal_external_Interrupt.c: 58:     (INTCONbits.INT0IF = 0);
  6306   0029D8  92F2               	bcf	242,1,c	;volatile
  6307   0029DA  0012               	return		;funcret
  6308   0029DC                     __end_of_INT0_ISR:
  6309                           	callstack 0
  6310                           
  6311 ;; *************** function _CCP2_ISR *****************
  6312 ;; Defined at:
  6313 ;;		line 448 in file "MCAL_layer/CCP/CCP1.c"
  6314 ;; Parameters:    Size  Location     Type
  6315 ;;		None
  6316 ;; Auto vars:     Size  Location     Type
  6317 ;;		None
  6318 ;; Return value:  Size  Location     Type
  6319 ;;                  1    wreg      void 
  6320 ;; Registers used:
  6321 ;;		None
  6322 ;; Tracked objects:
  6323 ;;		On entry : 0/0
  6324 ;;		On exit  : 0/0
  6325 ;;		Unchanged: 0/0
  6326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6331 ;;Total ram usage:        0 bytes
  6332 ;; Hardware stack levels used: 1
  6333 ;; This function calls:
  6334 ;;		Nothing
  6335 ;; This function is called by:
  6336 ;;		_Interrupt_manager
  6337 ;; This function uses a non-reentrant model
  6338 ;;
  6339                           
  6340                           	psect	text46
  6341   0029DC                     __ptext46:
  6342                           	callstack 0
  6343   0029DC                     _CCP2_ISR:
  6344                           	callstack 20
  6345   0029DC                     
  6346                           ;MCAL_layer/CCP/CCP1.c: 450:     (PIR2bits.CCP2IF = 0);
  6347   0029DC  90A1               	bcf	161,0,c	;volatile
  6348   0029DE  0012               	return		;funcret
  6349   0029E0                     __end_of_CCP2_ISR:
  6350                           	callstack 0
  6351                           
  6352 ;; *************** function _CCP1_ISR *****************
  6353 ;; Defined at:
  6354 ;;		line 439 in file "MCAL_layer/CCP/CCP1.c"
  6355 ;; Parameters:    Size  Location     Type
  6356 ;;		None
  6357 ;; Auto vars:     Size  Location     Type
  6358 ;;		None
  6359 ;; Return value:  Size  Location     Type
  6360 ;;                  1    wreg      void 
  6361 ;; Registers used:
  6362 ;;		None
  6363 ;; Tracked objects:
  6364 ;;		On entry : 0/0
  6365 ;;		On exit  : 0/0
  6366 ;;		Unchanged: 0/0
  6367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6372 ;;Total ram usage:        0 bytes
  6373 ;; Hardware stack levels used: 1
  6374 ;; This function calls:
  6375 ;;		Nothing
  6376 ;; This function is called by:
  6377 ;;		_Interrupt_manager
  6378 ;; This function uses a non-reentrant model
  6379 ;;
  6380                           
  6381                           	psect	text47
  6382   0029E0                     __ptext47:
  6383                           	callstack 0
  6384   0029E0                     _CCP1_ISR:
  6385                           	callstack 20
  6386   0029E0                     
  6387                           ;MCAL_layer/CCP/CCP1.c: 441:     (PIR1bits.CCP1IF = 0);
  6388   0029E0  949E               	bcf	158,2,c	;volatile
  6389   0029E2  0012               	return		;funcret
  6390   0029E4                     __end_of_CCP1_ISR:
  6391                           	callstack 0
  6392                           
  6393 ;; *************** function _ADC_ISR *****************
  6394 ;; Defined at:
  6395 ;;		line 305 in file "MCAL_layer/ADC/hal_ADC.c"
  6396 ;; Parameters:    Size  Location     Type
  6397 ;;		None
  6398 ;; Auto vars:     Size  Location     Type
  6399 ;;		None
  6400 ;; Return value:  Size  Location     Type
  6401 ;;                  1    wreg      void 
  6402 ;; Registers used:
  6403 ;;		None
  6404 ;; Tracked objects:
  6405 ;;		On entry : 0/0
  6406 ;;		On exit  : 0/0
  6407 ;;		Unchanged: 0/0
  6408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6413 ;;Total ram usage:        0 bytes
  6414 ;; Hardware stack levels used: 1
  6415 ;; This function calls:
  6416 ;;		Nothing
  6417 ;; This function is called by:
  6418 ;;		_Interrupt_manager
  6419 ;; This function uses a non-reentrant model
  6420 ;;
  6421                           
  6422                           	psect	text48
  6423   0029E4                     __ptext48:
  6424                           	callstack 0
  6425   0029E4                     _ADC_ISR:
  6426                           	callstack 20
  6427   0029E4                     
  6428                           ;MCAL_layer/ADC/hal_ADC.c: 307:     (PIR1bits.ADIF = 0);
  6429   0029E4  9C9E               	bcf	158,6,c	;volatile
  6430   0029E6  0012               	return		;funcret
  6431   0029E8                     __end_of_ADC_ISR:
  6432                           	callstack 0
  6433                           
  6434                           	psect	rparam
  6435   000000                     
  6436                           	psect	temp
  6437   00007D                     btemp:
  6438                           	callstack 0
  6439   00007D                     	ds	1
  6440   000000                     int$flags	set	btemp
  6441   000000                     wtemp8	set	btemp+1
  6442   000000                     ttemp5	set	btemp+1
  6443   000000                     ttemp6	set	btemp+4
  6444   000000                     ttemp7	set	btemp+8
  6445                           
  6446                           	psect	config
  6447                           
  6448                           ; Padding undefined space
  6449   300000                     	org	3145728
  6450   300000  FF                 	db	255
  6451                           
  6452                           ;Config register CONFIG1H @ 0x300001
  6453                           ;	Oscillator Selection bits
  6454                           ;	OSC = RCIO6, External RC oscillator, port function on RA6
  6455                           ;	Fail-Safe Clock Monitor Enable bit
  6456                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  6457                           ;	Internal/External Oscillator Switchover bit
  6458                           ;	IESO = OFF, Oscillator Switchover mode disabled
  6459   300001                     	org	3145729
  6460   300001  07                 	db	7
  6461                           
  6462                           ;Config register CONFIG2L @ 0x300002
  6463                           ;	Power-up Timer Enable bit
  6464                           ;	PWRT = OFF, PWRT disabled
  6465                           ;	Brown-out Reset Enable bits
  6466                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  6467                           ;	Brown Out Reset Voltage bits
  6468                           ;	BORV = 3, Minimum setting
  6469   300002                     	org	3145730
  6470   300002  1F                 	db	31
  6471                           
  6472                           ;Config register CONFIG2H @ 0x300003
  6473                           ;	Watchdog Timer Enable bit
  6474                           ;	WDT = ON, WDT enabled
  6475                           ;	Watchdog Timer Postscale Select bits
  6476                           ;	WDTPS = 32768, 1:32768
  6477   300003                     	org	3145731
  6478   300003  1F                 	db	31
  6479                           
  6480                           ; Padding undefined space
  6481   300004                     	org	3145732
  6482   300004  FF                 	db	255
  6483                           
  6484                           ;Config register CONFIG3H @ 0x300005
  6485                           ;	CCP2 MUX bit
  6486                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  6487                           ;	PORTB A/D Enable bit
  6488                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  6489                           ;	Low-Power Timer1 Oscillator Enable bit
  6490                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  6491                           ;	MCLR Pin Enable bit
  6492                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  6493   300005                     	org	3145733
  6494   300005  81                 	db	129
  6495                           
  6496                           ;Config register CONFIG4L @ 0x300006
  6497                           ;	Stack Full/Underflow Reset Enable bit
  6498                           ;	STVREN = ON, Stack full/underflow will cause Reset
  6499                           ;	Single-Supply ICSP Enable bit
  6500                           ;	LVP = ON, Single-Supply ICSP enabled
  6501                           ;	Extended Instruction Set Enable bit
  6502                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  6503                           ;	Background Debugger Enable bit
  6504                           ;	DEBUG = 0x1, unprogrammed default
  6505   300006                     	org	3145734
  6506   300006  85                 	db	133
  6507                           
  6508                           ; Padding undefined space
  6509   300007                     	org	3145735
  6510   300007  FF                 	db	255
  6511                           
  6512                           ;Config register CONFIG5L @ 0x300008
  6513                           ;	Code Protection bit
  6514                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  6515                           ;	Code Protection bit
  6516                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  6517                           ;	Code Protection bit
  6518                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  6519                           ;	Code Protection bit
  6520                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  6521   300008                     	org	3145736
  6522   300008  0F                 	db	15
  6523                           
  6524                           ;Config register CONFIG5H @ 0x300009
  6525                           ;	Boot Block Code Protection bit
  6526                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  6527                           ;	Data EEPROM Code Protection bit
  6528                           ;	CPD = OFF, Data EEPROM not code-protected
  6529   300009                     	org	3145737
  6530   300009  C0                 	db	192
  6531                           
  6532                           ;Config register CONFIG6L @ 0x30000A
  6533                           ;	Write Protection bit
  6534                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  6535                           ;	Write Protection bit
  6536                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  6537                           ;	Write Protection bit
  6538                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  6539                           ;	Write Protection bit
  6540                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  6541   30000A                     	org	3145738
  6542   30000A  0F                 	db	15
  6543                           
  6544                           ;Config register CONFIG6H @ 0x30000B
  6545                           ;	Configuration Register Write Protection bit
  6546                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  6547                           ;	Boot Block Write Protection bit
  6548                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  6549                           ;	Data EEPROM Write Protection bit
  6550                           ;	WRTD = OFF, Data EEPROM not write-protected
  6551   30000B                     	org	3145739
  6552   30000B  E0                 	db	224
  6553                           
  6554                           ;Config register CONFIG7L @ 0x30000C
  6555                           ;	Table Read Protection bit
  6556                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  6557                           ;	Table Read Protection bit
  6558                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  6559                           ;	Table Read Protection bit
  6560                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  6561                           ;	Table Read Protection bit
  6562                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  6563   30000C                     	org	3145740
  6564   30000C  0F                 	db	15
  6565                           
  6566                           ;Config register CONFIG7H @ 0x30000D
  6567                           ;	Boot Block Table Read Protection bit
  6568                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  6569   30000D                     	org	3145741
  6570   30000D  40                 	db	64
  6571                           tosu	equ	0xFFF
  6572                           tosh	equ	0xFFE
  6573                           tosl	equ	0xFFD
  6574                           stkptr	equ	0xFFC
  6575                           pclatu	equ	0xFFB
  6576                           pclath	equ	0xFFA
  6577                           pcl	equ	0xFF9
  6578                           tblptru	equ	0xFF8
  6579                           tblptrh	equ	0xFF7
  6580                           tblptrl	equ	0xFF6
  6581                           tablat	equ	0xFF5
  6582                           prodh	equ	0xFF4
  6583                           prodl	equ	0xFF3
  6584                           indf0	equ	0xFEF
  6585                           postinc0	equ	0xFEE
  6586                           postdec0	equ	0xFED
  6587                           preinc0	equ	0xFEC
  6588                           plusw0	equ	0xFEB
  6589                           fsr0h	equ	0xFEA
  6590                           fsr0l	equ	0xFE9
  6591                           wreg	equ	0xFE8
  6592                           indf1	equ	0xFE7
  6593                           postinc1	equ	0xFE6
  6594                           postdec1	equ	0xFE5
  6595                           preinc1	equ	0xFE4
  6596                           plusw1	equ	0xFE3
  6597                           fsr1h	equ	0xFE2
  6598                           fsr1l	equ	0xFE1
  6599                           bsr	equ	0xFE0
  6600                           indf2	equ	0xFDF
  6601                           postinc2	equ	0xFDE
  6602                           postdec2	equ	0xFDD
  6603                           preinc2	equ	0xFDC
  6604                           plusw2	equ	0xFDB
  6605                           fsr2h	equ	0xFDA
  6606                           fsr2l	equ	0xFD9
  6607                           status	equ	0xFD8

Data Sizes:
    Strings     23
    Constant    12
    Data        47
    BSS         124
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     89     124
    BANK0           128      2     107
    BANK1           256      0      32
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S3595$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 11
		 -> numper_places_str(BANK0[7]), convert_int_to_string@Temp_String(COMRAM[11]), convert_short_to_string@Temp_String(COMRAM[6]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S3542$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S3542$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    memset@dest	PTR void  size(2) Largest target is 7
		 -> numper_places_str(BANK0[7]), 

    memset@s	PTR unsigned char  size(2) Largest target is 7
		 -> numper_places_str(BANK0[7]), 

    PIR_sensor_read@pir_state	PTR unsigned char  size(2) Largest target is 1
		 -> pir2_state(COMRAM[1]), pir1_state(COMRAM[1]), 

    PIR_sensor_read@Pir_obj	PTR const struct . size(2) Largest target is 1
		 -> pir2(COMRAM[1]), pir1(COMRAM[1]), 

    PIR_sensor_initialize@Pir_obj	PTR const struct . size(2) Largest target is 1
		 -> pir2(COMRAM[1]), pir1(COMRAM[1]), 

    Timer3InterruptHandeler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S2871$Timer3CallBack	PTR FTN()void  size(2) Largest target is 0

    Timer3_init@TM3_obj.Timer3CallBack	PTR FTN()void  size(2) Largest target is 0

    Timer2_Write_Value@TM2_obj.Timer2CallBack	PTR FTN()void  size(2) Largest target is 0

    Timer2InterruptHandeler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S2735$Timer2CallBack	PTR FTN()void  size(2) Largest target is 0

    Timer2_init@TM2_obj.Timer2CallBack	PTR FTN()void  size(2) Largest target is 0

    Timer1InterruptHandeler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S2565$Timer1CallBack	PTR FTN()void  size(2) Largest target is 0

    Timer1_init@TM1_obj.Timer1CallBack	PTR FTN()void  size(2) Largest target is 0

    Timer0_Prescaler_select@TM0_obj.Timer0CallBack	PTR FTN()void  size(2) Largest target is 0

    Timer0_Mode_select@TM0_obj.Timer0CallBack	PTR FTN()void  size(2) Largest target is 0

    Timer0_REGISTER_select@TM0_obj.Timer0CallBack	PTR FTN()void  size(2) Largest target is 0

    Timer0_Read_Value@TM0_obj.Timer0CallBack	PTR FTN()void  size(2) Largest target is 0

    Timer0_Write_Value@TM0_obj.Timer0CallBack	PTR FTN()void  size(2) Largest target is 0

    S2380$Timer0CallBack	PTR FTN()void  size(2) Largest target is 0

    Timer0_init@TM0_obj.Timer0CallBack	PTR FTN()void  size(2) Largest target is 0

    Timer0InterruptHandeler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Interrupt_RBx_Call_Back@RB_obj.RBx_CallBack_Low	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Call_Back@RB_obj.RBx_CallBack_High	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Call_Back@int_obj.INTx_CallBack	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Clear_flag@int_obj.INTx_CallBack	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Pin_init@int_obj.INTx_CallBack	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Edge_init@int_obj.INTx_CallBack	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Disable@int_obj.INTx_CallBack	PTR FTN()void  size(2) Largest target is 0

    S1799$INTx_CallBack	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Enable@int_obj.INTx_CallBack	PTR FTN()void  size(2) Largest target is 0

    S1907$RBx_CallBack_Low	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@RB_obj.RBx_CallBack_Low	PTR FTN()void  size(2) Largest target is 0

    S1907$RBx_CallBack_High	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@RB_obj.RBx_CallBack_High	PTR FTN()void  size(2) Largest target is 0

    RBx_Call_Back	PTR FTN()void [8] size(2) Largest target is 1
		 -> NULL(), 

    INTx_Call_Back	PTR FTN()void [3] size(2) Largest target is 1
		 -> NULL(), 

    gpio_pin_initialize@pin	PTR const struct . size(2) Largest target is 10
		 -> pir2(COMRAM[1]), pir1(COMRAM[1]), motor_2.dc_motor_pin(COMRAM[2]), motor_2(COMRAM[2]), 
		 -> motor_1.dc_motor_pin(COMRAM[2]), motor_1(COMRAM[2]), lcd_1.lcd_data(BANK0[8]), lcd_1(BANK0[10]), 
		 -> led_initialize@pin_obj(COMRAM[1]), relay_initialize@relay_pin(COMRAM[1]), 

    gpio_pin_write_logic@pin	PTR const struct . size(2) Largest target is 10
		 -> pir2(COMRAM[1]), pir1(COMRAM[1]), motor_2.dc_motor_pin(COMRAM[2]), motor_2(COMRAM[2]), 
		 -> motor_1.dc_motor_pin(COMRAM[2]), motor_1(COMRAM[2]), lcd_1.lcd_data(BANK0[8]), lcd_1(BANK0[10]), 
		 -> led_turn_off@pin_obj(COMRAM[1]), led_turn_on@pin_obj(COMRAM[1]), led_initialize@pin_obj(COMRAM[1]), relay_turn_off@relay_pin(COMRAM[1]), 
		 -> relay_turn_on@relay_pin(COMRAM[1]), relay_initialize@relay_pin(COMRAM[1]), 

    gpio_pin_read_logic@log	PTR enum E3137 size(2) Largest target is 1
		 -> PIR_sensor_read@log(COMRAM[1]), push_button_read@btn_l(COMRAM[1]), keypad_get_value@log(COMRAM[1]), 

    gpio_pin_read_logic@pin	PTR const struct . size(2) Largest target is 1
		 -> pir2(COMRAM[1]), pir1(COMRAM[1]), 

    gpio_pin_direction_initialize@pin	PTR const struct . size(2) Largest target is 10
		 -> pir2(COMRAM[1]), pir1(COMRAM[1]), motor_2.dc_motor_pin(COMRAM[2]), motor_2(COMRAM[2]), 
		 -> motor_1.dc_motor_pin(COMRAM[2]), motor_1(COMRAM[2]), lcd_1.lcd_data(BANK0[8]), lcd_1(BANK0[10]), 
		 -> led_initialize@pin_obj(COMRAM[1]), relay_initialize@relay_pin(COMRAM[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRllllh[1]), LATD(BITBIGSFRllllh[1]), LATC(BITBIGSFRllllh[1]), LATB(BITBIGSFRllllh[1]), 
		 -> LATA(BITBIGSFRlllll[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRlllll[1]), PORTD(BITBIGSFRlllll[1]), PORTC(BITBIGSFRlllll[1]), PORTB(BITBIGSFRlllll[1]), 
		 -> PORTA(BITBIGSFRlllll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISD(ABS[1]), TRISC(ABS[1]), TRISB(ABS[1]), TRISE(ABS[1]), 
		 -> TRISA(BITBIGSFRlllll[1]), 

    CCP_Timer_config@ccp_obj.CCP2CallBack	PTR FTN()void  size(2) Largest target is 0

    CCP_Timer_config@ccp_obj.CCP1CallBack	PTR FTN()void  size(2) Largest target is 0

    CCP1_Compare_write_value@ccp_obj.CCP2CallBack	PTR FTN()void  size(2) Largest target is 0

    CCP1_Compare_write_value@ccp_obj.CCP1CallBack	PTR FTN()void  size(2) Largest target is 0

    CCP1_IsCompareReady@ccp_obj.CCP2CallBack	PTR FTN()void  size(2) Largest target is 0

    CCP1_IsCompareReady@ccp_obj.CCP1CallBack	PTR FTN()void  size(2) Largest target is 0

    CCP1_Capture_read_value@ccp_obj.CCP2CallBack	PTR FTN()void  size(2) Largest target is 0

    CCP1_Capture_read_value@ccp_obj.CCP1CallBack	PTR FTN()void  size(2) Largest target is 0

    CCP1_IsCaptureReady@ccp_obj.CCP2CallBack	PTR FTN()void  size(2) Largest target is 0

    CCP1_IsCaptureReady@ccp_obj.CCP1CallBack	PTR FTN()void  size(2) Largest target is 0

    CCP_Deinit@ccp_obj.CCP2CallBack	PTR FTN()void  size(2) Largest target is 0

    CCP_Deinit@ccp_obj.CCP1CallBack	PTR FTN()void  size(2) Largest target is 0

    CCP2_InterruptHandeler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    CCP1_InterruptHandeler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S1143$CCP2CallBack	PTR FTN()void  size(2) Largest target is 0

    CCP_Init@ccp_obj.CCP2CallBack	PTR FTN()void  size(2) Largest target is 0

    S1143$CCP1CallBack	PTR FTN()void  size(2) Largest target is 0

    CCP_Init@ccp_obj.CCP1CallBack	PTR FTN()void  size(2) Largest target is 0

    ADC_Read_Result@ADC_obj.ADC_CallBack	PTR FTN()void  size(2) Largest target is 0

    ADC_InterruptCallBack	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S764$ADC_CallBack	PTR FTN()void  size(2) Largest target is 0

    ADC_init@ADC_obj.ADC_CallBack	PTR FTN()void  size(2) Largest target is 0

    dc_motor_stop@dc_motor	PTR const struct . size(2) Largest target is 2
		 -> motor_2(COMRAM[2]), motor_1(COMRAM[2]), 

    dc_motor_move_left@dc_motor	PTR const struct . size(2) Largest target is 2
		 -> motor_2(COMRAM[2]), motor_1(COMRAM[2]), 

    dc_motor_move_right@dc_motor	PTR const struct . size(2) Largest target is 2
		 -> motor_2(COMRAM[2]), motor_1(COMRAM[2]), 

    dc_motor_initialize@dc_motor	PTR const struct . size(2) Largest target is 2
		 -> motor_2(COMRAM[2]), motor_1(COMRAM[2]), 

    lcd_8bit_set_cursor@lcd_obj	PTR const struct . size(2) Largest target is 10
		 -> lcd_1(BANK0[10]), 

    lcd_8bit_send_enable@lcd_obj	PTR const struct . size(2) Largest target is 10
		 -> lcd_1(BANK0[10]), 

    sp__memset	PTR void  size(2) Largest target is 7
		 -> numper_places_str(BANK0[7]), 

    convert_byte_to_string@str	PTR unsigned char  size(2) Largest target is 7
		 -> numper_places_str(BANK0[7]), 

    lcd_8bit_send_string_pos@string	PTR unsigned char  size(2) Largest target is 20
		 -> numper_places_str(BANK0[7]), STR_4(CODE[20]), 

    lcd_8bit_send_string_pos@lcd_obj	PTR const struct . size(2) Largest target is 10
		 -> lcd_1(BANK0[10]), 

    lcd_8bit_send_string@string	PTR unsigned char  size(2) Largest target is 20
		 -> numper_places_str(BANK0[7]), STR_4(CODE[20]), 

    lcd_8bit_send_string@lcd_obj	PTR const struct . size(2) Largest target is 10
		 -> lcd_1(BANK0[10]), 

    lcd_8bit_send_char@lcd_obj	PTR const struct . size(2) Largest target is 10
		 -> lcd_1(BANK0[10]), 

    lcd_8bit_send_command@lcd_obj	PTR const struct . size(2) Largest target is 10
		 -> lcd_1(BANK0[10]), 

    lcd_8bit_initialize@lcd_obj	PTR const struct . size(2) Largest target is 10
		 -> lcd_1(BANK0[10]), 


Critical Paths under _main in COMRAM

    _main->_convert_byte_to_string
    _lcd_8bit_send_string_pos->_lcd_8bit_set_cursor
    _lcd_8bit_set_cursor->_lcd_8bit_send_command
    _lcd_8bit_send_string->_lcd_8bit_send_char
    _lcd_8bit_send_char->_lcd_8bit_send_enable
    _dc_motor_stop->_gpio_pin_write_logic
    _dc_motor_move_right->_gpio_pin_write_logic
    _dc_motor_move_left->_gpio_pin_write_logic
    _convert_byte_to_string->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _ecu_initialize->_lcd_8bit_initialize
    _lcd_8bit_initialize->_lcd_8bit_send_command
    _lcd_8bit_send_command->_lcd_8bit_send_enable
    _lcd_8bit_send_enable->_gpio_pin_write_logic
    _dc_motor_initialize->_gpio_pin_initialize
    _PIR_sensor_initialize->_gpio_pin_initialize
    _gpio_pin_initialize->_gpio_pin_write_logic
    _PIR_sensor_read->_gpio_pin_read_logic

Critical Paths under _Interrupt_manager in COMRAM

    _Interrupt_manager->_RB4_ISR
    _Interrupt_manager->_RB5_ISR
    _Interrupt_manager->_RB6_ISR
    _Interrupt_manager->_RB7_ISR

Critical Paths under _main in BANK0

    None.

Critical Paths under _Interrupt_manager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Interrupt_manager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Interrupt_manager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Interrupt_manager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Interrupt_manager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Interrupt_manager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Interrupt_manager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Interrupt_manager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Interrupt_manager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Interrupt_manager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Interrupt_manager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Interrupt_manager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Interrupt_manager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Interrupt_manager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Interrupt_manager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Interrupt_manager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   78536
                                              0 BANK0      2     2      0
                    _PIR_sensor_read
             _application_initialize
             _convert_byte_to_string
                 _dc_motor_move_left
                _dc_motor_move_right
                      _dc_motor_stop
           _lcd_8bit_send_string_pos
 ---------------------------------------------------------------------------------
 (1) _lcd_8bit_send_string_pos                             7     1      6   23655
                                             29 COMRAM     7     1      6
               _lcd_8bit_send_string
                _lcd_8bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_set_cursor                                  7     3      4   12174
                                             22 COMRAM     7     3      4
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_send_string                                 5     1      4   10085
                                             22 COMRAM     5     1      4
                 _lcd_8bit_send_char
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_char                                   8     5      3    9797
                                             14 COMRAM     8     5      3
               _gpio_pin_write_logic
               _lcd_8bit_send_enable
 ---------------------------------------------------------------------------------
 (1) _dc_motor_stop                                        3     1      2    4831
                                             11 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _dc_motor_move_right                                  3     1      2    4679
                                             11 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _dc_motor_move_left                                   3     1      2    4679
                                             11 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _convert_byte_to_string                               4     2      2    7594
                                             85 COMRAM     4     2      2
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             24    16      8    5851
                                             63 COMRAM    22    14      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    5196
                                             55 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           19    13      6    4846
                                             41 COMRAM    14     8      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                13     9      4    3626
                                             28 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    1999
                                             17 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4     931
                                             10 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     682
                                              1 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                              7 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              1 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _memset                                              12     6      6    1403
                                              1 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (1) _application_initialize                               0     0      0   31673
                    _Mcal_initialize
                     _ecu_initialize
 ---------------------------------------------------------------------------------
 (2) _ecu_initialize                                       1     1      0   31672
              _PIR_sensor_initialize
                _dc_motor_initialize
                _lcd_8bit_initialize
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_initialize                                  6     4      2   18357
                                             22 COMRAM     6     4      2
                _gpio_pin_initialize
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_command                                8     5      3   11469
                                             14 COMRAM     8     5      3
               _gpio_pin_write_logic
               _lcd_8bit_send_enable
 ---------------------------------------------------------------------------------
 (4) _lcd_8bit_send_enable                                 3     1      2    4679
                                             11 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _dc_motor_initialize                                  3     1      2    6666
                                             15 COMRAM     3     1      2
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (3) _PIR_sensor_initialize                                3     1      2    6643
                                             15 COMRAM     3     1      2
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_initialize                                  4     2      2    6422
                                             11 COMRAM     4     2      2
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_logic                                10     7      3    4435
                                              1 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_direction_initialize                        9     7      2     407
                                              1 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (2) _Mcal_initialize                                      1     1      0       1
 ---------------------------------------------------------------------------------
 (1) _PIR_sensor_read                                      6     2      4    1425
                                             11 COMRAM     6     2      4
                _gpio_pin_read_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_read_logic                                 10     6      4     916
                                              1 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _Interrupt_manager                                   0     0      0     176
                            _ADC_ISR
                           _CCP1_ISR
                           _CCP2_ISR
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
                         _TIMER0_ISR
                         _TIMER1_ISR
                         _TIMER2_ISR
                         _TIMER3_ISR
 ---------------------------------------------------------------------------------
 (11) _TIMER3_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TIMER2_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TIMER1_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TIMER0_ISR                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _RB7_ISR                                             1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _RB6_ISR                                             1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _RB5_ISR                                             1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _RB4_ISR                                             1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) _INT2_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _INT1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _INT0_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _CCP2_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _CCP1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ADC_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PIR_sensor_read
     _gpio_pin_read_logic
   _application_initialize
     _Mcal_initialize
     _ecu_initialize
       _PIR_sensor_initialize
         _gpio_pin_initialize
           _gpio_pin_direction_initialize
           _gpio_pin_write_logic
       _dc_motor_initialize
         _gpio_pin_initialize
       _lcd_8bit_initialize
         _gpio_pin_initialize
         _lcd_8bit_send_command
           _gpio_pin_write_logic
           _lcd_8bit_send_enable
             _gpio_pin_write_logic
   _convert_byte_to_string
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
   _dc_motor_move_left
     _gpio_pin_write_logic
   _dc_motor_move_right
     _gpio_pin_write_logic
   _dc_motor_stop
     _gpio_pin_write_logic
   _lcd_8bit_send_string_pos
     _lcd_8bit_send_string
       _lcd_8bit_send_char
         _gpio_pin_write_logic
         _lcd_8bit_send_enable
     _lcd_8bit_set_cursor
       _lcd_8bit_send_command

 _Interrupt_manager (ROOT)
   _ADC_ISR
   _CCP1_ISR
   _CCP2_ISR
   _INT0_ISR
   _INT1_ISR
   _INT2_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR
   _TIMER0_ISR
   _TIMER1_ISR
   _TIMER2_ISR
   _TIMER3_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      49        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      20       7       12.5%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      2      6B       5       83.6%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     59      7C       1       98.4%
BITBIGSFRhlhlh      18      0       0      38        0.0%
BITBIGSFRhh          D      0       0      37        0.0%
BITBIGSFRllhllh      6      0       0      42        0.0%
BITBIGSFRllhllh      6      0       0      43        0.0%
BITBIGSFRlllhh       6      0       0      46        0.0%
BITBIGSFRhlhllh      5      0       0      39        0.0%
BITBIGSFRhlhlll      5      0       0      41        0.0%
BITBIGSFRllllh       4      0       0      47        0.0%
BITBIGSFRllhllh      4      0       0      44        0.0%
BITBIGSFRlllll       4      0       0      48        0.0%
BITBIGSFRhlhlll      1      0       0      40        0.0%
BITBIGSFRllhlll      1      0       0      45        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     107      12        0.0%
DATA                 0      0     107       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Wed Oct 04 17:31:56 2023

                   PIR_sensor_read@log 0011                     PIR_sensor_read@ret 0010  
           __end_of_lcd_8bit_send_char 22F8                                     l91 22F6  
                                   l84 238C                                     l77 1BB4  
                         ___awdiv@sign 0007                                    l200 278E  
                                  l113 25BE                                    l210 2748  
                                  l106 2260                                    l125 2618  
                                  l205 27D4                                    l162 26B6  
                                  l174 205C                                    l195 28D4  
                                  l386 2896                                    l740 2114  
                                  l726 1A82                                    l752 1E0C  
                                  l766 2564                                    _abs 281A  
                    _Interrupt_manager 0008                                    _pad 2412  
                      __end_of_ADC_ISR 29E8                                    _ret 00EA  
                         ___awmod@sign 0007                    led_initialize@F3201 006F  
                                  prod 0FF3              ?_lcd_8bit_send_string_pos 001E  
                                  wreg 0FE8                  relay_initialize@F3197 0073  
         __end_of_lcd_8bit_send_enable 26B8            __end_of_lcd_8bit_set_cursor 205E  
               PIR_sensor_read@Pir_obj 000C                     ?_Interrupt_manager 0001  
                      __end_of_RB4_ISR 2992                        __end_of_RB5_ISR 2978  
                      __end_of_RB6_ISR 295E                        __end_of_RB7_ISR 2944  
         __end_of_lcd_8bit_send_string 2262                                   ?_abs 0008  
                                 l2103 1CE0                                   l2113 2850  
                                 l2051 2702                                   l1340 29EA  
                                 l2116 2858                                   l2109 2668  
                                 l2038 193E                                   l1360 2410  
                                 l2128 1ED6                                   l2136 2818  
                                 l1337 29BE                                   l2073 2434  
                                 l2082 167C                                   l1355 240E  
                                 l2139 29E8                                   l2084 1684  
                                 l1349 2900                                   l2077 248A  
                                 l2085 16CA                                   l1607 21C4  
                                 l2096 17C8                                   l5011 1B0A  
                                 l5003 1ACA                                   l5021 1B60  
                                 l5013 1B1A                                   l5005 1ADA  
                                 l5023 1B70                                   l5015 1B3A  
                                 l5007 1ADE                                   l5031 1BB2  
                                 l5025 1B80                                   l5017 1B40  
                                 l5009 1AFA                                   l5041 227C  
                                 l1594 1F9A                                   l5027 1B90  
                                 l5019 1B50                                   l5211 1916  
                                 l5203 189C                                   l5051 22C6  
                                 l5043 2290                                   l5035 2262  
                                 l5061 2898                                   l5029 1BA0  
                                 l5213 1922                                   l5205 18C8  
                                 l5221 26C8                                   l5053 22CA  
                                 l5037 2262                                   l5231 205E  
                                 l5063 2898                                   l5215 1928  
                                 l5223 26D0                                   l5055 22E6  
                                 l5039 2274                                   l5151 1FC0  
                                 l5143 1F9C                                   l5241 20B0  
                                 l5233 2062                                   l5081 28FE  
                                 l5073 28D6                                   l5065 28AA  
                                 l5217 192C                                   l5209 18E2  
                                 l5225 26D8                                   l5049 2298  
                                 l5057 22F4                                   l5153 1FD8  
                                 l5161 205A                                   l5145 1FA0  
                                 l5321 258A                                   l5243 2112  
                                 l5235 2074                                   l5075 28D6  
                                 l5067 28B2                                   l5251 2866  
                                 l5091 2660                                   l5227 26F4  
                                 l5219 26B8                                   l5331 25C2  
                                 l5171 21CA                                   l5155 1FF0  
                                 l5147 1FB2                                   l5323 2592  
                                 l5315 2566                                   l5237 2096  
                                 l5077 28E8                                   l5069 28D2  
                                 l5253 2872                                   l4701 27D6  
                                 l5085 261A                                   l5341 2616  
                                 l5333 25C6                                   l5181 222C  
                                 l5173 21DC                                   l5157 2008  
                                 l5149 1FBA                                   l5325 25A6  
                                 l5317 2566                                   ?_pad 0012  
                                 l5239 20A8                                   l4711 1CE6  
                                 l5079 28F0                                   l5255 287E  
                                 l5247 285A                                   l5191 17E8  
                                 l4703 27E2                                   l5087 2626  
                                 l5335 25D8                                   l5351 2764  
                                 l5183 225E                                   l5175 21EE  
                                 l5159 2020                                   l5327 25BC  
                                 l5319 2578                                   l4713 1CF8  
                                 l5257 288A                                   l5249 285A  
                                 l5193 17F4                                   l4801 2198  
                                 l4705 27F4                                   l5089 2642  
                                 l5337 25E0                                   l5361 27A2  
                                 l5353 278C                                   l5345 274A  
                                 l5177 21F6                                   l5169 21C6  
                                 l5259 29EA                                   l4723 1DE0  
                                 l4715 1D1A                                   l5187 17CA  
                                 l4803 219E                                   l4707 27F8  
                                 l5339 25FC                                   l5363 27AA  
                                 l5347 274A                                   l5371 2704  
                                 l5179 2228                                   l4717 1D22  
                                 l4725 1E0A                                   l4709 1CE2  
                                 l5197 182A                                   l4741 1EF6  
                                 l4733 1ED8                                   l4805 21A4  
                                 l4821 2454                                   l4813 2412  
                                 l4901 1720                                   l5365 27D2  
                                 l5357 2790                                   l5349 275C  
                                 l5373 2716                                   l4719 1D84  
                                 l4831 266A                                   l5471 29BA  
                                 l5199 1882                                   l4751 1F2A  
                                 l4743 1F04                                   l4735 1EDC  
                                 l4807 21B4                                   l4823 2458  
                                 l4815 2420                                   l4911 1792  
                                 l4903 173C                                   l5359 2790  
                                 l5375 271E                                   l5481 23BE  
                                 l5473 238E                                   l4921 24FA  
                                 l4841 26B4                                   l4833 266A  
                                 l4761 1F64                                   l4753 1F32  
                                 l4745 1F0C                                   l4737 1EEA  
                                 l4809 21BC                                   l4825 2476  
                                 l4817 242C                                   l4913 1798  
                                 l4905 1756                                   l5377 2746  
                                 l5369 2704                                   l5483 23D4  
                                 l5475 2392                                   l4851 1978  
                                 l4923 250C                                   l4835 267C  
                                 l4771 1F8A                                   l4763 1F6C  
                                 l4755 1F3A                                   l4747 1F10  
                                 l4739 1EF2                                   l4827 281A  
                                 l4691 1E32                                   l4819 2440  
                                 l4915 17A8                                   l4907 1768  
                                 l5485 23E4                                   l5477 23A4  
                                 l4853 1980                                   l4861 1A80  
                                 l4845 1940                                   l4925 252E  
                                 l4837 2684                                   l4941 2326  
                                 l4933 22F8                                   l5469 29B6  
                                 l4773 1F92                                   l4765 1F6E  
                                 l4757 1F48                                   l4749 1F18  
                                 l4781 2128                                   l4829 2834  
                                 l4693 1E3C                                   l4909 1782  
                                 l5487 23F4                                   l5479 23B6  
                                 l4855 19E2                                   l4847 1944  
                                 l4927 2536                                   l4919 24FA  
                                 l4839 2698                                   l4951 2360  
                                 l4935 22F8                                   l4767 1F74  
                                 l4759 1F4E                                   l4791 215C  
                                 l4783 2130                                   l4695 1E5A  
                                 l4687 1E0E                                   l4871 164A  
                                 l5489 2404                                   l4849 1956  
                                 l4929 2562                                   l4953 237C  
                                 l4937 230A                                   l4769 1F7A  
                                 l4793 2164                                   l4785 2134  
                                 l4777 2116                                   l4697 1E90  
                                 l4689 1E20                                   l4881 169C  
                                 l4873 165A                                   l4961 1BDC  
                                 l6801 1520                                   l4859 1A3E  
                                 l4947 232E                                   l4955 238A  
                                 l4939 2312                                   l4795 216C  
                                 l4787 2142                                   l4779 211A  
                                 l4891 16D2                                   l4883 16A2  
                                 l4875 1662                                   l4971 1C2A  
                                 l4963 1BEA                                   l6811 1556  
                                 l6803 1530                                   l4949 235C  
                                 l4797 217A                                   l4789 214A  
                                 l4893 16DC                                   l4885 16B2  
                                 l4877 1670                                   l4869 1636  
                                 l4973 1C48                                   l4965 1BF8  
                                 l6821 15C2                                   l6813 1568  
                                 l6805 1540                                   l4991 1A84  
                                 l4799 2190                                   l4895 16E2  
                                 l4887 16BE                                   l4879 168C  
                                 l4975 1C8C                                   l4967 1BFC  
                                 l4983 1CB6                                   l4959 1BB6  
                                 l6831 162A                                   l6823 15DC  
                                 l6815 1588                                   l6807 1550  
                                 l4993 1A96                                   l4897 1714  
                                 l4889 16C6                                   l4969 1C0C  
                                 l6825 15EC                                   l6817 1598  
                                 l6809 1552                                   l6761 13B0  
                                 l4995 1A9E                                   l4899 171A  
                                 l4979 1CA4                                   l6827 1606  
                                 l6819 15B2                                   l6771 141A  
                                 l6763 13C2                                   l4997 1AC2  
                                 l4989 1A84                                   l6829 161A  
                                 l6781 1462                                   l6773 142A  
                                 l6765 13E2                                   l6757 138C  
                                 l6791 14C6                                   l6783 1472  
                                 l6775 142C                                   l6767 13FA  
                                 l6759 1390                                   l6793 14E0  
                                 l6785 148C                                   l6777 1430  
                                 l6769 140A                                   l6787 149C  
                                 l6779 1442                                   l6795 14F4  
                                 l6893 2034                                   l6797 1504  
                                 l6789 14B6                                   l6895 1DF4  
                                 l6799 1508                                   l6897 1A6A  
                                 STR_1 1021                                   STR_4 100D  
                                 _LATA 0F89                                   _LATB 0F8A  
                                 _LATC 0F8B                                   u4000 1FB2  
                                 _LATD 0F8C                                   u4001 1FAE  
                                 _LATE 0F8D                                   u4010 21DC  
                                 u4011 21D8                                   u4100 193E  
                                 u4020 21EE                                   u4101 193A  
                                 u4021 21EA                                   u4110 2074  
                                 u4030 2220                                   u4111 2070  
                                 u4120 2096                                   u3400 1E5A  
                                 u4040 224E                                   u4121 2092  
                                 u3401 1E56                                   u4130 20A8  
                                 u3410 1E90                                   u4050 225E  
                                 u4210 2578                                   u4131 20A4  
                                 u3411 1E8C                                   u4051 225A  
                                 u4211 2574                                   u4060 17E4  
                                 u3500 1F48                                   u3420 2818  
                                 u4220 258A                                   u4061 17E0  
                                 u3501 1F44                                   u3421 2814  
                                 u4037 2216                                   u4221 2586  
                                 u4310 23A4                                   u3430 1CF8  
                                 u4070 1826                                   u3510 1F64  
                                 u4230 25D8                                   u4311 23A0  
                                 u3431 1CF4                                   u4071 1822  
                                 u3511 1F60                                   u4231 25D4  
                                 u4047 2244                                   u4144 20FE  
                                 u4320 23B6                                   u3440 1D1A  
                                 u4080 1898                                   u3520 1F8A  
                                 u3600 2476                                   u4240 275C  
                                 u4145 20FA                                   u4321 23B2  
                                 u3441 1D16                                   u4081 1894  
                                 u3521 1F86                                   u3601 2472  
                                 u4241 2758                                   u4330 23E4  
                                 u4090 18DE                                   u3530 2128  
                                 u3610 2834                                   u4250 27A2  
                                 u4331 23E0                                   u4091 18DA  
                                 u3531 2124                                   u3611 2830  
                                 u4251 279E                                   u4340 2404  
                                 u3620 267C                                   u3540 2142  
                                 u3380 1E20                                   u3700 1648  
                                 u4260 2716                                   u4341 2400  
                                 u3621 2678                                   u3541 213E  
                                 u3381 1E1C                                   u4261 2712  
                                 u3630 1956                                   u3454 1D42  
                                 u3470 1EEA                                   u3550 215C  
                                 u3390 1E32                                   u3710 165A  
                                 u3631 1952                                   u3455 1D3E  
                                 u3471 1EE6                                   u3551 2158  
                                 u3391 1E2E                                   u3711 1656  
                                 u3640 1978                                   u3464 1DA4  
                                 u3800 252E                                   u3480 1F04  
                                 u3560 217A                                   u3720 1670  
                                 u6200 162A                                   u3641 1974  
                                 u3465 1DA0                                   u3801 252A  
                                 u3481 1F00                                   u3561 2176  
                                 u3721 166C                                   u6201 1626  
                                 u3810 230A                                   u3490 1F2A  
                                 u3570 2190                                   u3730 169C  
                                 u6130 140A                                   u3811 2306  
                                 u3491 1F26                                   u3571 218C  
                                 u3731 1698                                   u6131 1406  
                                 u3580 21B4                                   u3740 16B2  
                                 u6140 141A                                   u3581 21B0  
                                 u3741 16AE                                   u6141 1416  
                                 u3670 1A56                                   u3654 19A0  
                                 u3830 237C                                   u3590 2420  
                                 u3750 1756                                   u3910 22E6  
                                 u6150 142A                                   u3671 1A50  
                                 u3655 199C                                   u3831 2378  
                                 u3591 241C                                   u3751 1752  
                                 u3911 22E2                                   u6151 1426  
                                 u3680 1A58                                   u3664 1A02  
                                 u3920 28AA                                   u3824 234C  
                                 u3760 1768                                   u3840 1BDC  
                                 u3904 22B6                                   u6160 1504  
                                 u3665 19FE                                   u3921 28A6  
                                 u3825 2348                                   u3761 1764  
                                 u3841 1BD8                                   u3905 22B2  
                                 u6161 1500                                   u6217 147E  
                                 u3930 28E8                                   u3770 1782  
                                 u3690 1646                                   u3850 1C2A  
                                 u6170 1530                                   u3931 28E4  
                                 u3771 177E                                   u3691 1640  
                                 u3851 1C26                                   u6171 152C  
                                 u6227 14A8                                   u3780 1792  
                                 u3860 1C48                                   u3940 2660  
                                 u6180 1540                                   u3781 178E  
                                 u3861 1C44                                   u3941 265C  
                                 u6181 153C                                   u6237 14D2  
                                 u3790 250C                                   u3870 1A96  
                                 u6190 1550                                   u3791 2508  
                                 u3871 1A92                                   u6247 15A4  
                                 u6191 154C                                   u3880 1AFA  
                                 u3881 1AF6                                   u6257 15CE  
                                 u3890 2274                                   u3891 2270  
                                 u6267 15F8                                   u6277 1B00  
                                 u6287 1B20                                   u6297 1B3C  
                                 _TMR2 0FCC                    ??_Interrupt_manager 0002  
                                 abs@a 0008                                   _dbuf 0100  
                                 _main 138C                                   _dtoa 1636  
                                 _pir1 007C                                   _pir2 007B  
                     __end_of_CCP1_ISR 29E4                       __end_of_CCP2_ISR 29E0  
                                 _prec 005E                                   pad@i 0019  
                                 pad@p 0016                                   fsr0h 0FEA  
                                 fsr1h 0FE2                                   indf0 0FEF  
                                 fsr2h 0FDA                                   fsr0l 0FE9  
                                 indf2 0FDF                                   fsr1l 0FE1  
                                 pad@w 001B                                   fsr2l 0FD9  
                                 btemp 007D                _Timer1InterruptHandeler 00AD  
           lcd_8bit_initialize@lcd_obj 0017                                   prodl 0FF3  
                                 start 000E          __end_of_lcd_8bit_send_command 238E  
                         ___param_bank 0000                 dc_motor_initialize@ret 0012  
                                ??_abs 000A                   _gpio_pin_write_logic 1CE2  
                          ?_TIMER0_ISR 0001                            ?_TIMER1_ISR 0001  
                                ??_pad 0018                            ?_TIMER2_ISR 0001  
                          ?_TIMER3_ISR 0001        lcd_8bit_send_string_pos@lcd_obj 001E  
                     __end_of_INT0_ISR 29DC                       __end_of_INT1_ISR 29D8  
                     __end_of_INT2_ISR 29D4              __end_of_Interrupt_manager 138C  
                                ?_main 0001                                  ?_dtoa 001D  
             ??_application_initialize 001D                        __end_of___awdiv 1F9C  
                                _EEADR 0FA9                        __end_of___awmod 21C6  
                      ___awdiv@divisor 0004                                  i2l641 29E2  
                                i2l645 29DE                                  i2l832 29DA  
                                i2l840 29D2                                  i2l498 29E6  
                                i2l836 29D6                                  i2l858 2990  
                                i2l866 2976                                  i2l874 295C  
                                i2l882 2942                        ___awdiv@counter 0006  
                  relay_turn_off@F3207 0071                           vfpfcnvrt@fmt 002C  
                                _TMR0H 0FD7                                  _TMR1H 0FCF  
                                _TMR0L 0FD6                                  _TMR1L 0FCE  
                                _TMR3H 0FB3                                  _TMR3L 0FB2  
                                _PORTA 0F80                                  _PORTB 0F81  
                                _PORTC 0F82                                  _PORTD 0F83  
                                _PORTE 0F84                                  _TRISA 0F92  
                                _TRISB 0F93                                  _TRISC 0F94  
                                _TRISD 0F95                                  _TRISE 0F96  
                                _lcd_1 00DE                                  _flags 0068  
                                _fputc 1E0E                                  _fputs 27D6  
                                pad@fp 0012                                  _width 00A7  
                                _putch 29E8                                  dtoa@d 001F  
                                dtoa@i 0027                                  dtoa@p 0023  
                                dtoa@s 0029                                  dtoa@w 0025  
                                tablat 0FF5          __end_of_PIR_sensor_initialize 2902  
                    ??_Mcal_initialize 0002                                  ttemp5 007E  
                                ttemp6 0081                                  ttemp7 0085  
                                status 0FD8                                  wtemp8 007E  
                      __end_of_sprintf 2704             lcd_8bit_set_cursor@lcd_obj 0017  
          lcd_8bit_send_enable@lcd_obj 000C         ?_gpio_pin_direction_initialize 0002  
                      __initialization 248C                           __end_of_main 1636  
                         __end_of_dtoa 17CA                  ?_gpio_pin_write_logic 0002  
          lcd_8bit_send_string@lcd_obj 0017                              ??_ADC_ISR 0001  
               lcd_8bit_set_cursor@ret 001D                 lcd_8bit_set_cursor@row 0019  
                        _lat_registers 00C0            __end_of_dc_motor_initialize 28D6  
                               ??_main 00E8                                 ??_dtoa 0021  
                        __activetblptr 0003                       led_turn_on@F3206 006E  
                            ??_RB4_ISR 0001                              ??_RB5_ISR 0001  
                            ??_RB6_ISR 0001                              ??_RB7_ISR 0001  
                               ?_fputc 0002                                 ?_fputs 000B  
                               _ADRESH 0FC4                                 _EEADRH 0FAA  
                               _ADRESL 0FC3                                 _EEDATA 0FA8  
                               _CCPR1H 0FBF                                 _CCPR2H 0FBC  
                               _CCPR1L 0FBE                                 _CCPR2L 0FBB  
                               _EECON2 0FA7                       ___awdiv@dividend 0002  
                               ?_putch 0001                                 i2l1031 1068  
                               i2l1041 1198                                 i2l1033 1088  
                               i2l1051 12C8                                 i2l1043 11DC  
                               i2l1035 10CC                                 i2l1061 1368  
                               i2l1053 12E8                                 i2l1045 1220  
                               i2l1037 1110                                 i2l1029 1048  
                               i2l1150 29B4                                 i2l1055 1308  
                               i2l1047 1264                                 i2l1039 1154  
                               i2l1064 1388                                 i2l1233 29C6  
                               i2l1057 1328                                 i2l1049 12A8  
                               i2l1059 1348                                 i2l1193 29A8  
                               i2l1276 299C                                 i2l5401 297A  
                               i2l5403 297C                                 i2l5411 2960  
                               i2l5413 2962                                 i2l5421 2946  
                               i2l5407 2990                                 i2l5423 2948  
                               i2l5431 292C                                 i2l5417 2976  
                               i2l5433 292E                                 i2l5441 29AA  
                               i2l6401 11F8                                 i2l2883 29E4  
                               i2l5427 295C                                 i2l5443 29AC  
                               i2l5451 29A0                                 i2l6411 123C  
                               i2l6403 1206                                 i2l5381 29E0  
                               i2l5437 2942                                 i2l5445 29B0  
                               i2l5453 29A4                                 i2l5461 2992  
                               i2l6421 1280                                 i2l6413 124A  
                               i2l6405 1216                                 i2l6341 1056  
                               i2l5463 2994                                 i2l6431 12C4  
                               i2l6423 128E                                 i2l6415 125A  
                               i2l6407 121A                                 i2l6351 10A4  
                               i2l6343 1064                                 i2l6335 1028  
                               i2l5385 29DC                                 i2l5393 29D4  
                               i2l5449 299E                                 i2l5457 29C0  
                               i2l5465 2998                                 i2l6441 1316  
                               i2l6433 12D6                                 i2l6425 129E  
                               i2l6417 125E                                 i2l6409 122E  
                               i2l6361 10E8                                 i2l6353 10B2  
                               i2l6345 1076                                 i2l6337 1036  
                               i2l6451 1364                                 i2l6443 1324  
                               i2l6435 12E4                                 i2l6427 12A2  
                               i2l6419 1272                                 i2l6371 112C  
                               i2l6363 10F6                                 i2l6355 10C2  
                               i2l6347 1084                                 i2l6339 1044  
                               i2l5389 29D8                                 i2l5397 29D0  
                               i2l6453 1376                                 i2l6445 1336  
                               i2l6437 12F6                                 i2l6429 12B6  
                               i2l6381 1170                                 i2l6373 113A  
                               i2l6365 1106                                 i2l6357 10C6  
                               i2l6349 1096                                 i2l6455 1384  
                               i2l6447 1344                                 i2l6439 1304  
                               i2l6391 11B4                                 i2l6383 117E  
                               i2l6375 114A                                 i2l6367 110A  
                               i2l6359 10DA                                 i2l6449 1356  
                               i2l6393 11C2                                 i2l6385 118E  
                               i2l6377 114E                                 i2l6369 111E  
                               i2l6395 11D2                                 i2l6387 1192  
                               i2l6379 1162                                 i2l6397 11D6  
                               i2l6389 11A6                                 i2l6399 11EA  
                        _RBx_Call_Back 0080            __end_of_dc_motor_move_right 2790  
                         vfprintf@cfmt 003E                   _lcd_8bit_send_enable 266A  
                            ??___awdiv 0006                              ??___awmod 0006  
                    _numper_places_str 00B9                   _lcd_8bit_send_string 21C6  
                               _memset 17CA                                 clear_0 24D2  
                               clear_1 24DE                                 clear_2 24EA  
                     ___awdiv@quotient 0008                        ___awmod@divisor 0004  
                               isa$std 0001                        ___awmod@counter 0006  
                               pad@buf 0014                                 dtoa@fp 001D  
          lcd_8bit_send_string_pos@ret 0024            lcd_8bit_send_string_pos@row 0020  
              _Timer2InterruptHandeler 00AB                                 fputc@c 0002  
                            ?_CCP1_ISR 0001                                 fputs@c 000F  
                               fputs@i 0010                           __pdataCOMRAM 0076  
                            ?_CCP2_ISR 0001                                 fputs@s 000B  
                         __mediumconst 0000                                 tblptrh 0FF7  
                               tblptrl 0FF6                                 tblptru 0FF8  
                               putch@c 0001                       __end_of_vfprintf 266A  
                            ??_sprintf 0048                             __accesstop 0080  
              __end_of__initialization 24F0               ??_convert_byte_to_string 0058  
                            ?_INT0_ISR 0001                              ?_INT1_ISR 0001  
                            ?_INT2_ISR 0001                          ___rparam_used 0001  
                ?_lcd_8bit_send_enable 000C                 ??_gpio_pin_write_logic 0005  
                       __pcstackCOMRAM 0001               PIR_sensor_read@pir_state 000E  
                         __pidataBANK0 2902                          __end_of_fputc 1ED8  
                        __end_of_fputs 281A                  ?_lcd_8bit_send_string 0017  
                    ??_PIR_sensor_read 0010           convert_short_to_string@F3350 00A1  
                        __end_of_putch 29EA                         _INTx_Call_Back 009B  
                    RB5_ISR@RB5_source 0001                             ??_CCP1_ISR 0001  
                           ??_CCP2_ISR 0001                     _lcd_8bit_send_char 2262  
                              ??_fputc 0006                                ??_fputs 000F  
                              ??_putch 0002                             __pbssBANK0 0080  
                           __pbssBANK1 0100                    ?_lcd_8bit_send_char 000F  
                           ??_INT0_ISR 0001                             ??_INT1_ISR 0001  
                           ??_INT2_ISR 0001                 _application_initialize 29B6  
               lcd_8bit_initialize@ret 001C                      led_turn_off@F3211 006D  
                         ??_TIMER0_ISR 0001                           ??_TIMER1_ISR 0001  
                         ??_TIMER2_ISR 0001                           ??_TIMER3_ISR 0001  
                              _ADC_ISR 29E4                        led_toggle@F3216 006C  
                              ?_memset 0002                   ??_lcd_8bit_send_char 0012  
                              _RB4_ISR 2978                                _RB5_ISR 295E  
                              _RB6_ISR 2944                                _RB7_ISR 292A  
                      _Mcal_initialize 29EA                      RB7_ISR@RB7_source 0001  
                           _btn_values 1001                         _tris_registers 00D4  
                   __end_of_TIMER0_ISR 29B6                     __end_of_TIMER1_ISR 29AA  
                   __end_of_TIMER2_ISR 29C8                     __end_of_TIMER3_ISR 299E  
              _Timer3InterruptHandeler 00A9                 ??_lcd_8bit_send_enable 000E  
                              __Hparam 0000                                __Lparam 0000  
                           _pir1_state 0075                  dc_motor_move_left@ret 000E  
                           _pir2_state 0074                 ??_lcd_8bit_send_string 001B  
                  _gpio_pin_initialize 24FA                  _lcd_8bit_send_command 22F8  
                  _gpio_pin_read_logic 205E                                ___awdiv 1ED8  
                              ___awmod 2116                              ?_vfprintf 0038  
                         __psmallconst 1000                                __pcinit 248C  
                              __ramtop 1000               _lcd_8bit_send_string_pos 2566  
                              __ptext0 138C                                __ptext1 2566  
                              __ptext2 1F9C                                __ptext3 21C6  
                              __ptext4 2262                                __ptext5 2704  
                              __ptext6 274A                                __ptext7 2790  
                              __ptext8 25C0                                __ptext9 26B8  
                            _T0CONbits 0FD5                              _T1CONbits 0FCD  
      ??_gpio_pin_direction_initialize 0004                              _T2CONbits 0FCA  
                            _T3CONbits 0FB1                       ___awmod@dividend 0002  
                              _motor_1 0079                                _motor_2 0077  
                 ?_gpio_pin_initialize 000C                   ?_gpio_pin_read_logic 0002  
                              _sprintf 26B8                         __pintcode_body 1026  
                 end_of_initialization 24F0                                fputc@fp 0004  
                              memset@c 0004                                memset@k 000A  
                              memset@n 0006                                memset@s 000C  
                              int_func 1026                                fputs@fp 000D  
                _PIR_sensor_initialize 28D6                          _dc_motor_stop 2704  
                    __end_of_vfpfcnvrt 1CE2                                postdec1 0FE5  
                              postdec2 0FDD                                postinc0 0FEE  
                              postinc1 0FE6                                postinc2 0FDE  
                     vfpfcnvrt@convarg 0032                             ??_vfprintf 003E  
              __end_of_Mcal_initialize 29EC                    lcd_8bit_send_char@i 0015  
          dc_motor_move_right@dc_motor 000C                              _PORTBbits 0F81  
               _convert_byte_to_string 25C0               PIR_sensor_initialize@ret 0012  
                       _ecu_initialize 285A                  ??_gpio_pin_initialize 000E  
                ??_gpio_pin_read_logic 0006                            _CCP1CONbits 0FBD  
                          _CCP2CONbits 0FBA                        _PIR_sensor_read 238E  
                       ?_dc_motor_stop 000C                     relay_turn_on@F3202 0072  
               ?_lcd_8bit_send_command 000F                      relay_toggle@F3212 0070  
       lcd_8bit_send_string_pos@column 0021                            vfpfcnvrt@ap 002E  
                          vfpfcnvrt@cp 0036                            vfpfcnvrt@fp 002A  
               __end_of_ecu_initialize 2898                          __pidataCOMRAM 29C8  
       lcd_8bit_send_string_pos@string 0022                         _timer0_preload 0064  
                       __end_of_memset 1940                         _timer1_preload 0062  
                       _timer2_preload 006B                    start_initialization 248C  
                       _timer3_preload 0060              lcd_8bit_send_char@lcd_obj 000F  
                  _lcd_8bit_initialize 1A84                            __end_of_abs 285A  
                          __end_of_pad 248C  __end_of_gpio_pin_direction_initialize 1A84  
        _gpio_pin_direction_initialize 1940                ?_application_initialize 0001  
           lcd_8bit_send_string@string 0019                 ?_PIR_sensor_initialize 0010  
           convert_int_to_string@F3357 0090                   ?_lcd_8bit_initialize 0017  
           __end_of_dc_motor_move_left 27D6                            vfprintf@fmt 003A  
        CCP1_Compare_write_value@F3305 00B1              convert_byte_to_string@ret 0059  
                          __pdataBANK0 00C0              convert_byte_to_string@str 0056  
                             ?_ADC_ISR 0001                               ??_memset 0008  
                     ?_Mcal_initialize 0001                        ?_ecu_initialize 0001  
                  _lcd_8bit_set_cursor 1F9C                             memset@dest 0002  
             lcd_8bit_send_command@ret 0014                       dc_motor_stop@ret 000E  
          convert_byte_to_string@value 0058                 _CCP1_InterruptHandeler 00B7  
                             ?_RB4_ISR 0001                               ?_RB5_ISR 0001  
                             ?_RB6_ISR 0001                               ?_RB7_ISR 0001  
                          __pbssCOMRAM 005A           CCP1_Capture_read_value@F3295 00B3  
                        __pcstackBANK0 00E8         __end_of_application_initialize 29C0  
              __end_of_PIR_sensor_read 2412             dc_motor_move_left@dc_motor 000C  
                 ?_lcd_8bit_set_cursor 0017           PIR_sensor_initialize@Pir_obj 0010  
                      ??_dc_motor_stop 000E                              __pnvBANK0 00EA  
                ??_lcd_8bit_initialize 0019             ??_lcd_8bit_send_string_pos 0024  
                            _dtoa$3622 0021                              __pintcode 0008  
                             ?___awdiv 0002                               ?___awmod 0002  
                          __smallconst 1000                               _CCP1_ISR 29E0  
                             _CCP2_ISR 29DC                              _pir1_flag 006A  
                            _pir2_flag 0069                               ?_sprintf 0040  
                ??_lcd_8bit_set_cursor 001B                               _INT0_ISR 29D8  
                             _INT1_ISR 29D4                               _INT2_ISR 29D0  
                             _PIE1bits 0F9D                               _PIE2bits 0FA0  
                             i2u430_40 293E                               i2u430_41 293A  
                             _PIR1bits 0F9E                               i2u530_40 1056  
                             i2u530_41 1052                               i2u427_40 298C  
                             i2u531_40 1064                               i2u427_41 2988  
                             i2u531_41 1060                               _PIR2bits 0FA1  
                             i2u428_40 2972                               i2u540_40 10F6  
                             i2u532_40 1076                               i2u428_41 296E  
                             i2u540_41 10F2                               i2u532_41 1072  
                             i2u429_40 2958                               i2u541_40 1106  
                             i2u533_40 1084                               i2u429_41 2954  
                             i2u541_41 1102                               i2u533_41 1080  
                             i2u550_40 11A6                               i2u542_40 111E  
                             i2u534_40 1096                               i2u550_41 11A2  
                             i2u542_41 111A                               i2u534_41 1092  
                             i2u551_40 11B4                               i2u543_40 112C  
                             i2u535_40 10A4                               i2u551_41 11B0  
                             i2u543_41 1128                               i2u535_41 10A0  
                             i2u560_40 124A                               i2u552_40 11C2  
                             i2u544_40 113A                               i2u536_40 10B2  
                             i2u528_40 1036                               i2u560_41 1246  
                             i2u552_41 11BE                               i2u544_41 1136  
                             i2u536_41 10AE                               i2u528_41 1032  
                             i2u561_40 125A                               i2u553_40 11D2  
                             i2u545_40 114A                               i2u537_40 10C2  
                             i2u529_40 1044                               i2u561_41 1256  
                             i2u553_41 11CE                               i2u545_41 1146  
                             i2u537_41 10BE                               i2u529_41 1040  
                             i2u570_40 12F6                               i2u562_40 1272  
                             i2u554_40 11EA                               i2u546_40 1162  
                             i2u538_40 10DA                               i2u570_41 12F2  
                             i2u562_41 126E                               i2u554_41 11E6  
                             i2u546_41 115E                               i2u538_41 10D6  
                             i2u571_40 1304                               i2u563_40 1280  
                             i2u555_40 11F8                               i2u547_40 1170  
                             i2u539_40 10E8                               i2u571_41 1300  
                             i2u563_41 127C                               i2u555_41 11F4  
                             i2u547_41 116C                               i2u539_41 10E4  
                             i2u572_40 1316                               i2u564_40 128E  
                             i2u556_40 1206                               i2u548_40 117E  
                             i2u572_41 1312                               i2u564_41 128A  
                             i2u556_41 1202                               i2u548_41 117A  
                             i2u573_40 1324                               i2u565_40 129E  
                             i2u557_40 1216                               i2u549_40 118E  
                             i2u573_41 1320                               i2u565_41 129A  
                             i2u557_41 1212                               i2u549_41 118A  
                             i2u574_40 1336                               i2u566_40 12B6  
                             i2u558_40 122E                               i2u574_41 1332  
                             i2u566_41 12B2                               i2u558_41 122A  
                             i2u575_40 1344                               i2u567_40 12C4  
                             i2u559_40 123C                               i2u575_41 1340  
                             i2u567_41 12C0                               i2u559_41 1238  
                             i2u576_40 1356                               i2u568_40 12D6  
                             i2u576_41 1352                               i2u568_41 12D2  
                             i2u577_40 1364                               i2u569_40 12E4  
                             i2u577_41 1360                               i2u569_41 12E0  
                             i2u578_40 1376                               i2u578_41 1372  
                             i2u579_40 1384                               i2u579_41 1380  
                  _dc_motor_initialize 2898       gpio_pin_direction_initialize@pin 0002  
     gpio_pin_direction_initialize@ret 000A                      RB4_ISR@RB4_source 0001  
              ?_convert_byte_to_string 0056                              _vfpfcnvrt 1BB6  
                           _ADCON0bits 0FC2                             _ADCON1bits 0FC1  
                           _ADCON2bits 0FC0                               _RBx_flag 005A  
               gpio_pin_initialize@pin 000C                 gpio_pin_initialize@ret 000F  
            lcd_8bit_set_cursor@column 001A                   ?_dc_motor_initialize 0010  
              gpio_pin_write_logic@log 0004                gpio_pin_write_logic@pin 0002  
              gpio_pin_write_logic@ret 000B                            _INTCON2bits 0FF1  
                     ?_PIR_sensor_read 000C                            _INTCON3bits 0FF0  
                            copy_data0 24A0                              copy_data1 24C0  
                _ADC_InterruptCallBack 0066                    _dc_motor_move_right 274A  
              lcd_8bit_send_enable@ret 000E                 gpio_pin_read_logic@log 0004  
               gpio_pin_read_logic@pin 0002                 gpio_pin_read_logic@ret 000B  
              ??_lcd_8bit_send_command 0012                             _EECON1bits 0FA6  
                             __Hrparam 0000                             vfprintf@ap 003C  
                             __Lrparam 0000                             vfprintf@fp 0038  
       __end_of_convert_byte_to_string 261A                  dc_motor_stop@dc_motor 000C  
                           ?_vfpfcnvrt 002A                   ?_dc_motor_move_right 000C  
          __end_of_gpio_pin_initialize 2566                     __end_of_btn_values 100D  
          __end_of_gpio_pin_read_logic 2116                             sprintf@fmt 0042  
                    RB6_ISR@RB6_source 0001                   lcd_8bit_initialize@i 001A  
                ??_dc_motor_initialize 0012                               __ptext10 261A  
                             __ptext11 1BB6                               __ptext20 17CA  
                             __ptext12 1636                               __ptext21 29B6  
                             __ptext13 2412                               __ptext30 1940  
                             __ptext22 285A                               __ptext14 27D6  
                             __ptext31 29EA                               __ptext23 1A84  
                             __ptext15 1E0E                               __ptext40 2944  
                             __ptext32 238E                               __ptext24 22F8  
                             __ptext16 29E8                               __ptext41 295E  
                             __ptext33 205E                               __ptext25 266A  
                             __ptext17 281A                               __ptext42 2978  
                             __ptext26 2898                               __ptext18 2116  
                             __ptext43 29D0                               __ptext35 2992  
                             __ptext27 28D6                               __ptext19 1ED8  
                             __ptext44 29D4                               __ptext36 29C0  
                             __ptext28 24FA                               __ptext45 29D8  
                             __ptext37 299E                               __ptext29 1CE2  
                             __ptext46 29DC                               __ptext38 29AA  
                             __ptext47 29E0                               __ptext39 292A  
                             __ptext48 29E4                 dc_motor_move_right@ret 000E  
              ??_PIR_sensor_initialize 0012       __end_of_lcd_8bit_send_string_pos 25C0  
                     ??_ecu_initialize 001D                               isa$xinst 0000  
                             int$flags 007D                               _vfprintf 261A  
          dc_motor_initialize@dc_motor 0010                  ??_dc_motor_move_right 000E  
              _Timer0InterruptHandeler 00AF                     _dc_motor_move_left 2790  
                           _INTCONbits 0FF2                 lcd_8bit_send_command@i 0015  
         __end_of_gpio_pin_write_logic 1E0E                    ?_dc_motor_move_left 000C  
                             intlevel2 0000                              sprintf@ap 0048  
                lcd_8bit_send_char@chr 0011                  lcd_8bit_send_char@ret 0014  
                 ??_dc_motor_move_left 000E                             _TIMER0_ISR 29AA  
                           _TIMER1_ISR 299E                             _TIMER2_ISR 29C0  
                           _TIMER3_ISR 2992                            ??_vfpfcnvrt 0030  
                        _numper_places 0076                               sprintf@f 004A  
                             sprintf@s 0040                 _CCP2_InterruptHandeler 00B5  
                       _port_registers 00CA                lcd_8bit_send_string@ret 001B  
          __end_of_lcd_8bit_initialize 1BB6           lcd_8bit_send_command@lcd_obj 000F  
         lcd_8bit_send_command@command 0011                  __end_of_dc_motor_stop 274A  
